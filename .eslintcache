[{"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\auth\\index.js":"1","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\auth\\index.js":"2","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\Signin.js":"3","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\Signin.js":"4","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ResetPassword.js":"5","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ForgetPassword.js":"6","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\Routes.js":"7","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ForgetPassword.js":"8","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ResetPassword.js":"9","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ResetPassword.js":"10","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\Signup.js":"11","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AdminActivation.js":"12","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\auth\\index.js":"13","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Menu.js":"14","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\App.js":"15","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodlancerProducts.js":"16","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Activation.js":"17","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodlancerProfile.js":"18","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Home.js":"19","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodieContaact.js":"20","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ShippedOrder.js":"21","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ProcessingOrder.js":"22","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerContact.js":"23","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllOrders.js":"24","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\UpdateProduct.js":"25","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AddCategory.js":"26","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllFoodlancers.js":"27","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllFoodies.js":"28","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Orders.js":"29","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\apiCore.js":"30","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Search.js":"31","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\apiAdmin.js":"32","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ShowImage.js":"33","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\RadioBox.js":"34","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ShowImage.js":"35","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Checkout.js":"36","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\Signup.js":"37","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ETA.js":"38","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Shop.js":"39","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Home.js":"40","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\Signin.js":"41","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\Signup.js":"42","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AdminProfile.js":"43","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\NewOrder.js":"44","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AcceptOrder.js":"45","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\CancelOrder.js":"46","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ManageProducts.js":"47","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllAdmins.js":"48","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\AllOrders.js":"49","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\NewOrder.js":"50","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\AcceptOrder.js":"51","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\DeliveredOrder.js":"52","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\CancelOrder.js":"53","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\index.js":"54","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerDashborard.js":"55","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Profile.js":"56","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\FoodlancerProfile.js":"57","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\auth\\PrivateRoute.js":"58","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\FoodieProfile.js":"59","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Layout.js":"60","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Card.js":"61","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\apiFoodlancer.js":"62","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\cartHelpers.js":"63","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Checkbox.js":"64","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Footer.js":"65","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ShopShowImage.js":"66","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\CardFoodlancer.js":"67","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Card.js":"68","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Cart.js":"69","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Product.js":"70","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\auth\\PrivateRoute.js":"71","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Layout.js":"72","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Menu.js":"73","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\config.js":"74","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Menu.js":"75","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\fixedPrices.js":"76","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\apiFoodie.js":"77","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ShowImageCheckout.js":"78","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodieDashborard.js":"79","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AddProduct.js":"80","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\CheckoutCard.js":"81","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\cartHelpers.js":"82","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\AddProduct.js":"83","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AdminDashborard.js":"84","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\apiCore.js":"85","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Profile.js":"86","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Home.js":"87","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Layout.js":"88","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\UpdateProduct.js":"89","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ManageProducts.js":"90","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\auth\\PrivateRoute.js":"91","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\App.js":"92","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ResetPassword.js":"93","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Product.js":"94","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\FoodieContaact.js":"95","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ResetPassword.js":"96","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\NewOrder.js":"97","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\Home.js":"98","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\AllOrders.js":"99","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ManageProducts.js":"100","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\Signin.js":"101","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\Signup.js":"102","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AdminActivation.js":"103","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AllOrders.js":"104","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\NewOrder.js":"105","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\ForgetPassword.js":"106","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\FoodlancerProfile.js":"107","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AllFoodies.js":"108","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ProcessingOrder.js":"109","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AddProduct.js":"110","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Activation.js":"111","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AddCategory.js":"112","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Orders.js":"113","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\apiFoodie.js":"114","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\auth\\index.js":"115","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\apiAdmin.js":"116","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ShowImage.js":"117","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\config.js":"118","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\cartHelpers.js":"119","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Menu.js":"120","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Footer.js":"121","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\RadioBox.js":"122","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Checkout.js":"123","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Card.js":"124","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\Signin.js":"125","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\Signup.js":"126","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\Signup.js":"127","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerDashborard.js":"128","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Menu.js":"129","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\Menu.js":"130","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Search.js":"131","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\ShowImage.js":"132","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\CheckoutCard.js":"133","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\FoodlancerProducts.js":"134","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Shop.js":"135","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\Signin.js":"136","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ForgetPassword.js":"137","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\ResetPassword.js":"138","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Layout.js":"139","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Card.js":"140","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Home.js":"141","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\UpdateProduct.js":"142","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AdminProfile.js":"143","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\CardFoodlancer.js":"144","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Home.js":"145","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\fixedPrices.js":"146","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerContact.js":"147","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\Footer.js":"148","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\FoodieDashborard.js":"149","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\apiCore.js":"150","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Profile.js":"151","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ShippedOrder.js":"152","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\UpdateProduct.js":"153","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\CancelOrder.js":"154","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\FoodieProfile.js":"155","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\auth\\PrivateRoute.js":"156","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Layout.js":"157","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\apiFoodlancer.js":"158","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Checkbox.js":"159","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ShowImageCheckout.js":"160"},{"size":4870,"mtime":1608379515755,"results":"161","hashOfConfig":"162"},{"size":2701,"mtime":1608681199657,"results":"163","hashOfConfig":"162"},{"size":5587,"mtime":1608591449144,"results":"164","hashOfConfig":"162"},{"size":10516,"mtime":1608589864676,"results":"165","hashOfConfig":"162"},{"size":1979,"mtime":1608344980027,"results":"166","hashOfConfig":"162"},{"size":1937,"mtime":1608344065895,"results":"167","hashOfConfig":"162"},{"size":9836,"mtime":1609029970938,"results":"168","hashOfConfig":"162"},{"size":1932,"mtime":1608344572738,"results":"169","hashOfConfig":"162"},{"size":1969,"mtime":1608345250578,"results":"170","hashOfConfig":"162"},{"size":1964,"mtime":1608345253804,"results":"171","hashOfConfig":"162"},{"size":11412,"mtime":1608591127147,"results":"172","hashOfConfig":"162"},{"size":3131,"mtime":1608379153944,"results":"173","hashOfConfig":"162"},{"size":5412,"mtime":1608469847672,"results":"174","hashOfConfig":"162"},{"size":4497,"mtime":1608468566965,"results":"175","hashOfConfig":"162"},{"size":68,"mtime":1606742963071,"results":"176","hashOfConfig":"162"},{"size":1363,"mtime":1607966498930,"results":"177","hashOfConfig":"162"},{"size":3129,"mtime":1608486352511,"results":"178","hashOfConfig":"162"},{"size":1860,"mtime":1608683865944,"results":"179","hashOfConfig":"162"},{"size":245,"mtime":1606776200453,"results":"180","hashOfConfig":"162"},{"size":3766,"mtime":1608339216408,"results":"181","hashOfConfig":"162"},{"size":8991,"mtime":1609116482413,"results":"182","hashOfConfig":"162"},{"size":8876,"mtime":1609106883068,"results":"183","hashOfConfig":"162"},{"size":3772,"mtime":1608339274463,"results":"184","hashOfConfig":"162"},{"size":7052,"mtime":1608943885403,"results":"185","hashOfConfig":"162"},{"size":8301,"mtime":1609021344652,"results":"186","hashOfConfig":"162"},{"size":2836,"mtime":1608943746934,"results":"187","hashOfConfig":"162"},{"size":5405,"mtime":1608943888904,"results":"188","hashOfConfig":"162"},{"size":7369,"mtime":1608943893226,"results":"189","hashOfConfig":"162"},{"size":6723,"mtime":1608594633612,"results":"190","hashOfConfig":"162"},{"size":4742,"mtime":1607981955984,"results":"191","hashOfConfig":"162"},{"size":3719,"mtime":1608061852341,"results":"192","hashOfConfig":"162"},{"size":10440,"mtime":1608507001648,"results":"193","hashOfConfig":"162"},{"size":346,"mtime":1608231074549,"results":"194","hashOfConfig":"162"},{"size":662,"mtime":1606952854069,"results":"195","hashOfConfig":"162"},{"size":415,"mtime":1608682703088,"results":"196","hashOfConfig":"162"},{"size":6971,"mtime":1608926999815,"results":"197","hashOfConfig":"162"},{"size":12008,"mtime":1608837926820,"results":"198","hashOfConfig":"162"},{"size":7471,"mtime":1608503754979,"results":"199","hashOfConfig":"162"},{"size":7497,"mtime":1608929543975,"results":"200","hashOfConfig":"162"},{"size":5551,"mtime":1608588525416,"results":"201","hashOfConfig":"162"},{"size":13967,"mtime":1608836849781,"results":"202","hashOfConfig":"162"},{"size":6967,"mtime":1608681933775,"results":"203","hashOfConfig":"162"},{"size":3042,"mtime":1608943669370,"results":"204","hashOfConfig":"162"},{"size":8861,"mtime":1608943962061,"results":"205","hashOfConfig":"162"},{"size":8829,"mtime":1608943968239,"results":"206","hashOfConfig":"162"},{"size":8822,"mtime":1608943975216,"results":"207","hashOfConfig":"162"},{"size":4282,"mtime":1609019697862,"results":"208","hashOfConfig":"162"},{"size":5220,"mtime":1608943897273,"results":"209","hashOfConfig":"162"},{"size":8778,"mtime":1609116505093,"results":"210","hashOfConfig":"162"},{"size":9026,"mtime":1609116162541,"results":"211","hashOfConfig":"162"},{"size":9002,"mtime":1609107033301,"results":"212","hashOfConfig":"162"},{"size":9005,"mtime":1609105640893,"results":"213","hashOfConfig":"162"},{"size":9046,"mtime":1609106917615,"results":"214","hashOfConfig":"162"},{"size":310,"mtime":1606749874744,"results":"215","hashOfConfig":"162"},{"size":7545,"mtime":1609030173462,"results":"216","hashOfConfig":"162"},{"size":4441,"mtime":1608930320027,"results":"217","hashOfConfig":"162"},{"size":2842,"mtime":1607517921629,"results":"218","hashOfConfig":"162"},{"size":589,"mtime":1606919665045,"results":"219","hashOfConfig":"162"},{"size":2806,"mtime":1607517912894,"results":"220","hashOfConfig":"162"},{"size":472,"mtime":1608330153919,"results":"221","hashOfConfig":"162"},{"size":3970,"mtime":1608231007621,"results":"222","hashOfConfig":"162"},{"size":8261,"mtime":1609116316633,"results":"223","hashOfConfig":"162"},{"size":2514,"mtime":1606953157715,"results":"224","hashOfConfig":"162"},{"size":1142,"mtime":1606952854248,"results":"225","hashOfConfig":"162"},{"size":3342,"mtime":1608208864724,"results":"226","hashOfConfig":"162"},{"size":378,"mtime":1608339774562,"results":"227","hashOfConfig":"162"},{"size":1499,"mtime":1608683992096,"results":"228","hashOfConfig":"162"},{"size":4576,"mtime":1608747619764,"results":"229","hashOfConfig":"162"},{"size":2158,"mtime":1608905474394,"results":"230","hashOfConfig":"162"},{"size":1906,"mtime":1607002918042,"results":"231","hashOfConfig":"162"},{"size":579,"mtime":1606919776197,"results":"232","hashOfConfig":"162"},{"size":472,"mtime":1608329848788,"results":"233","hashOfConfig":"162"},{"size":3129,"mtime":1608330929242,"results":"234","hashOfConfig":"162"},{"size":102,"mtime":1606752903527,"results":"235","hashOfConfig":"162"},{"size":4724,"mtime":1608338131200,"results":"236","hashOfConfig":"162"},{"size":507,"mtime":1606952854312,"results":"237","hashOfConfig":"162"},{"size":2919,"mtime":1608322411347,"results":"238","hashOfConfig":"162"},{"size":370,"mtime":1608211719683,"results":"239","hashOfConfig":"162"},{"size":5751,"mtime":1608160127672,"results":"240","hashOfConfig":"162"},{"size":6200,"mtime":1608943823519,"results":"241","hashOfConfig":"162"},{"size":5035,"mtime":1608213043136,"results":"242","hashOfConfig":"162"},{"size":2514,"mtime":1606946752293,"results":"243","hashOfConfig":"162"},{"size":6365,"mtime":1608941080686,"results":"244","hashOfConfig":"162"},{"size":4576,"mtime":1608160210178,"results":"245","hashOfConfig":"162"},{"size":3743,"mtime":1606946484935,"results":"246","hashOfConfig":"162"},{"size":4015,"mtime":1608213344496,"results":"247","hashOfConfig":"162"},{"size":1887,"mtime":1606946672355,"results":"248","hashOfConfig":"162"},{"size":566,"mtime":1608037759968,"results":"249","hashOfConfig":"162"},{"size":8306,"mtime":1609030112960,"results":"250","hashOfConfig":"162"},{"size":5804,"mtime":1609079066768,"results":"251","hashOfConfig":"162"},{"size":584,"mtime":1606919784517,"results":"252","hashOfConfig":"162"},{"size":68,"mtime":1606742963071,"results":"253","hashOfConfig":"254"},{"size":3038,"mtime":1609886267861,"results":"255","hashOfConfig":"254"},{"size":3283,"mtime":1609980790275,"results":"256","hashOfConfig":"254"},{"size":3897,"mtime":1609975527711,"results":"257","hashOfConfig":"254"},{"size":1979,"mtime":1608344980027,"results":"258","hashOfConfig":"254"},{"size":9063,"mtime":1610048323761,"results":"259","hashOfConfig":"254"},{"size":245,"mtime":1606776200453,"results":"260","hashOfConfig":"254"},{"size":8940,"mtime":1610050233370,"results":"261","hashOfConfig":"254"},{"size":6015,"mtime":1609893858763,"results":"262","hashOfConfig":"254"},{"size":11082,"mtime":1609977287208,"results":"263","hashOfConfig":"254"},{"size":11844,"mtime":1609977410300,"results":"264","hashOfConfig":"254"},{"size":3131,"mtime":1608379153944,"results":"265","hashOfConfig":"254"},{"size":7052,"mtime":1608943885403,"results":"266","hashOfConfig":"254"},{"size":8861,"mtime":1608943962061,"results":"267","hashOfConfig":"254"},{"size":2974,"mtime":1609887965490,"results":"268","hashOfConfig":"254"},{"size":2842,"mtime":1607517921629,"results":"269","hashOfConfig":"254"},{"size":7369,"mtime":1608943893226,"results":"270","hashOfConfig":"254"},{"size":8876,"mtime":1609106883068,"results":"271","hashOfConfig":"254"},{"size":6200,"mtime":1608943823519,"results":"272","hashOfConfig":"254"},{"size":3129,"mtime":1608486352511,"results":"273","hashOfConfig":"254"},{"size":2836,"mtime":1608943746934,"results":"274","hashOfConfig":"254"},{"size":6723,"mtime":1608594633612,"results":"275","hashOfConfig":"254"},{"size":2919,"mtime":1608322411347,"results":"276","hashOfConfig":"254"},{"size":4870,"mtime":1608379515755,"results":"277","hashOfConfig":"254"},{"size":10440,"mtime":1608507001648,"results":"278","hashOfConfig":"254"},{"size":526,"mtime":1609884014893,"results":"279","hashOfConfig":"254"},{"size":102,"mtime":1606752903527,"results":"280","hashOfConfig":"254"},{"size":2668,"mtime":1609975756487,"results":"281","hashOfConfig":"254"},{"size":4606,"mtime":1609946028431,"results":"282","hashOfConfig":"254"},{"size":4414,"mtime":1610025324785,"results":"283","hashOfConfig":"254"},{"size":662,"mtime":1606952854069,"results":"284","hashOfConfig":"254"},{"size":7740,"mtime":1609978471915,"results":"285","hashOfConfig":"254"},{"size":5116,"mtime":1609979285850,"results":"286","hashOfConfig":"254"},{"size":6163,"mtime":1609980045498,"results":"287","hashOfConfig":"254"},{"size":7360,"mtime":1609977393784,"results":"288","hashOfConfig":"254"},{"size":12081,"mtime":1609977155484,"results":"289","hashOfConfig":"254"},{"size":7570,"mtime":1609768752521,"results":"290","hashOfConfig":"254"},{"size":3244,"mtime":1609946451090,"results":"291","hashOfConfig":"254"},{"size":4839,"mtime":1609949877610,"results":"292","hashOfConfig":"254"},{"size":4202,"mtime":1609972844445,"results":"293","hashOfConfig":"254"},{"size":526,"mtime":1609884041830,"results":"294","hashOfConfig":"254"},{"size":5292,"mtime":1609979235006,"results":"295","hashOfConfig":"254"},{"size":3638,"mtime":1610022339535,"results":"296","hashOfConfig":"254"},{"size":6885,"mtime":1609981442581,"results":"297","hashOfConfig":"254"},{"size":14115,"mtime":1610025363558,"results":"298","hashOfConfig":"254"},{"size":3009,"mtime":1609886106711,"results":"299","hashOfConfig":"254"},{"size":3045,"mtime":1609888125348,"results":"300","hashOfConfig":"254"},{"size":456,"mtime":1609888226866,"results":"301","hashOfConfig":"254"},{"size":3969,"mtime":1609974514449,"results":"302","hashOfConfig":"254"},{"size":4282,"mtime":1609946610861,"results":"303","hashOfConfig":"254"},{"size":8301,"mtime":1609888670451,"results":"304","hashOfConfig":"254"},{"size":3042,"mtime":1609888718881,"results":"305","hashOfConfig":"254"},{"size":1549,"mtime":1609970952066,"results":"306","hashOfConfig":"254"},{"size":5551,"mtime":1609972924170,"results":"307","hashOfConfig":"254"},{"size":543,"mtime":1609973708882,"results":"308","hashOfConfig":"254"},{"size":3917,"mtime":1609978269228,"results":"309","hashOfConfig":"254"},{"size":4333,"mtime":1609978218249,"results":"310","hashOfConfig":"254"},{"size":6006,"mtime":1609984011623,"results":"311","hashOfConfig":"254"},{"size":4742,"mtime":1610021595717,"results":"312","hashOfConfig":"254"},{"size":4015,"mtime":1608213344496,"results":"313","hashOfConfig":"254"},{"size":8991,"mtime":1609116482413,"results":"314","hashOfConfig":"254"},{"size":8306,"mtime":1609030112960,"results":"315","hashOfConfig":"254"},{"size":8822,"mtime":1608943975216,"results":"316","hashOfConfig":"254"},{"size":2806,"mtime":1607517912894,"results":"317","hashOfConfig":"254"},{"size":589,"mtime":1606919665045,"results":"318","hashOfConfig":"254"},{"size":566,"mtime":1608037759968,"results":"319","hashOfConfig":"254"},{"size":8261,"mtime":1609116316633,"results":"320","hashOfConfig":"254"},{"size":1142,"mtime":1606952854248,"results":"321","hashOfConfig":"254"},{"size":370,"mtime":1608211719683,"results":"322","hashOfConfig":"254"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"326"},"kgh5f7",{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"326"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"335"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"326"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"341","usedDeprecatedRules":"335"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"335"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"348"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"335"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"355"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"326"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"326"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"373"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"355"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"355"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"355"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"355"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"326"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"335"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"401","usedDeprecatedRules":"355"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"355"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"367"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"326"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"419","usedDeprecatedRules":"367"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"422","usedDeprecatedRules":"423"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"326"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"326"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"432","usedDeprecatedRules":"335"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"335"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"335"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"335"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"444","usedDeprecatedRules":"335"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"447","usedDeprecatedRules":"355"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"450","usedDeprecatedRules":"355"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"453","usedDeprecatedRules":"367"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"335"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"355"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"355"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"355"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"355"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"473","messages":"474","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"355"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"355"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483","usedDeprecatedRules":"355"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"355"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"373"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"326"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"495","usedDeprecatedRules":"496"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"373"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501","usedDeprecatedRules":"326"},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"496"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509","usedDeprecatedRules":"326"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"367"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515","usedDeprecatedRules":"326"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518","usedDeprecatedRules":"373"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"326"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"355"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"355"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"326"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"348"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539","usedDeprecatedRules":"326"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"496"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"367"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"496"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"326"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"556","messages":"557","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506","usedDeprecatedRules":"367"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"560","usedDeprecatedRules":"355"},{"filePath":"561","messages":"562","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"335"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"367"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"567","usedDeprecatedRules":"326"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"570","usedDeprecatedRules":"355"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"326"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"355"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"355"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"583"},"rswn0r",{"filePath":"584","messages":"585","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"586","messages":"587","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"588","usedDeprecatedRules":"583"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"591","messages":"592","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"593","messages":"594","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"595","messages":"596","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"583"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599","usedDeprecatedRules":"583"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"602","messages":"603","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"604","messages":"605","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"606","messages":"607","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"608","messages":"609","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"396","usedDeprecatedRules":"583"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"612","messages":"613","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"614","messages":"615","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"616","messages":"617","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"583"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"620","messages":"621","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"583"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"583"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"626","messages":"627","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"628","messages":"629","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"630","messages":"631","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"583"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"640","messages":"641","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642","usedDeprecatedRules":"583"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"645","messages":"646","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"647","messages":"648","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"649","messages":"650","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"651","messages":"652","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"653","messages":"654","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"655","messages":"656","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"657","usedDeprecatedRules":"583"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"660","messages":"661","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"662","usedDeprecatedRules":"583"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"665","usedDeprecatedRules":"583"},{"filePath":"666","messages":"667","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"668","usedDeprecatedRules":"583"},{"filePath":"669","messages":"670","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"671","messages":"672","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"673","usedDeprecatedRules":"583"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"676","messages":"677","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"678","messages":"679","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"583"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"583"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"583"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"690","usedDeprecatedRules":"583"},{"filePath":"691","messages":"692","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"693","messages":"694","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"583"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"698","messages":"699","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"700","messages":"701","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"583"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"706","messages":"707","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"708"},{"filePath":"709","messages":"710","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"583"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"715","messages":"716","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"717","messages":"718","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"719","messages":"720","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"721","messages":"722","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"723","messages":"724","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"731","messages":"732","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\auth\\index.js",["733","734"],"import {API} from '../../config';\r\n\r\nexport const signup = (user) =>{\r\n    // console.log(user);\r\n    return fetch(`${API}/admin/signup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(\"error : \" + err);\r\n    })\r\n}\r\n\r\nexport const signin = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/admin/signin`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\n\r\nexport const authenticate = (data, next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout = (next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/admin/signout`, {\r\n            method:\"GET\",\r\n        })\r\n        .then(response =>{\r\n            console.log(\"Signout: \", response);\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"Error: \", err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () =>{\r\n    if(typeof window == 'undefined'){\r\n        return false;\r\n    }\r\n    if(localStorage.getItem('jwt')){\r\n        return JSON.parse(localStorage.getItem('jwt'))\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const forgetPassword = (email) =>{\r\n    // console.log(user);\r\n    return fetch(`${API}/admin/forget/password`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(email)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(\"error : \" + err);\r\n    })\r\n}\r\n\r\nexport const resetPassword = (values) =>{\r\n    // console.log(user);\r\n    const {password, token} = values\r\n\r\n    return fetch(`${API}/admin/reset/password`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(values)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(\"error : \" + err);\r\n    })\r\n}\r\n\r\n\r\nexport const facebooklogin = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/admin/facebooklogin`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nexport const facebooksignup = (user) =>{\r\n    console.log(user);\r\n    return fetch(`${API}/admin/facebooksignup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n// google\r\nexport const googlesignin = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/admin/googlelogin`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nexport const googlesignup = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/admin/googlesignup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nexport const activateAccount = (token) =>{\r\n    // console.log(\"TOKEN\" + token);\r\n    return fetch(`${API}/admin/email-activate/${token}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            // \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(token)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n};",["735","736"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\auth\\index.js",["737","738"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\Signin.js",["739","740","741","742","743","744","745","746","747"],"import React,{useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Layout from '../foodlancer/core/Layout';\r\nimport {signin, authenticate, isAuthenticated} from '../foodlancer/auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n// import { css } from \"@emotion/core\";\r\n// Call it once in your app. At the root of your app is the best place\r\nimport Menu from './core/Menu';\r\n\r\ntoast.configure()\r\nconst Signin = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        email:'sulemanhamzatahir1111@gmail.com',\r\n        password:'123456',\r\n        error:'',\r\n        loading:false,\r\n        redirectToReferrer:false\r\n    }); \r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const {email, password, error, loading, redirectToReferrer} = values;\r\n    const  {foodlancer}  = isAuthenticated();\r\n\r\n    const handleChange = name => event =>{\r\n        setValues({...values, error:false, [name]: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setloading({...loadings, loading1:true})\r\n        setValues({...values, error:false, loading:true})\r\n        signin({email, password})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, loading:false})\r\n                setloading({...loadings, loading1:false})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                authenticate(data, ()=>{\r\n                    setValues({...values, redirectToReferrer:true}) \r\n                    setloading({...loadings, loading1:false})\r\n                    history.push('/foodlancer');\r\n                    toast.success(\"Logged In Successfully\");\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const signinForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            {/* <button onClick={clickSubmit} className=\" btn btn-primary\">Submit</button> */}\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Login\r\n            </button> \r\n            <div style={{textAlign:'right', width:'100%'}}>\r\n                <Link to=\"/foodlancer/forget/password\" style={{color:'#F40009'}}>Forget Password</Link>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    // const showError = () =>{\r\n    //     if(error ===\"11000 duplicate key error collection: ecommerce.foodlancers index: email already exists\"){\r\n    //         setValues({...values, error:\"Email Already Exist\"})\r\n    //     }\r\n    //     return(\r\n    //         <div className=\"alert alert-danger\" \r\n    //             style={{\r\n    //                 display:error?'':'none'\r\n    //             }}>\r\n    //             {error}\r\n    //         </div>\r\n    //     )\r\n    // };\r\n\r\n    // const showLoading = () =>\r\n    //     loading && (\r\n    //             <div className=\"alert alert-info\">\r\n    //               <h2>Loading...</h2>\r\n    //             </div>\r\n    // );\r\n        \r\n\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <div>\r\n                <Menu/>\r\n                {/* <Layout/> */}\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\"> \r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                    <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Foodlancer Login</p>\r\n                    {/* {showError()} */}\r\n                    {/* {showLoading()} */}\r\n                    <div className=\"row\" style={{marginTop:30}}>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                                <div>\r\n                                    {signinForm()}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                                style={{backgroundColor:'#dae5ed', height:'400px'}}>\r\n                                <img src=\"../foodlancer.png\" className=\"imageCenter\" \r\n                                    style={{width:'65%'}}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>  \r\n        );\r\n    }\r\n};\r\n\r\nexport default Signin;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\Signin.js",["748","749","750","751","752","753","754","755","756"],"import React,{useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Layout from '../admin/core/Layout';\r\nimport {signin, authenticate, isAuthenticated, facebooklogin, googlesignin} from '../admin/auth/index';\r\n// import {signin, authenticate, isAuthenticated, facebooklogin, googlesignin} from '../foodie/auth/index';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import { ToastProvider, useToasts } from 'react-toast-notifications'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Menu from './core/Menu';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\ntoast.configure()\r\nconst Signin = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        email:'sulemanhamzatahir1111@gmail.com',\r\n        password:'111111',\r\n        error:'',\r\n        loading:false,\r\n        redirectToReferrer:false\r\n    });\r\n    const [loadings, setloading] = useState({\r\n        loading1: false,\r\n    })\r\n    const {loading1} = loadings\r\n    const {email, password, error, loading, redirectToReferrer} = values;\r\n    // const  {user}  = isAuthenticated();\r\n\r\n    const handleChange = name => event =>{\r\n        setValues({...values, error:false, [name]: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false, loading:true})\r\n        setloading({...loadings, loading1:true})\r\n        signin({email, password})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, loading:false})\r\n                setloading({...loadings, loading1:false})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                authenticate(data, ()=>{\r\n                    setValues({...values, redirectToReferrer:true})\r\n                    setloading({...loadings, loading1:false})\r\n                    history.push('/admin/dashboard');\r\n                })\r\n                toast.success(\"Logged In Successfully\");\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const signinForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            {/* <button onClick={clickSubmit} className=\" btn btn-primary\">Submit</button> */}\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Login\r\n            </button> \r\n            <div style={{textAlign:'right', width:'100%'}}>\r\n                <Link to=\"/admin/forget/password\" style={{color:'#F40009'}}>Forget Password</Link>\r\n            </div>\r\n        </form>\r\n    );\r\n\r\n    const showError = () =>{\r\n        if(error ===\"11000 duplicate key error collection: ecommerce.admins index: email already exists\"){\r\n            setValues({...values, error:\"Email Already Exist\"})\r\n        }\r\n        return(\r\n            <div className=\"alert alert-danger\" \r\n                style={{\r\n                    display:error?'':'none'\r\n                }}>\r\n                {error}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n                <div className=\"alert alert-info\">\r\n                  <h2>Loading...</h2>\r\n                </div>\r\n    );\r\n\r\n    // const redirectUser = () =>{\r\n    //     if(redirectToReferrer === true){\r\n    //        if(user && user.role === 1){\r\n    //             return <Redirect to=\"/admin/dashboard\"/>\r\n    //        }\r\n    //        else{\r\n    //             return <Redirect to=\"/user/dashboard\"/>\r\n    //        }\r\n    //     }\r\n    //     if(isAuthenticated()){\r\n    //         return <Redirect to=\"/\"/>\r\n    //      }\r\n    // }\r\n    const responseFacebook = (response) => {\r\n        const {name, email} = response;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by FB\");\r\n            toast.error(\"No FB account is attach\");\r\n        }\r\n        else{\r\n            setloading({...loadings, loading1:true})\r\n            facebooklogin({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                    setloading({...loadings, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n                else{\r\n                    authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        setloading({...loadings, loading1:false})\r\n                        toast.success(\"Logged In Successfully\");\r\n                        history.push('/admin/dashboard');\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const responseGoogle = (response) => {\r\n        // console.log(response);\r\n        // console.log(response.profileObj.email);\r\n        // console.log(response.profileObj.name);\r\n        const {name, email} = response.profileObj;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by Google\");\r\n            toast.error(\"No Google account is attach\");\r\n        }\r\n        else{\r\n            setloading({...loadings, loading1:true})\r\n            googlesignin({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                    setloading({...loadings, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n                else{\r\n                    authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        setloading({...loadings, loading1:false})\r\n                        toast.success(\"Logged In Successfully\");\r\n                        history.push('/admin/dashboard');\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }       \r\n    \r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n            <Menu/>\r\n            {/* <Layout/> */}\r\n            <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{\r\n                }}> \r\n                <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Admin Login</p>\r\n                {/* {showError()} */}\r\n                {/* {showLoading()} */}\r\n                <div className=\"row\" style={{marginTop:30}}>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                            <div>\r\n                                {signinForm()}\r\n                            </div>\r\n                            <br/>\r\n                            <div className=\"text\" style={{marginBottom:5}}>\r\n                                External Login\r\n                            </div>\r\n                            <div>\r\n                                <FacebookLogin\r\n                                    appId=\"116202456910700\"\r\n                                    autoLoad={false}\r\n                                    fields=\"name,email\"\r\n                                    callback={responseFacebook}\r\n                                    icon=\"fa-facebook mr-1\"\r\n                                    cssClass=\"fb_styling py-2 rounded-lg\"\r\n                                />\r\n                                <p style={{width:'100%', textAlign:'center', margin:0, padding:0}}>&nbsp; OR &nbsp;</p> \r\n                                <GoogleLogin\r\n                                    clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                    onSuccess={responseGoogle}\r\n                                    onFailure={responseGoogle}\r\n                                    cookiePolicy={'single_host_origin'}\r\n                                    render={renderProps => (\r\n                                        <button\r\n                                        onClick={renderProps.onClick}\r\n                                        disabled={renderProps.disabled}\r\n                                        className='py-2 rounded-lg'\r\n                                        style={{width:'100%'}}>\r\n                                        <div className='rounded-full '>\r\n                                            <i className='fa fa-google mr-1' />\r\n                                            Login with Google\r\n                                        </div>\r\n                                        </button>\r\n                                    )}\r\n                                ></GoogleLogin>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                            style={{backgroundColor:'#dae5ed', height:'465px'}}>\r\n                            <img src=\"../admin.png\" className=\"imageCenter\" \r\n                                style={{width:'65%'}}/>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </div>   \r\n        );\r\n    }\r\n};\r\n  \r\nexport default Signin;\r\n",["757","758"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ResetPassword.js",["759","760","761","762","763"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {resetPassword} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ResetPassword = ({history, match}) =>{\r\n    const [values, setValues] = useState({\r\n        password:'',\r\n        token: match.params.tokenId,\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {password, token, error, success} = values\r\n    const forgetButton = () =>{\r\n        resetPassword({password, token})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                history.push('/foodlancer/signin')\r\n                toast.success(\"New Password has been set Successfully\");\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    return(\r\n        <div>\r\n            <Layout/>\r\n            <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Foodlancer New Password</p>\r\n                <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                    <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n                </div>\r\n                <button className='btn btn-primary' onClick={forgetButton}>Set New Password</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ForgetPassword.js",["764","765","766","767","768"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {forgetPassword} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ForgetPassword = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        email:'',\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {email, error, success} = values\r\n    const forgetButton = () =>{\r\n        forgetPassword({email})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                toast.success(\"Password Reset Email Has Been Sent Successfully\");\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    return(\r\n        <div>\r\n            <Layout/>\r\n             <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Foodlancer Forget Password</p>\r\n                <div className='form-group'>\r\n                    <label className=\"text-muted\">Enter Your Email</label>\r\n                    <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n                </div>\r\n                <button className='btn btn-primary' onClick={forgetButton}>Send Reset Email</button>\r\n                  {/* {JSON.stringify(values.success)} */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPassword;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\Routes.js",["769","770"],"import React from 'react';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\n\r\nimport FoodieHome from './foodie/core/Home';\r\nimport FoodieSignup from './foodie/Signup';\r\nimport FoodieSignin from './foodie/Signin';\r\nimport FoodieProfile from './foodie/core/Profile';\r\nimport FoodlancerProfile from './foodlancer/core/Profile';\r\nimport FoodieActivation from './foodie/core/Activation';\r\nimport AdminActivation from './admin/core/AdminActivation';\r\n\r\nimport FoodieForgetPassword from './foodie/core/ForgetPassword';\r\nimport FoodieResetPassword from './foodie/core/ResetPassword';\r\n\r\nimport FoodlancerForgetPassword from './foodlancer/core/ForgetPassword';\r\nimport FoodlancerResetPassword from './foodlancer/core/ResetPassword';\r\n\r\nimport AdminForgetPassword from './admin/core/ForgetPassword';\r\nimport AdminResetPassword from './admin/core/ResetPassword';\r\n\r\n\r\n\r\n// import AdminProfile from './admin/core/Profile/Profile';\r\n\r\nimport FoodlancerHome from './foodlancer/core/Home';\r\nimport FoodlancerSignup from './foodlancer/Signup';\r\nimport FoodlancerSignin from './foodlancer/Signin';\r\nimport FoodlancerAllOrders from './foodlancer/core/AllOrders';\r\nimport FoodlancerCancelOrder from './foodlancer/core/CancelOrder';\r\nimport FoodlancerNewOrder from './foodlancer/core/NewOrder';\r\nimport FoodlancerAcceptOrder from './foodlancer/core/AcceptOrder';\r\nimport FoodlancerShippedOrder from './foodlancer/core/ShippedOrder';\r\nimport FoodlancerProcessingOrder from './foodlancer/core/ProcessingOrder';\r\nimport FoodlancerDeliveredOrder from './foodlancer/core/DeliveredOrder';\r\nimport AdminAllOrders from './admin/core/AllOrders';\r\nimport AdminCancelOrder from './admin/core/CancelOrder';\r\nimport AdminNewOrder from './admin/core/NewOrder';\r\nimport AdminAcceptOrder from './admin/core/AcceptOrder';\r\n\r\nimport AdminHome from './admin/core/Home';\r\nimport AdminSignup from './admin/Signup';\r\nimport AdminSignin from './admin/Signin';\r\nimport ManageProducts from './admin/core/ManageProducts';\r\nimport FoodieProfileInAdmin from './admin/core/FoodieProfile';\r\nimport FoodlancerProfileInAdmin from './admin/core/FoodlancerProfile';\r\nimport AdminProfileInAdmin from './admin/core/AdminProfile';\r\n\r\n\r\nimport FoodlancerAddProduct from './foodlancer/core/AddProduct';\r\n\r\nimport UpdateProduct from './admin/core/UpdateProduct';\r\nimport FoodlancerManageProducts from './foodlancer/core/ManageProducts';\r\nimport FoodlancerUpdateProduct from './foodlancer/core/UpdateProduct';\r\n\r\nimport FoodieDashborard from './foodie/core/FoodieDashborard'\r\nimport FoodlancerDashboard from './foodlancer/core/FoodlancerDashborard'\r\nimport AdminDashboard from './admin/core/AdminDashborard'\r\n\r\nimport FoodiePrivateRoute from './foodie/auth/PrivateRoute';\r\nimport FoodlancerPrivateRoute from './foodlancer/auth/PrivateRoute';\r\nimport AdminPrivateRoute from './admin/auth/PrivateRoute';\r\n\r\n// import AdminRoute from './auth/AdminRoute';\r\n\r\n// import Menu from './core/Menu';\r\nimport AddCategory from './admin/core/AddCategory'\r\nimport AllFoodies from './admin/core/AllFoodies'\r\nimport AllFoodlancers from './admin/core/AllFoodlancers'\r\nimport AllAdmins from './admin/core/AllAdmins'\r\nimport AddProduct from './admin/core/AddProduct'\r\nimport Shop from './foodie/core/Shop';\r\nimport Product from './foodie/core/Product';\r\nimport Cart from './foodie/core/Cart';\r\nimport Orders from './admin/core/Orders';\r\nimport ETA from './foodie/core/ETA';\r\n// import Profile from './user/Profile';\r\nimport FoodlancerProducts from './foodie/core/FoodlancerProducts'\r\nimport FoodlancerProfileInFoodie from './foodie/core/FoodlancerProfile'\r\nimport FoodieContaact from './foodie/core/FoodieContaact'\r\nimport FoodlancerContaact from './foodlancer/core/FoodlancerContact'\r\n\r\nconst Routes = () =>{\r\n    return(\r\n        <BrowserRouter>\r\n        {/* <Menu/> */}\r\n            <Switch>\r\n                <Route path=\"/\" exact component={FoodieHome}></Route>\r\n                <Route path=\"/signin\" exact component={FoodieSignin}></Route>\r\n                <Route path=\"/signup\" exact component={FoodieSignup}></Route>\r\n                {/* <Route path=\"/authentication/activate/\" exact component={FoodieActivation}></Route> */}\r\n                <Route path=\"/authentication/activate/:tokenId\" exact component={FoodieActivation}></Route>\r\n                \r\n                <Route path=\"/forget/password\" exact component={FoodieForgetPassword}></Route>\r\n                <Route path=\"/authentication/reset/password/:tokenId\" exact component={FoodieResetPassword}></Route>\r\n                \r\n                <Route path=\"/foodlancer/forget/password\" exact component={FoodlancerForgetPassword}></Route>\r\n                <Route path=\"/foodlancer/authentication/reset/password/:tokenId\" exact component={FoodlancerResetPassword}></Route>\r\n                \r\n                <Route path=\"/admin/forget/password\" exact component={AdminForgetPassword}></Route>\r\n                <Route path=\"/admin/authentication/reset/password/:tokenId\" exact component={AdminResetPassword}></Route>\r\n                <Route path=\"/admin/authentication/activate/:tokenId\" exact component={AdminActivation}></Route>\r\n                \r\n                \r\n                {/* <Route path=\"/foodlancer\" exact component={FoodlancerHome}></Route> */}\r\n                <Route path=\"/foodlancer/signin\" exact component={FoodlancerSignin}></Route>\r\n                <Route path=\"/foodlancer/signup\" exact component={FoodlancerSignup}></Route>\r\n\r\n                <Route path=\"/admin\" exact component={AdminHome}></Route>\r\n                <Route path=\"/admin/signin\" exact component={AdminSignin}></Route>\r\n                <Route path=\"/admin/signup\" exact component={AdminSignup}></Route>\r\n\r\n                <Route path=\"/shop\" exact component={Shop}></Route>\r\n                <Route path=\"/product/:productId\" exact component={Product}></Route>\r\n                <Route path=\"/cart\" exact component={Cart}></Route>\r\n                \r\n                {/* <PrivateRoute path=\"/profile/:userId\" exact component={Profile}/> */}\r\n                {/* <AdminRoute path=\"/admin/dashboard\" exact component={AdminDashboard}/> */}\r\n                <AdminPrivateRoute path=\"/admin/dashboard\" exact component={AdminDashboard}/>\r\n                <AdminPrivateRoute path=\"/admin/create/category\" exact component={AddCategory}/>\r\n                <AdminPrivateRoute path=\"/admin/create/product\" exact component={AddProduct}/>\r\n                <AdminPrivateRoute path=\"/admin/orders\" exact component={AdminAllOrders}/>\r\n                <AdminPrivateRoute path=\"/admin/orders/cancel\" exact component={AdminCancelOrder}/>\r\n                <AdminPrivateRoute path=\"/admin/orders/new\" exact component={AdminNewOrder}/>\r\n                <AdminPrivateRoute path=\"/admin/orders/accept\" exact component={AdminAcceptOrder}/>\r\n                <AdminPrivateRoute path=\"/admin/products\" exact component={ManageProducts}/>\r\n                <AdminPrivateRoute path=\"/admin/product/update/:productId\" exact component={UpdateProduct}/>\r\n                <AdminPrivateRoute path=\"/admin/admins\" exact component={AllAdmins}/>\r\n                <AdminPrivateRoute path=\"/admin/foodlancers\" exact component={AllFoodlancers}/>\r\n                <AdminPrivateRoute path=\"/admin/foodies\" exact component={AllFoodies}/>\r\n                <AdminPrivateRoute path=\"/admin/foodie/update/profile/:foodieId\" exact component={FoodieProfileInAdmin}/>\r\n                <AdminPrivateRoute path=\"/admin/foodlancer/update/profile/:foodlancerId\" exact component={FoodlancerProfileInAdmin}/>\r\n                <AdminPrivateRoute path=\"/admin/update/admin/profile/:adminId\" exact component={AdminProfileInAdmin}/>\r\n                \r\n                <FoodlancerPrivateRoute path=\"/foodlancer\" exact component={FoodlancerDashboard}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders\" exact component={FoodlancerAllOrders}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders/new\" exact component={FoodlancerNewOrder}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders/cancel\" exact component={FoodlancerCancelOrder}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders/accept\" exact component={FoodlancerAcceptOrder}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders/shipped\" exact component={FoodlancerShippedOrder}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders/delivered\" exact component={FoodlancerDeliveredOrder}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/orders/processing\" exact component={FoodlancerProcessingOrder}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/create/product\" exact component={FoodlancerAddProduct}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/profile/:foodlancerId\" exact component={FoodlancerProfile}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/products\" exact component={FoodlancerManageProducts}/>\r\n                <FoodlancerPrivateRoute path=\"/foodlancer/product/update/:productId\" exact component={FoodlancerUpdateProduct}/>\r\n                <Route path=\"/foodlancer/contact\" exact component={FoodlancerContaact}/>\r\n                \r\n                <FoodiePrivateRoute path=\"/dashboard\" exact component={FoodieDashborard}/>\r\n                <FoodiePrivateRoute path=\"/profile/:foodieId\" exact component={FoodieProfile}/>\r\n                <FoodiePrivateRoute path=\"/order/eta\" exact component={ETA}/>\r\n                <Route path=\"/foodlancer/products/:foodlancerId\" exact component={FoodlancerProducts}/>\r\n                <Route path=\"/profile/foodlancer/:foodlancerId\" exact component={FoodlancerProfileInFoodie}/>\r\n                <Route path=\"/contact\" exact component={FoodieContaact}/>\r\n                \r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Routes;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ForgetPassword.js",["771","772","773","774","775"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {forgetPassword} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ForgetPassword = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        email:'',\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {email, error, success} = values\r\n    const forgetButton = () =>{\r\n        forgetPassword({email})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                toast.success(\"Password Reset Email Has Been Sent Successfully\");\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    return(\r\n        <div>\r\n            <Layout/>\r\n             <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Admin Forget Password</p>\r\n                <div className='form-group'>\r\n                    <label className=\"text-muted\">Enter Your Email</label>\r\n                    <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n                </div>\r\n                <button className='btn btn-primary' onClick={forgetButton}>Send Reset Email</button>\r\n                  {/* {JSON.stringify(values.success)} */}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgetPassword;\r\n",["776","777"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ResetPassword.js",["778","779","780","781","782"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {resetPassword} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ResetPassword = ({history, match}) =>{\r\n    const [values, setValues] = useState({\r\n        password:'',\r\n        token: match.params.tokenId,\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {password, token, error, success} = values\r\n    const forgetButton = () =>{\r\n        resetPassword({password, token})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                history.push('/admin/signin')\r\n                toast.success(\"New Password has been set Successfully\");\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    return(\r\n        <div>\r\n            <Layout/>\r\n            <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Admin New Password</p>\r\n                <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                    <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n                </div>\r\n                <button className='btn btn-primary' onClick={forgetButton}>Set New Password</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ResetPassword.js",["783","784","785","786","787"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {resetPassword} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ResetPassword = ({history, match}) =>{\r\n    const [values, setValues] = useState({\r\n        password:'',\r\n        token: match.params.tokenId,\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {password, token, error, success} = values\r\n    const forgetButton = () =>{\r\n        resetPassword({password, token})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                history.push('/signin')\r\n                toast.success(\"New Password has been set Successfully\");\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    return(\r\n        <div>\r\n            <Layout/>\r\n            <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Foodie New Password</p>\r\n                <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                    <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n                </div>\r\n                <button className='btn btn-primary' onClick={forgetButton}>Set New Password</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n",["788","789"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\Signup.js",["790","791","792","793","794","795"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AdminActivation.js",["796","797","798","799","800"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {activateAccount} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst Activation = ({history, match}) =>{\r\n    const [values, setValues] = useState({\r\n        error:false,\r\n        success:false\r\n    }); \r\n    // useEffect(()=>{\r\n    //     let token = match.params.tokenId;\r\n    // },[])\r\n    const activationButton = () =>{\r\n        // console.log(\"HERE :: \");\r\n        // console.log(\"MATCH :: \" + match.params.tokenId);\r\n        activateAccount(match.params.tokenId)\r\n        // activateAccount()\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:true})\r\n                if(data.error === \"11000 duplicate key error collection: khansama.admins index: email already exists\"){\r\n                    toast.error(\"Email Already Exist\");\r\n                }\r\n                else{\r\n                    toast.error(data.error);\r\n                }\r\n                // setValues({...values, error: true})\r\n                // toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                history.push('/admin/signin')\r\n                toast.success(\"Account is Activated. Kindly Login\");\r\n            }   \r\n        })\r\n    }\r\n    return(\r\n           <div>\r\n               {/* <Layout/> */}\r\n               <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Admin Email Activation</p>\r\n                    <div className=\"row\" style={{marginTop:30}}>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                            <div className='form-group'>\r\n                                {/* <button className='btn btn-primary' onClick={clickSubmit}>Submit</button> */}\r\n                                <p style={{fontSize:27, fontWeight:600}}>Click Here to Activate Your Account</p>\r\n                                <button className='btn btn-primary' onClick={activationButton}>Activate Account</button>\r\n                                {/* <button onClick={activateAccount()}>Activate Account</button> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                            style={{backgroundColor:'#dae5ed', height:'465px'}}>\r\n                            <img src=\"../../admin.png\" className=\"imageCenter\" \r\n                                style={{width:'65%'}}/>\r\n                        </div>\r\n                        {/* {JSON.stringify(values.success)} */}\r\n                    </div>\r\n                </div>\r\n           </div>\r\n    );\r\n};\r\n\r\nexport default Activation;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\auth\\index.js",["801","802"],"import {API} from '../../config';\r\n\r\nexport const signup = (user) =>{\r\n    // console.log(user);\r\n    return fetch(`${API}/signup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(\"error : \" + err);\r\n    })\r\n}\r\n\r\nexport const signin = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/signin`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nexport const facebooklogin = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/facebooklogin`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nexport const facebooksignup = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/facebooksignup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n// google\r\nexport const googlesignin = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/googlelogin`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\n\r\nexport const googlesignup = (user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/googlesignup`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n}\r\nexport const authenticate = (data, next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        // var check = JSON.stringify(data)\r\n        // console.log(check.user)\r\n        // if(typeof(check.user) !== undefined && check.name != null){\r\n            localStorage.setItem('jwt', JSON.stringify(data));\r\n        // }\r\n\r\n        // console.log(JSON.stringify(data))\r\n        //localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const signout = (next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/signout`, {\r\n            method:\"GET\",\r\n        })\r\n        .then(response =>{\r\n            console.log(\"Signout: \", response);\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"Error: \", err);\r\n        })\r\n    }\r\n}\r\n\r\nexport const isAuthenticated = () =>{\r\n    if(typeof window == 'undefined'){\r\n        return false;\r\n    }\r\n    if(localStorage.getItem('jwt')){\r\n        // var check = JSON.parse(localStorage.getItem('jwt'))\r\n\r\n        // console.log(\"CHECK NAME :: \" + check.user.name)\r\n        // console.log(\"CHECK :: \" + JSON.parse(localStorage.getItem('jwt')))\r\n        // if(check.user.name !== undefined || check.user.name !== 'undefined'){\r\n            return JSON.parse(localStorage.getItem('jwt'))\r\n        // }\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\n\r\nexport const activateAccount = (token) =>{\r\n    // console.log(\"TOKEN\" + token);\r\n    return fetch(`${API}/email-activate/${token}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            // \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(token)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(err);\r\n    })\r\n};\r\n\r\nexport const forgetPassword = (email) =>{\r\n    // console.log(user);\r\n    return fetch(`${API}/forget/password`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(email)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(\"error : \" + err);\r\n    })\r\n}\r\n\r\nexport const resetPassword = (values) =>{\r\n    // console.log(user);\r\n    const {password, token} = values\r\n\r\n    return fetch(`${API}/reset/password`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body:JSON.stringify(values)\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(err =>{\r\n        console.log(\"error : \" + err);\r\n    })\r\n}","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Menu.js",["803","804","805","806","807","808","809","810","811"],"import React, {Fragment, useEffect} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {signout, isAuthenticated} from '../auth/index';\r\nimport {itemTotal} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst isActive = (history, path) => {\r\n    console.log(\"HISTORY: \" + history.location.pathname);\r\n    // console.log(\"PATH: \" + path);\r\n    // console.log(\"COMPARE: \" + history.location.pathname === path);\r\n    // console.log(\"COMPARE: \" + history.location.pathname === path);\r\n    // console.log(history.location.pathname.localeCompare(path));\r\n\r\n    if(history.location.pathname ===  \"/\"+path){\r\n        return {color:'#F40009'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    }\r\n}\r\n\r\nconst Menu = ({history}) =>{\r\n    \r\n    // console.log(\"HISTORY: \" + history.location.pathname);\r\n    return(\r\n        <div>\r\n        <nav class=\"navbar navbar-expand-md\"\r\n        style={{backgroundColor:\"black\"}}>\r\n            {/* <a class=\"navbar-brand\" href=\"#\" style={{color:\"white\"}}>KHANSAMA</a> */}\r\n            <img src=\"./logo.png\" style={{width:120, height:50}}/>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul class=\"navbar-nav mr-auto\" style={{marginLeft:10}}>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"\")} to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"shop\")} to=\"/shop\">Shop</Link>\r\n                    </li>\r\n                    {/* {isAuthenticated() && isAuthenticated().user.role === 0 && ( */}\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"dashboard\")} to=\"/dashboard\">Dashboard</Link>\r\n                        </li>\r\n                    {/* )} */}\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"cart\")} to=\"/cart\">Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"contact\")} to=\"/contact\">Contact Us</Link>\r\n                    </li>\r\n                    {/* {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" style={isActive(history, \"admin/dashboard\")} to=\"/admin/dashboard\" >Dashboard</Link>\r\n                        </li>\r\n                    )} */}\r\n                </ul>\r\n                    <ul className=\"navbar-nav\">\r\n                    {!isAuthenticated() && (\r\n                        <Fragment> \r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signin\")} to=\"/signin\">Sign In</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signup\")}to=\"/signup\">Sign Up</Link>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                                onClick = {()=> signout(()=>{\r\n                                    history.push('/');\r\n                                    toast.success(\"Logout Successfully\");\r\n                                })}>\r\n                                Sign Out\r\n                            </span>\r\n                        </li>\r\n                )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n    )\r\n};\r\n  \r\nexport default withRouter(Menu);\r\n",["812","813"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\App.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodlancerProducts.js",["814","815","816"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getFoodlancerProducts} from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst FoodlancerProducts = ({match}) =>{\r\n    const [foodlancerProducts, setFoodlancerProducts] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadFoodlancerProducts = () =>{\r\n        // console.log(match.params.foodlancerId)\r\n        getFoodlancerProducts(match.params.foodlancerId)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setFoodlancerProducts(data.product);\r\n                // console.log(data.product)\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        loadFoodlancerProducts();\r\n    }, [])\r\n\r\n    return(\r\n        <Layout title=\"Foodlancer Products\" description=\"Node React E-Commerce App\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Foodlancer Products</h2>\r\n            <div className=\"row\">\r\n                {foodlancerProducts.map((product, i)=>(\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n  \r\nexport default FoodlancerProducts;\r\n",["817","818"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Activation.js",["819","820","821","822","823"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {activateAccount} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst Activation = ({history, match}) =>{\r\n    const [values, setValues] = useState({\r\n        error:false,\r\n        success:false\r\n    }); \r\n    // useEffect(()=>{\r\n    //     let token = match.params.tokenId;\r\n    // },[])\r\n    const activationButton = () =>{\r\n        // console.log(\"HERE :: \");\r\n        // console.log(\"MATCH :: \" + match.params.tokenId);\r\n        activateAccount(match.params.tokenId)\r\n        // activateAccount()\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:true})\r\n                if(data.error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                    toast.error(\"Email Already Exist\");\r\n                }\r\n                else{\r\n                    toast.error(data.error);\r\n                }\r\n                // setValues({...values, error: true})\r\n                // toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                history.push('/signin')\r\n                toast.success(\"Account is Activated. Kindly Login\");\r\n            }   \r\n        })\r\n    }\r\n    return(\r\n           <div>\r\n               {/* <Layout/> */}\r\n               <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Foodie Email Activation</p>\r\n                    <div className=\"row\" style={{marginTop:30}}>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                            <div className='form-group'>\r\n                                {/* <button className='btn btn-primary' onClick={clickSubmit}>Submit</button> */}\r\n                                <p style={{fontSize:27, fontWeight:600}}>Click Here to Activate Your Account</p>\r\n                                <button className='btn btn-primary' onClick={activationButton}>Activate Account</button>\r\n                                {/* <button onClick={activateAccount()}>Activate Account</button> */}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                            style={{backgroundColor:'#dae5ed', height:'465px'}}>\r\n                            <img src=\"../../email-1.png\" className=\"imageCenter\" \r\n                                style={{width:'65%'}}/>\r\n                        </div>\r\n                        {/* {JSON.stringify(values.success)} */}\r\n                    </div>\r\n                </div>\r\n           </div>\r\n    );\r\n};\r\n\r\nexport default Activation;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodlancerProfile.js",["824","825","826"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getFoodlancerProfile} from './apiCore';\r\nimport Search from './Search';\r\nimport ShowImage from './ShowImage';\r\n\r\nconst FoodlancerProfile = ({match}) =>{\r\n    const [foodlancer, setFoodlancerProfile] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadFoodlancerProducts = () =>{\r\n        // console.log(match.params.foodlancerId)\r\n        getFoodlancerProfile(match.params.foodlancerId)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setFoodlancerProfile(data.foodlancer);\r\n                console.log(data.foodlancer)\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        loadFoodlancerProducts();\r\n    }, [])\r\n\r\n    return(\r\n        <Layout title=\"Foodlancer Products\" description=\"Node React E-Commerce App\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\" style={{margin:10}}>Foodlancer Profile</h2>\r\n            <div className=\"row\" style={{margin:10}}>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header name\" style={{color:'black', textTransform: \"uppercase\", textAlign: 'center'}}>\r\n                        {foodlancer.kitchen}<span style={{textTransform: 'lowercase'}}>'s</span> Kitchen\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <ShowImage item={foodlancer} url=\"foodlancer/kitchen\"/>\r\n                        {/* <ShowImage item={product} url=\"product\"/> */}\r\n                        <p className=\"black-10\">Owner Name: {foodlancer.name}</p>\r\n                        <br/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n  \r\nexport default FoodlancerProfile;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Home.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodieContaact.js",["827","828","829","830","831","832","833","834","835"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {read, contact, contactUser} from './apiFoodie'; \r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { css } from \"@emotion/core\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\nconst FoodieContaact = ({match, history}) =>{\r\n    const [values, setValues] = useState({\r\n        role:0,\r\n        name:'',\r\n        email:'',\r\n        query:'',\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {token} = isAuthenticated()\r\n    const {role, name, email, query, error, success} = values\r\n    // const init = (userId) =>{\r\n    //     // console.log(userId) \r\n    //     read(userId, token).then(data =>{\r\n    //         if(data.error){\r\n    //             setValues({...values, error: true})\r\n    //             toast.error(data.error);\r\n    //         }\r\n    //         else{\r\n    //             setValues({...values, name: data.name, email: data.email})\r\n    //             toast.success(data);\r\n    //         }   \r\n    //     })\r\n    // }\r\n    // useEffect(() =>{\r\n        // init(match.params.foodieId)\r\n    // },[])\r\n    const queryForm = (name, email, query) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name} />\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email} />\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Query</label>\r\n                <textarea type='text' rows=\"10\" col=\"50\" onChange={handleChange('query')} className='form-control' value={query} />\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Send Query</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(name !== \"\" && email!==\"\" && query!==\"\"){\r\n            contact({role, name, email, query}, token).then(data =>{\r\n                if(data.error){\r\n                    console.log(data.error)\r\n                    toast.error(data.error)\r\n                }\r\n                else{ \r\n                        setValues({...values, name: data.name, email: data.email, success:true})\r\n                        history.push('/dashboard')\r\n                        toast.success(\"Query is Submitted. We will Contact you as soon as possible\")\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            toast.error(\"Please Fill all Fields\")\r\n        }\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/dashboard/\"/>\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Profile\" description=\"contact Your Profile\" className=\"container-fluid\">\r\n            <div className=\"container col-md-8\" style={{marginTop:10}}> \r\n                <h2 className=\"mb-4\">Contact Us</h2>\r\n                {queryForm(name, email, query)}\r\n                {/* {redirectUser(success)} */}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default FoodieContaact;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ShippedOrder.js",["836","837","838","839","840","841"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancerlistOrdersByOrderStatus, FoodlancergetStatusValues, updateStatusValues} from './apiFoodlancer';\r\nimport moment from 'moment';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        FoodlancerlistOrdersByOrderStatus(user._id, token, 'Shipped').then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        FoodlancergetStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        if(orders.length === 0){\r\n            return(\r\n                <h4 className=\"text-danger display-4\" style={{textAlign:'center'}}>No Shipped Orders</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-warning display-4\" style={{textAlign:'center'}}>Total Shipped Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n    }\r\n    // const showOrderNumber = () =>{\r\n    //     var num = count + 1;\r\n    //     setCount(num)\r\n    //     // return num;\r\n    // }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Shipped Orders\" description=\"You Can Manage Shipped Orders Here\" className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(product.foodlancer === user._id && order.status === 'Shipped'){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ProcessingOrder.js",["842","843","844","845","846","847"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancerlistOrdersByOrderStatus, FoodlancergetStatusValues, updateStatusValues} from './apiFoodlancer';\r\nimport moment from 'moment';\r\n\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        FoodlancerlistOrdersByOrderStatus(user._id, token, 'Processing').then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        FoodlancergetStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        if(orders.length === 0){\r\n            return(\r\n                <h4 className=\"text-danger display-4\" style={{textAlign:'center'}}>No Processing Orders</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-warning display-4\" style={{textAlign:'center'}}>Total Processing Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n    }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Processing Orders\" description=\"You Can Manage Processing Orders Here\" className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(product.foodlancer === user._id && order.status === 'Processing'){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerContact.js",["848","849","850","851","852","853","854","855","856"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {read, contact, contactUser} from './apiFoodlancer'; \r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { css } from \"@emotion/core\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\nconst FoodlancerContact = ({match, history}) =>{\r\n    const [values, setValues] = useState({\r\n        role:1,\r\n        name:'',\r\n        email:'',\r\n        query:'',\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {token} = isAuthenticated()\r\n    const {role, name, email, query, error, success} = values\r\n    // const init = (userId) =>{\r\n    //     // console.log(userId) \r\n    //     read(userId, token).then(data =>{\r\n    //         if(data.error){\r\n    //             setValues({...values, error: true})\r\n    //             toast.error(data.error);\r\n    //         }\r\n    //         else{\r\n    //             setValues({...values, name: data.name, email: data.email})\r\n    //             toast.success(data);\r\n    //         }   \r\n    //     })\r\n    // }\r\n    // useEffect(() =>{\r\n        // init(match.params.foodieId)\r\n    // },[])\r\n    const queryForm = (name, email, query) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name} />\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email} />\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Query</label>\r\n                <textarea type='text' rows=\"10\" col=\"50\" onChange={handleChange('query')} className='form-control' value={query} />\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Send Query</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(name !== \"\" && email!==\"\" && query!==\"\"){\r\n             contact({role, name, email, query}, token).then(data =>{\r\n                if(data.error){\r\n                    console.log(data.error)\r\n                    toast.error(data.error)\r\n                }\r\n                else{ \r\n                        setValues({...values, name: data.name, email: data.email, success:true})\r\n                        history.push('/foodlancer')\r\n                        toast.success(\"Query is Submitted. We will Contact you as soon as possible\")\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            toast.error(\"Please Fill all Fields\")\r\n        }\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/dashboard/\"/>\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Profile\" description=\"contact Your Profile\" className=\"container-fluid\">\r\n            <div className=\"container col-md-8\" style={{marginTop:10}}> \r\n                <h2 className=\"mb-4\">Contact Us</h2>\r\n                {queryForm(name, email, query)}\r\n                {/* {redirectUser(success)} */}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default FoodlancerContact;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllOrders.js",["857","858","859"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {listOrders, getStatusValues, updateStatusValues} from './apiAdmin';\r\nimport moment from 'moment';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n          \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        listOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        getStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        if(orders.length > 0){\r\n            return(\r\n                <h4 className=\"text-danger display-2\">Total Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-danger\">No Orders</h4>    \r\n            )\r\n        }\r\n    }\r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Orders\" description={`Hello ${user.name}, You Can Manage All The Orders Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, oderIndex)=>{\r\n                            return(\r\n                                <div className=\"mt-5\" key={oderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                    <h2 className=\"mb-5\">\r\n                                        <span className=\"bg-primary\">\r\n                                            Order ID: {order._id} \r\n                                        </span>\r\n                                    </h2>\r\n                                    <ul className=\"list-group mb-2\">\r\n                                        <li className=\"list-group-item\">\r\n                                            Oder By: {order.user.name}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                        {showStatus(order)}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Transaction ID: {order.transaction_id}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Total Amount: ${order.amount}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Delivery Address: {order.address}\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                        Total Products In The Order {order.products.length}\r\n                                    </h3>\r\n                                    {order.products.map((product, productIndex)=>(\r\n                                        <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                            {showInput('Product Name', product.name)}\r\n                                            {showInput('Product Price', product.price)}\r\n                                            {showInput('Product Quantity', product.count)}\r\n                                            {showInput('Product Id', product._id)}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\UpdateProduct.js",["860","861","862","863","864","865","866","867"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AddCategory.js",["868"],"import React, { useState } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {createCategory} from './apiAdmin';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst AddCategory = () =>{\r\n    const [name, setName] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    //destructure user and token from localstorage\r\n\r\n    const {user, token} = isAuthenticated();\r\n    \r\n    const newCategoryForm = () =>(\r\n        // <form  onClick={clickSubmit}>\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category Name</label>\r\n                <input type=\"text\" className=\"form-control\"  onChange={handleChange} value={name} autoFocus required/>\r\n            </div>\r\n            <button onClick={clickSubmit} className=\" btn btn-outline-primary\">Create Category</button>\r\n        </form>\r\n    )\r\n\r\n    const handleChange = (e) =>{\r\n        setError('');\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault();\r\n        setError('');\r\n        setSuccess(false);\r\n        // make request to api to create category   \r\n\r\n        createCategory(user._id, token, {name})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                setError('')\r\n                setSuccess(true)\r\n                toast.success(\"Category is Created Successfully.\")\r\n               \r\n            }\r\n        })\r\n    }\r\n    \r\n    const showError = () =>{\r\n        if(error){\r\n            return(\r\n                <div className=\"alert alert-danger\" >\r\n                    Category Should be Unique \r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\n    const showSuccess = () =>{\r\n        if(success){\r\n            return(\r\n                <div className=\"alert alert-info\">\r\n                  <h2>Category is Created</h2>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n    \r\n    const goBack = () =>{\r\n       return(\r\n           <div className=\"mt-5\">\r\n               <Link to=\"/admin/dashboard\" className=\"text-primary\">Back to Dashboard</Link>\r\n           </div>\r\n       )\r\n    };\r\n\r\n    return(\r\n        <Layout title=\"Create Category\" description=\"Add New Category Here\" className=\"container\">\r\n           <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {/* {showSuccess()} */}\r\n                    {showError()}\r\n                    {newCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n           </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default AddCategory;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllFoodlancers.js",["869","870"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllFoodies.js",["871","872","873","874","875","876","877","878","879"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {listFoodies, getStatusValues, updateStatusValues, removeFoodies, updateFoodies} from './apiAdmin';\r\nimport moment from 'moment';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst AllFoodies = () =>{\r\n    const [foodies, setFoodies] = useState([])\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const [deleteFoodie, setDeleteFoodie] = useState('false')\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadFoodies = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        listFoodies(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setFoodies(data)\r\n            }\r\n        })\r\n    }\r\n    // const loadStatusValues = () =>{\r\n    //     getStatusValues(user._id, token).then(data =>{\r\n    //         if(data.error){\r\n    //             console.log(data.error)\r\n    //         }\r\n    //         else{\r\n    //             setstatusValues(data)\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    useEffect(()=>{\r\n        loadFoodies()\r\n        // loadStatusValues()\r\n    },[])\r\n\r\n    const showFoodiesLength = () =>{\r\n        if(foodies.length > 0){\r\n            return(\r\n                <h4 className=\"text-danger display-2\">Total Foodies: {foodies.length}</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-danger\">No Foodie</h4>    \r\n            )\r\n        }\r\n    }\r\n    // const showInput = (key, value) =>(\r\n    //     <div className=\"input-group mb-2 mr-sm-2\">\r\n    //         <div className=\"input-group-prepand\">\r\n    //             <div className=\"input-group-text\">\r\n    //                 {key}\r\n    //             </div>\r\n    //         </div>\r\n    //         <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n    //     </div>\r\n    // )\r\n    // const handleStatusChange = (e, orderId) =>{\r\n    //     // console.log(\"Update Order Status\")\r\n    //     updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n    //         if(data.error){\r\n    //             console.log('Status Update Failed')\r\n    //         }\r\n    //         else{\r\n    //             loadFoodies()\r\n    //         }\r\n    //     })\r\n    // }\r\n    // const showStatus = (o) =>(\r\n    //     <div className = \"form-group\">\r\n    //         <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n    //         <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n    //             <option>Update Status</option>\r\n    //             {statusValues.map((status, index)=>(\r\n    //                 <option key={index} value={status}>\r\n    //                     {status}\r\n    //                 </option>\r\n    //             ))}\r\n    //         </select>\r\n    //     </div>\r\n    // )\r\n    // const updateFoodie = () =>{\r\n    //     // updateFoodies(user._id, token).then(data =>{\r\n    //     //     if(data.error){\r\n    //     //         console.log(data.error)\r\n    //     //     }\r\n    //     //     else{\r\n    //     //         setFoodies(data)\r\n    //     //     }\r\n    //     // })\r\n    // }\r\n    \r\n    const removeFoodie = (foodieId) =>{\r\n        setloading({...loadings, loading1:true})\r\n        removeFoodies(user._id, foodieId, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                // setDeleteFoodie(data)\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadFoodies()\r\n            }\r\n        })\r\n    }\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"All Foodies\" description={`Hello ${user.name}, You Can Manage All Foodies Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showFoodiesLength()}\r\n                        {foodies.map((foodie, foodieIndex)=>{\r\n                            return(\r\n                                <div className=\"mt-5\" key={foodieIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                    <h2 className=\"mb-5\">\r\n                                        <span className=\"bg-primary\">\r\n                                            Foodie ID: {foodie._id} \r\n                                        </span>\r\n                                    </h2>\r\n                                    <ul className=\"list-group mb-2\">\r\n                                        <li className=\"list-group-item\">\r\n                                            Foodie Name: {foodie.name}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Foodie Email: {foodie.email}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Foodie Account Created On: {moment(foodie.createdAt).fromNow()}\r\n                                        </li>\r\n                                    </ul>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6\">\r\n                                            <button className=\"btn btn-warning mt-2 mb-2\">\r\n                                                <Link style={{color:\"black\", textDecoration:'none'}} to={`foodie/update/profile/${foodie._id}`}>Update</Link>\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"col-6\">\r\n                                            <button className=\"btn btn-danger mt-2 mb-2\" onClick={() => {removeFoodie(foodie._id) }}>\r\n                                            Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllFoodies;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Orders.js",["880","881","882"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {listOrders, getStatusValues, updateStatusValues} from './apiAdmin';\r\nimport moment from 'moment';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n       \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        listOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n                setloading({...loadings, loading1:false})\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        getStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        if(orders.length > 0){\r\n            return(\r\n                <h4 className=\"text-danger display-2\">Total Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-danger\">No Orders</h4>    \r\n            )\r\n        }\r\n    }\r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Orders\" description={`Hello ${user.name}, You Can Manage All The Orders Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, oderIndex)=>{\r\n                            return(\r\n                                <div className=\"mt-5\" key={oderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                    <h2 className=\"mb-5\">\r\n                                        <span className=\"bg-primary\">\r\n                                            Order ID: {order._id} \r\n                                        </span>\r\n                                    </h2>\r\n                                    <ul className=\"list-group mb-2\">\r\n                                        <li className=\"list-group-item\">\r\n                                            Oder By: {order.user.name}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                        {showStatus(order)}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Transaction ID: {order.transaction_id}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Total Amount: ${order.amount}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                        </li>\r\n                                        <li className=\"list-group-item\">\r\n                                            Delivery Address: {order.address}\r\n                                        </li>\r\n                                    </ul>\r\n                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                        Total Products In The Order {order.products.length}\r\n                                    </h3>\r\n                                    {order.products.map((product, productIndex)=>(\r\n                                        <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                            {showInput('Product Name', product.name)}\r\n                                            {showInput('Product Price', product.price)}\r\n                                            {showInput('Product Quantity', product.count)}\r\n                                            {showInput('Product Id', product._id)}\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\apiCore.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Search.js",["883","884"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getCategories, list} from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Search = () =>{\r\n    const [data, setData] = useState({\r\n        categories:[],\r\n        category:'',\r\n        search:'',\r\n        results:[],\r\n        searched:false\r\n    })\r\n    const {categories, category, search, results, searched} =data;\r\n\r\n    const loadCategories = () =>{\r\n        getCategories()\r\n        .then(data =>{\r\n            if(data.error){\r\n                console.log(data.error);\r\n            }\r\n            else{\r\n                setData({...data, categories:data})\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        loadCategories();\r\n    },[])\r\n    \r\n    const handleChange = name => event =>{\r\n        setData({...data, [name]:event.target.value, searched:false});\r\n    }\r\n    const searchData = () =>{\r\n        // console.log(search, category);\r\n        if(search){\r\n            list({search: search || undefined, category: category})\r\n            .then(response =>{\r\n                if(response.error){\r\n                    console.log(response.error);\r\n                }\r\n                else{\r\n                    setData({...data, results:response, searched:true});\r\n                    console.log(results);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const searchSubmit = (e) =>{\r\n        e.preventDefault();\r\n        searchData();\r\n\r\n    }\r\n    const searchedProducts = (results = []) =>{\r\n        return(\r\n            <div>\r\n                <h2 className=\"mt-4 mb-4\">{searchMessage(searched, results)}</h2>\r\n                <div className=\"row\">\r\n                    {results.map((product, i)=>(\r\n                        <Card key={i} product={product}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )        \r\n    }\r\n    const searchMessage = (searched, results) =>{\r\n        if(searched && results.length > 0 && results.length > 1){\r\n            return `Found ${results.length} Prodcuts`\r\n        }\r\n        if(searched && results.length == 1){\r\n            return `Found ${results.length} Prodcut`\r\n        }\r\n        if(searched && results.length < 1){\r\n            return `No Found Prodcut`\r\n        }\r\n        \r\n    }\r\n    const searchForm = () =>(\r\n        <form onSubmit={searchSubmit} style={{margin:10}}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select className=\"btn mr-2\" onChange={handleChange('category')}  style={{fontSize:18}}> \r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i)=>(\r\n                                <option key={i} value={c._id}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <input type=\"search\" className=\"form-control\" onChange={handleChange('search')}\r\n                     placeholder=\"Search by Name\"  style={{fontSize:18}}/>\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{border:'none'}}>\r\n                    <button className=\"input-group-text\"  style={{fontSize:18}}>Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">\r\n                {searchForm()}\r\n            </div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Search;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\apiAdmin.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ShowImage.js",["885","886"],"import React, {useState, useEffect} from 'react';\r\nimport {API} from '../../config';\r\n\r\n\r\nconst ShowImage = ({item, url}) =>(\r\n    <div className=\"product-img\">\r\n        <img src={`${API}/${url}/photo/${item._id}`} alt={item.name} className=\"mb-3\"\r\n         style={{height:'260px', width:'380px'}}/>\r\n    </div>\r\n)\r\n\r\n \r\nexport default ShowImage;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\RadioBox.js",["887","888"],"import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n\r\nconst RadioBox = ({prices, handleFilters}) =>{\r\n\r\n    const [value, setValue] = useState(0);\r\n\r\n    const handleChange = (event) =>{\r\n        handleFilters(event.target.value);\r\n        setValue(event.target.value);\r\n\r\n    }\r\n\r\n    return prices.map((price, i)=>(\r\n        <Fragment>\r\n            <div key={i}>\r\n                <input onChange={handleChange} value={`${price._id}`} name={prices} type=\"radio\" className=\"mr-2 ml-4\"/>\r\n                <label className=\"form-check-label\">{price.name}</label>\r\n            </div>\r\n        </Fragment>\r\n       \r\n    ))\r\n}\r\n\r\n\r\nexport default RadioBox;",["889","890"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ShowImage.js",["891","892"],"import React, {useState, useEffect} from 'react';\r\nimport {API} from '../../config';\r\n\r\n\r\nconst ShowImage = ({item, url}) =>(\r\n    <div className=\"product-img thumbnail\" style={{height:'260px', width:'370px'}}>\r\n        <img className=\"img-responsive mb-3\" src={`${API}/${url}/photo/${item._id}`} alt={item.name}\r\n        style={{height:'inherit', width:'inherit'}}/>\r\n    </div>\r\n)\r\n\r\n\r\nexport default ShowImage;  ","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Checkout.js",["893","894","895","896","897","898","899","900","901"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getProducts, getBraintreeClientToken, processPayment, createOrder} from './apiCore';\r\nimport Card from './Card';\r\nimport {isAuthenticated} from '../auth';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport DropIn from 'braintree-web-drop-in-react';\r\nimport {emptyCart} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nconst Checkout = ({history, products}) =>{\r\n\r\n    const [data, setData] = useState({\r\n        loading: false,\r\n        success:false,\r\n        clientToken:null,\r\n        error:'',\r\n        instance:{},\r\n        address:''\r\n    })\r\n\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n    // console.log(\"history :: \" + history)\r\n\r\n    const getToken = (userId, token) =>{\r\n        getBraintreeClientToken(userId, token)\r\n        .then(data =>{\r\n            if(data.error){\r\n                if(data.error === \"Foodie not Found\"){\r\n                    setData({...data, error:\"Signin to Purchase Items\"})\r\n                }\r\n                else{\r\n                    setData({...data, error:data.error})\r\n                }\r\n                // setData({...data, error: data.error})\r\n            }\r\n            else{\r\n                setData({clientToken:data.clientToken})\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        getToken(userId, token);\r\n    },[])\r\n\r\n    const getTotal = () =>{\r\n        return products.reduce((currentValue, nextValue)=>{\r\n            return currentValue + nextValue.count * nextValue.price;\r\n        },0);\r\n    };\r\n    const handleAddress = event =>{\r\n        setData({...data, address: event.target.address})\r\n    }\r\n    const showCheckout = () => {\r\n        return isAuthenticated() ? (\r\n        <div>\r\n            {showDropIn()}\r\n        </div>\r\n    ) : (\r\n        <Link to=\"/signin\" style={{margin:10}}>\r\n            <button className=\"btn btn-primary\">\r\n                Sign in To Checkout\r\n            </button>\r\n        </Link>\r\n    )}\r\n    let deliveryAddress = data.address;\r\n    // console.log(\"Delivery Address: \" + deliveryAddress)\r\n    // console.log(\"Data.Address: \" + data.address)\r\n    const buy = () =>{\r\n        // send nonce to your server\r\n        // nonce = data.instance.requestPaymentMethod()\r\n\r\n        let nonce;\r\n        let getNonce = data.instance\r\n        .requestPaymentMethod()\r\n        .then(data =>{\r\n            // console.log(data);\r\n            nonce = data.nonce;\r\n            // once you have nonce (card type, care number) send nonce as 'paymentMethodNonce'\r\n            // and also total to be charged\r\n            // console.log('Send Nonce And Total To Process: ',nonce, getTotal(products));\r\n            const paymentData = {\r\n                paymentMethodNonce: nonce,\r\n                amount:getTotal(products)\r\n            };\r\n            processPayment(userId, token, paymentData)\r\n            .then(response =>{\r\n                \r\n                console.log(products)\r\n                const createOrderData = {\r\n                    products: products,\r\n                    transaction_id: response.transaction.id,\r\n                    amount: response.transaction.amount,\r\n                    address: deliveryAddress\r\n                }\r\n                // create order\r\n                createOrder(userId, token, createOrderData)\r\n                .then(response =>{\r\n                    // empty cart\r\n                    emptyCart(() => {\r\n                        console.log(\"Payment Success And Empty Cart\");\r\n                    });\r\n                    setData({ loading: false, success: true});\r\n                    // <Redirect to='/'/>\r\n                    history.push('/');\r\n                    // console.log(\"this.props :: \" + this.props)\r\n                    // console.log(\"history :: \" + history)\r\n                    toast.success(\"Thanks! Your payment was Successfull!\");\r\n\r\n                })\r\n            })\r\n            .catch(error =>{\r\n                console.log(error);\r\n                setData({loading: false});\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            // console.log(\"Drop In Error: \" + error)\r\n            setData({...data, error:error.message})\r\n        });\r\n\r\n    };\r\n\r\n    const showError = error =>(\r\n        <div className=\"alert alert-danger\" style={{margin:10,display: error ? \"\" : \"none\"}}>\r\n            {error}\r\n        </div>\r\n    );\r\n    const showSuccess = success =>(\r\n        <div className=\"alert alert-info\" style={{margin:10,display: success ? \"\" : \"none\"}}>\r\n            Thanks! Your payment was Successfull! \r\n        </div>\r\n    );\r\n    const showLoading = loading =>(\r\n        <div className=\"alert alert-danger\" style={{display: loading ? \"\" : \"none\"}}>\r\n            Loading!\r\n        </div>\r\n    );\r\n    const showDropIn = () =>(\r\n        <div onBlur={() => setData({...data, error:\"\"})}>\r\n            {data.clientToken != null && products.length > 0 ? (\r\n                <div className=\"row\" style={{margin:10}}>\r\n                   <div className=\"col-6\">\r\n                        <div className=\"form=group\">\r\n                            <h2 style={{width:'100%', textAlign:'center'}}>\r\n                                Delivery Information\r\n                            </h2>\r\n                            <label className=\"text-muted\">Delivery Address:</label>\r\n                            <textarea \r\n                                onChange={handleAddress}\r\n                                className=\"form-control\"\r\n                                value={data.address}\r\n                                placeholder=\"Type Your Delivery Address Here...\"\r\n                            />\r\n                       </div>\r\n                   </div>\r\n                    <div className=\"col-6\">\r\n                        <h2 style={{width:'100%', textAlign:'center'}}>\r\n                            Checkout Information\r\n                        </h2>\r\n                        <DropIn options={{\r\n                            authorization:data.clientToken\r\n                        }} onInstance = {instance => data.instance = instance}/>\r\n                        <button className=\"btn btn-success btn-block\" onClick={buy}>\r\n                            Pay\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n    return (\r\n        <div>\r\n            <h2 style={{width:'100%', marginLeft:10}}>\r\n                Total Bill: ${getTotal()}\r\n            </h2>\r\n            {showSuccess(data.success)}\r\n            {/* {showLoading(data.loading)} */}\r\n            {showError(data.error)}\r\n            {showCheckout()}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Checkout;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\Signup.js",["902","903","904","905","906"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Layout from '../foodie/core/Layout';\r\nimport {signup, authenticate, facebooksignup, googlesignup} from '../foodie/auth/index';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n// or\r\n// import { GoogleLogin } from 'react-google-login';\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n// import { css } from \"@emotion/core\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\nconst Signup = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:'',\r\n        success:false\r\n    });\r\n    const [loading, setloading] = useState({\r\n        loading1: false,\r\n    })\r\n    const {loading1} = loading\r\n    const {name, email, password, error, success} = values;\r\n\r\n    const handleChange = name => event =>{\r\n        setValues({...values, error:false, [name]: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false})\r\n        setloading({...loading, loading1:true})\r\n        signup({name, email, password})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, success:false})\r\n                if(data.error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                    setValues({...values, error:\"Email Already Exist\"})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(\"Email Already Exist\");\r\n                }\r\n                else{\r\n                    setValues({...values, error:data.error})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n            }\r\n            else{\r\n                setValues({...values, name:'', email:'', password:'', error:'', success:true})\r\n                // history.push('/login');\r\n                setloading({...loading, loading1:false})\r\n                toast.success(\"KHANSAMA Send You Email Kindly Activate Your Account\");\r\n                setValues({...values, name:'', email:'', password:''})\r\n                // toast.success(\"Sign Up In Successfully\");\r\n            }\r\n        })\r\n    }\r\n \r\n    \r\n\r\n    const signupForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            {/* <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:100}}>Sign Up</button> */}\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Sign Up\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () =>{\r\n        if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n            setValues({...values, error:\"Email Already Exist\"})\r\n        }\r\n        return(\r\n            <div className=\"alert alert-danger\" \r\n                style={{\r\n                    display:error?'':'none'\r\n                }}>\r\n                {error}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const showSuccess = () =>(\r\n        <div className=\"alert alert-info\" \r\n            style={{\r\n                display:success?'':'none'\r\n            }}>\r\n            Account is Created. <Link to=\"/signin\">Please Signin</Link>\r\n        </div>\r\n    );\r\n\r\n    const responseFacebook = (response) => {\r\n        const {name, email} = response;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by FB\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            facebooksignup({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                        setValues({...values, error:\"Email Already Exist\"})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(\"Email Already Exist\");\r\n                    }\r\n                    else{\r\n                        setValues({...values, error:data.error, loading:false})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(data.error);\r\n                    }\r\n                }\r\n                else{\r\n                    // authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        // toast.success(\"Sign Up In Successfully\");\r\n                        setloading({...loading, loading1:false})\r\n                        toast.success(\"KHANSAMA Send You Email Kindly Activate Your Account\");\r\n                    // })\r\n                }\r\n                setValues({...values, name:'', email:'', password:''})\r\n            })\r\n        }\r\n    }        \r\n    const responseGoogle = (response) => {\r\n        // console.log(response);\r\n        // console.log(response.profileObj.email);\r\n        // console.log(response.profileObj.name);\r\n        const {name, email} = response.profileObj;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by Google\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            googlesignup({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                        setValues({...values, error:\"Email Already Exist\"})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(data.error);\r\n                    }\r\n                    else{\r\n                        setValues({...values, error:data.error, loading:false})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(data.error);\r\n                    }\r\n                }\r\n                else{\r\n                    // authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        // toast.success(\"Sign Up In Successfully\");\r\n                        setloading({...loading, loading1:false})\r\n                        toast.success(\"KHANSAMA Send You Email Kindly Activate Your Account\");\r\n                    // })\r\n                }\r\n                setValues({...values, name:'', email:'', password:''})\r\n            })\r\n        }\r\n    } \r\n    \r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n            return(\r\n            <div>\r\n            <Layout/>\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{\r\n                    }}> \r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                    <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Foodie SignUp</p>\r\n                        {/* {showError()} */}\r\n                        {showSuccess()}\r\n                        <div className=\"row\" style={{marginTop:30}}>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                                <div>\r\n                                    {signupForm()}\r\n                                </div> \r\n                            <div className=\"row\">\r\n                                <div className=\"col-6\" style={{textAlign:'right'}}>\r\n                                    <Link to=\"/signin\" style={{color:'#007bff'}}>Have a Account? Login here</Link>\r\n                                </div>\r\n                            </div>\r\n                                <br/>\r\n                                <div className=\"text\" style={{marginBottom:5}}>\r\n                                    External SignUp\r\n                                </div>\r\n                                <div>\r\n                                    <FacebookLogin\r\n                                        appId=\"116202456910700\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email\"\r\n                                        callback={responseFacebook}\r\n                                        icon=\"fa-facebook mr-1\"\r\n                                        cssClass=\"fb_styling py-2 rounded-lg\"\r\n                                    />\r\n                                    <p style={{width:'100%', textAlign:'center', margin:0, padding:0}}>&nbsp; OR &nbsp;</p> \r\n                                \r\n                                    <GoogleLogin\r\n                                        clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                        render={renderProps => (\r\n                                            <button\r\n                                            onClick={renderProps.onClick}\r\n                                            disabled={renderProps.disabled}\r\n                                            className='py-2 rounded-lg'\r\n                                            style={{width:'100%'}}>\r\n                                            <div className='rounded-full '>\r\n                                                <i className='fa fa-google mr-1' />\r\n                                                SignUp with Google\r\n                                            </div>\r\n                                            </button>\r\n                                        )}\r\n                                    ></GoogleLogin>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                                style={{backgroundColor:'#dae5ed', height:'465px'}}>\r\n                                <img src=\"./logo2.png\" className=\"imageCenter\" \r\n                                    style={{width:'65%'}}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n  \r\nexport default Signup;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ETA.js",["907","908","909","910","911","912"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {checkETA} from '../core/apiFoodie';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { css } from \"@emotion/core\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ETA = () =>{\r\n    const [values, setValues] = useState({\r\n        orderId:'5fdf4fa32025ec3e3cdc349f',\r\n        error:false,\r\n        success:false,\r\n        eta: 0,\r\n        errorText:''\r\n    }); \r\n    const {orderId, error, success, eta, errorText} = values\r\n    const {token} = isAuthenticated()\r\n    const {user:{_id}}  = isAuthenticated();\r\n    const checkETAButton = () =>{\r\n        checkETA(orderId, token, _id)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true, errorText:data.error})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                if(data === 'Order is Shipped'){\r\n                    toast.success(data);\r\n                    if(eta === 0){\r\n                        var time = Math.floor(Math.random() * 21) + 5;\r\n                    }\r\n                    else{\r\n                        time = eta\r\n                    }\r\n                    // var etaTime = `Your Rider is ${time} minutes Away`\r\n                    setValues({...values, success: true, eta: time})\r\n                }\r\n                else{\r\n                    setValues({...values, success: true})\r\n                    toast.success(data);\r\n                }\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const etaCheckFunction = () =>{\r\n        if(eta != 0){\r\n            return(\r\n                <div>\r\n                    <p style={{widows:'100%', fontSize:20, textAlign:'center'}}>Your Rider is {eta} minutes Away</p>\r\n                    {/* <br/> */}\r\n                    <p style={{width:'100%', textAlign:'center'}}>\r\n                        <img src=\"../..//driver.gif\" style={{width:'150px', height:'100px'}}/>\r\n                    </p>\r\n                </div>\r\n            )\r\n        }\r\n        // if(eta===''){\r\n        //     return\r\n        // }\r\n        // else{\r\n        //     const minuteSeconds = 60;\r\n        //     const hourSeconds = 3600;\r\n        //     const daySeconds = 86400;\r\n\r\n        //     const timerProps = {\r\n        //     isPlaying: true,\r\n        //     size: 120,\r\n        //     strokeWidth: 6\r\n        //     };\r\n\r\n        //     const renderTime = (dimension, time) => {\r\n        //     return (\r\n        //         <div className=\"time-wrapper\">\r\n        //         <div className=\"time\">{time}</div>\r\n        //         <div>{dimension}</div>\r\n        //         </div>\r\n        //     );\r\n        //     };\r\n\r\n        //     const getTimeSeconds = time => (minuteSeconds - time / 1000) | 0;\r\n        //     const getTimeMinutes = time => ((time % hourSeconds) / minuteSeconds) | 0;\r\n        //     const getTimeHours = time => ((time % daySeconds) / hourSeconds) | 0;\r\n        //     const getTimeDays = time => (time / daySeconds) | 0;\r\n\r\n        //     const stratTime = Date.now() / 1000; // use UNIX timestamp in seconds\r\n        //     const endTime = stratTime + 243248; // use UNIX timestamp in seconds\r\n\r\n        //     const remainingTime = endTime - stratTime;\r\n        //     const days = Math.ceil(remainingTime / daySeconds);\r\n        //     const daysDuration = days * daySeconds;\r\n\r\n        //     return (\r\n        //         <div className=\"App\">\r\n        //         <CountdownCircleTimer\r\n        //             {...timerProps}\r\n        //             colors={[[\"#7E2E84\"]]}\r\n        //             duration={daysDuration}\r\n        //             initialRemainingTime={remainingTime}\r\n        //         >\r\n        //             {({ elapsedTime }) =>\r\n        //             renderTime(\"days\", getTimeDays(daysDuration - elapsedTime / 1000))\r\n        //             }\r\n        //         </CountdownCircleTimer>\r\n        //         <CountdownCircleTimer\r\n        //             {...timerProps}\r\n        //             colors={[[\"#D14081\"]]}\r\n        //             duration={daySeconds}\r\n        //             initialRemainingTime={remainingTime % daySeconds}\r\n        //             onComplete={totalElapsedTime => [\r\n        //             remainingTime - totalElapsedTime > hourSeconds\r\n        //             ]}\r\n        //         >\r\n        //             {({ elapsedTime }) =>\r\n        //             renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime / 1000))\r\n        //             }\r\n        //         </CountdownCircleTimer>\r\n        //         <CountdownCircleTimer\r\n        //             {...timerProps}\r\n        //             colors={[[\"#EF798A\"]]}\r\n        //             duration={hourSeconds}\r\n        //             initialRemainingTime={remainingTime % hourSeconds}\r\n        //             onComplete={totalElapsedTime => [\r\n        //             remainingTime - totalElapsedTime > minuteSeconds\r\n        //             ]}\r\n        //         >\r\n        //             {({ elapsedTime }) =>\r\n        //             renderTime(\r\n        //                 \"minutes\",\r\n        //                 getTimeMinutes(hourSeconds - elapsedTime / 1000)\r\n        //             )\r\n        //             }\r\n        //         </CountdownCircleTimer>\r\n        //         <CountdownCircleTimer\r\n        //             {...timerProps}\r\n        //             colors={[[\"#218380\"]]}\r\n        //             duration={minuteSeconds}\r\n        //             initialRemainingTime={remainingTime % minuteSeconds}\r\n        //             onComplete={totalElapsedTime => [remainingTime - totalElapsedTime > 0]}\r\n        //         >\r\n        //             {({ elapsedTime }) =>\r\n        //             renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n        //             }\r\n        //         </CountdownCircleTimer>\r\n        //         </div>\r\n        //     );\r\n        // }\r\n    }\r\n    const showError = () =>{\r\n        if(error){\r\n            return(\r\n                <div className=\"alert alert-danger\">\r\n                    <h2>{errorText}</h2>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <Layout/>\r\n               <div className=\"container col-md-8\" style={{\r\n                  position: 'absolute', left: '50%', top: '50%',\r\n                  transform: 'translate(-50%, -50%)'\r\n                }}> \r\n                    {/* {showError()} */}\r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Order Status</p>\r\n                    <div className='form-group'>\r\n                    <label className=\"text-muted\">Enter Order Id</label>\r\n                        <input type='text' onChange={handleChange('orderId')} className='form-control' value={orderId}/>\r\n                    </div>\r\n                    <button className='btn btn-primary' onClick={checkETAButton}>Check Status</button>\r\n                    <br/>\r\n                    <hr/>\r\n                    {etaCheckFunction()}\r\n                </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ETA;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Shop.js",["913","914","915","916","917","918","919","920"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport Card from './Card';\r\nimport {getCategories} from './apiCore';\r\nimport Checkbox from './Checkbox';\r\nimport RadioBox from './RadioBox';\r\nimport {prices} from './fixedPrices';\r\nimport {getFilteredProducts} from './apiCore';\r\nimport Footer from './Footer';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Shop = () =>{\r\n    const [myFilters, setMyFilters] = useState({\r\n        filters: {\r\n            category:[],\r\n            price:[]\r\n        }\r\n    });\r\n    const [loading, setloading] = useState({\r\n        loading1: false,\r\n        loading2: false,\r\n        loading3: false\r\n    })\r\n    const {loading1, loading2, loading3} = loading\r\n    const [categories, setCategories] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [limit, setLimit] = useState(6);\r\n    const [skip, setSkip] = useState(0);\r\n    const [filteredResults, setFilteredResults] = useState([]);\r\n    const [size, setSize] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        init();\r\n        loadFilterResults(skip, limit, myFilters.filters);\r\n    },[])\r\n    \r\n    const init = () =>{\r\n        setloading({...loading, loading1:true})\r\n        getCategories()\r\n        .then(data=>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setCategories(data);\r\n                setloading({...loading, loading1:false})\r\n            }\r\n        })\r\n    }\r\n    const handlePrice = value =>{\r\n        const data = prices;\r\n        let array = [];\r\n        \r\n        for(let key in data){\r\n            if(data[key]._id === parseInt(value)){\r\n                array = data[key].array;\r\n            }\r\n        }\r\n        return array;\r\n    }\r\n    const handleFilters = (filters, filterBy) =>{\r\n        // console.log(\"Shop \" + filters + \" \" + filterBy);\r\n        const newFilters = {...myFilters};\r\n        newFilters.filters[filterBy] = filters;\r\n        \r\n        if(filterBy == 'price'){\r\n            let priceValues = handlePrice(filters);\r\n            newFilters.filters[filterBy] = priceValues;\r\n        }\r\n        loadFilterResults(myFilters.filters);\r\n        setMyFilters(newFilters);\r\n\r\n    }\r\n\r\n    const loadFilterResults = (newFilters) =>{\r\n        // console.log(newFilters);\r\n        setloading({...loading, loading2:true})\r\n        getFilteredProducts(skip, limit, newFilters)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                setFilteredResults(data.data);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n                setloading({...loading, loading2:false})\r\n            }\r\n        })\r\n    }\r\n    const loadMore = () =>{\r\n        // console.log(newFilters);\r\n        let toSkip = skip + limit;\r\n        setloading({...loading, loading3:true})\r\n        getFilteredProducts(toSkip, limit, myFilters.filters)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error)\r\n            }\r\n            else{\r\n                setFilteredResults([...filteredResults, ...data.data]);\r\n                setSize(data.size);\r\n                setSkip(0);\r\n                setloading({...loading, loading3:false})\r\n            }\r\n        })\r\n    }\r\n    const loadMoreButton = () =>{\r\n        return(\r\n            size > 0 && size >= limit && (\r\n                <div style={{width:'100%', textAlign:'center'}}>\r\n                    <button className=\"btn btn-warning mb-5\" onClick={loadMore}>Load More</button>\r\n                </div>\r\n            )\r\n        );\r\n    }\r\n\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Layout title=\"Shop\" description=\"Search and Find Books of Your Choice\" className=\"container-fluid\">\r\n                    {/* <div\r\n                        style={{\r\n                            backgroundImage: `url(\"https://images.unsplash.com/photo-1607898668108-0aa26c578fe3?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=755&q=80\")`,\r\n                            backgroundPosition: 'center',\r\n                            backgroundSize: 'cover',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            width:'100%',\r\n                            height:'600px',\r\n                        }}>\r\n                        <p style={{color:'black', width:'100%', textAlign:'center'}}>KHANSAMA SHOP</p>\r\n                    </div> */}\r\n                    <div\r\n                        style={{\r\n                            backgroundImage: `url(../newimg/15.jpg)`,\r\n                            backgroundPosition: 'center',\r\n                            backgroundSize: 'cover',\r\n                            backgroundRepeat: 'no-repeat',\r\n                            width:'100%',\r\n                            height:'500px',\r\n                        }}>\r\n                        {/* <p style={{color:'black', width:'100%', textAlign:'center'}}>KHANSAMA HOME</p> */}\r\n                        <p style={{width:'100%', textAlign:'center', paddingTop:10}}>\r\n                            <img src=\"./logo.png\" style={{width:150, height:80}}/>\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"row\" style={{margin:10}}>\r\n                        <div className=\"col-xl-3 col-lg-4 col-md-4 col-sm-4 col-12\">\r\n                            <div>\r\n                                <h4>Filter by Categories</h4>\r\n                                <ul>\r\n                                    <Checkbox categories={categories} handleFilters= { filters => handleFilters(filters, \"category\")}/>\r\n                                </ul>\r\n                            </div>\r\n                            <div>\r\n                                <h4>Filter by Prices</h4>\r\n                                <RadioBox prices={prices} handleFilters= { filters => handleFilters(filters, \"price\")}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-8 col-12\">\r\n                            <h4 className=\"mb-4\">Products</h4>\r\n                            <div className=\"row\">\r\n                                {filteredResults.map((product, i)=>(\r\n                                    <div key={i} className=\"col-xl-6 col-lg-9 col-md-11 col-sm-12 col-12 mb-3\">\r\n                                        <Card key={i} product={product}/>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr/>\r\n                            {loadMoreButton()}\r\n                            {/* {JSON.stringify(filteredResults)} */}\r\n                        </div>\r\n                    </div>\r\n                </Layout>\r\n                <Footer/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Shop;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Home.js",["921","922","923","924","925"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getProducts, getKitchens} from './apiCore';\r\nimport Card from './Card';\r\nimport CardFoodlancer from './CardFoodlancer';\r\nimport Search from './Search';\r\nimport Footer from './Footer';\r\nimport { Fade } from 'react-slideshow-image';\r\nimport 'react-slideshow-image/dist/styles.css'\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Home = () =>{\r\n    const [productsBySell, setproductsBySell] = useState([])\r\n    const [productsByArrival, setproductsByArrival] = useState([])\r\n    const [kitchensBySell, setkitchensBySell] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [loading, setloading] = useState({\r\n        loading1: false,\r\n        loading2: false,\r\n        loading3: false\r\n    })\r\n    const {loading1, loading2, loading3} = loading\r\n    const loadProductsBySell = () =>{\r\n        setloading({...loading, loading1:true})\r\n        getProducts('sold')\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setproductsBySell(data);\r\n                setloading({...loading, loading1:false})\r\n            }\r\n        })\r\n    }\r\n    const loadProductsByArrival = () =>{\r\n        setloading({...loading, loading2:true})\r\n        getProducts('createdAt')\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setproductsByArrival(data);\r\n                setloading({...loading, loading2:false})\r\n            }\r\n        })\r\n    }\r\n    const loadKitchensBySell = () =>{\r\n        setloading({...loading, loading3:true})\r\n        getKitchens('sold')\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setkitchensBySell(data.foodlancer);\r\n                // console.log(data.foodlancer)\r\n                setloading({...loading, loading3:false})\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        loadKitchensBySell();\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, [])\r\n    // const override = css`\r\n    // flex: 1,\r\n    // margin-top:240,\r\n    // justify-content: 'center',\r\n    // align-items:'center'\r\n    //     `;\r\n \r\n    if(loading1 === true || loading2 === true || loading3 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Layout title=\"Foodie Home\" description=\"Node React E-Commerce App\" className=\"container-fluid\">\r\n                <div\r\n                    style={{\r\n                        backgroundImage: `url(../newimg/3.jpg)`,\r\n                        backgroundPosition: 'center',\r\n                        backgroundSize: 'cover',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        width:'100%',\r\n                        height:'500px',\r\n                    }}>\r\n                    {/* <p style={{color:'black', width:'100%', textAlign:'center'}}>KHANSAMA HOME</p> */}\r\n                    <p style={{width:'100%', textAlign:'center', paddingTop:10}}>\r\n                        <img src=\"./logo.png\" style={{width:150, height:80}}/>\r\n                    </p>\r\n                </div>\r\n                    {/* {showLoading()} */}\r\n                    <Search/>\r\n                    <h2 className=\"mb-4\" style={{marginLeft:20, textAlign:'left', fontWeight:'600'}}>Top Kitchens</h2>\r\n                    <div className=\"row\" style={{marginLeft:10, marginRight:10}}>\r\n                        {kitchensBySell.map((kitchen, i)=>(\r\n                            <div key={i} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-3\">\r\n                                <CardFoodlancer foodlancer={kitchen}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <h2 className=\"mb-4\" style={{marginLeft:20, textAlign:'left', fontWeight:'600'}}>New Arrivals</h2>\r\n                    <div className=\"row\" style={{marginLeft:10, marginRight:10}}>\r\n                        {productsByArrival.map((product, i)=>(\r\n                            <div key={i} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-3\">\r\n                                <Card product={product}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <h2 className=\"mb-4\" style={{marginLeft:20, textAlign:'left', fontWeight:'600'}}>Best Sellers</h2>\r\n                    <div className=\"row\" style={{marginLeft:10, marginRight:10}}>\r\n                        {productsBySell.map((product, i)=>(\r\n                            <div key={i} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-3\"> \r\n                                <Card key={i} product={product}/>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </Layout>\r\n                <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Home;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\Signin.js",["926","927","928","929","930","931","932","933"],"import React,{useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Layout from '../foodie/core/Layout';\r\nimport {signin, authenticate, isAuthenticated, facebooklogin, googlesignin} from '../foodie/auth/index';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import { ToastProvider, useToasts } from 'react-toast-notifications'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst Signin = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        email:'sulemanhamzatahir1212@gmail.com',\r\n        password:'111111',\r\n        error:'',\r\n        loading:false,\r\n        redirectToReferrer:false\r\n    });\r\n    const [loadings, setloading] = useState({\r\n        loading1: false,\r\n    })\r\n    const {loading1} = loadings\r\n    const {email, password, error, loading, redirectToReferrer} = values;\r\n    // const  {user}  = isAuthenticated();\r\n    // const { addToast } = useToasts()\r\n    const handleChange = name => event =>{\r\n        setValues({...values, error:false, [name]: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false, loading:true})\r\n        setloading({...loadings, loading1:true})\r\n        signin({email, password})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, loading:false})\r\n                setloading({...loading, loading1:false})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                authenticate(data, ()=>{\r\n                    setValues({...values, redirectToReferrer:true})\r\n                    setloading({...loading, loading1:false})\r\n                    history.push('/');\r\n                })\r\n                toast.success(\"Logged In Successfully\");\r\n                setloading({...loadings, loading1:false})\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const signinForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Login\r\n            </button> \r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <Link to=\"/signup\" style={{color:'#007bff'}}>Don't have a Account? Sign Up</Link>\r\n                </div>\r\n                <div className=\"col-4\" style={{textAlign:'right'}}>\r\n                    <Link to=\"/forget/password\" style={{color:'#F40009'}}>Forget Password</Link>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n\r\n    const showError = () =>{\r\n        if(error ===\"11000 duplicate key error collection: ecommerce.users index: email already exists\"){\r\n            setValues({...values, error:\"Email Already Exist\"})\r\n        }\r\n        return(\r\n            <div className=\"alert alert-danger\" \r\n                style={{\r\n                    display:error?'':'none'\r\n                }}>\r\n                {error}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n                <div className=\"alert alert-info\">\r\n                  <h2>Loading...</h2>\r\n                </div>\r\n                // <div className=\"sweet-loading\">\r\n                //     <ClipLoader\r\n                //         css={override}\r\n                //         size={50}\r\n                //         type=\"PacmanLoader\"                        \r\n                //         color={\"#123abc\"}\r\n                //         loading={loading}\r\n                //     />\r\n                // </div>\r\n    );\r\n\r\n    // const redirectUser = () =>{\r\n    //     if(redirectToReferrer === true){\r\n    //        if(user && user.role === 1){\r\n    //             return <Redirect to=\"/admin/dashboard\"/>\r\n    //        }\r\n    //        else{\r\n    //             return <Redirect to=\"/user/dashboard\"/>\r\n    //        }\r\n    //     }\r\n    //     if(isAuthenticated()){\r\n    //         return <Redirect to=\"/\"/>\r\n    //      }\r\n    // }\r\n    const responseFacebook = (response) => {\r\n        const {name, email} = response;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by FB\");\r\n            toast.error(\"No FB account is attach\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            facebooklogin({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n                else{\r\n                    authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        toast.success(\"Logged In Successfully\");\r\n                        setloading({...loading, loading1:false})\r\n                        history.push('/');\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const responseGoogle = (response) => {\r\n        // console.log(response);\r\n        // console.log(response.profileObj.email);\r\n        // console.log(response.profileObj.name);\r\n        const {name, email} = response.profileObj;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by Google\");\r\n            toast.error(\"No Google account is attach\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            googlesignin({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n                else{\r\n                    authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.success(\"Logged In Successfully\");\r\n                        history.push('/');\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n            return(\r\n            // <Layout title=\"Signin\" description=\"Node React E-Commerce App Signin\" className=\"container col-md-8 offset-md-2\">\r\n            //     {showLoading()}\r\n            //     {showError()}\r\n            //     {signinForm()}\r\n            //     {/* {redirectUser()} */}\r\n            //     {/* {JSON.stringify(values)} */}\r\n            // </Layout>\r\n            <div>\r\n                <Layout/>\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{\r\n                    //   position: 'absolute', left: '50%', top: '50%',\r\n                    //   transform: 'translate(-50%, -50%)'\r\n                    }}> \r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                    <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Foodie Login</p>\r\n                    {/* {showError()} */}\r\n                    {/* {showLoading()} */}\r\n                    <div className=\"row\" style={{marginTop:30}}>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                                <div>\r\n                                    {signinForm()}\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"text\" style={{marginBottom:5}}>\r\n                                    External Login\r\n                                </div>\r\n                                <div>\r\n                                    <FacebookLogin\r\n                                        appId=\"116202456910700\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email\"\r\n                                        callback={responseFacebook}\r\n                                        icon=\"fa-facebook mr-1\"\r\n                                        cssClass=\"fb_styling py-2 rounded-lg\"\r\n                                    />\r\n                                    {/* <FacebookLogin\r\n                                        appId=\"116202456910700\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email\"\r\n                                        callback={responseFacebook}\r\n                                        cssClass=\"fb_styling\"\r\n                                        render={renderProps => (\r\n                                            <button\r\n                                                onClick={renderProps.onClick}\r\n                                                className='w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5'\r\n                                                style={{width:'100%'}}>\r\n                                                <div className=' p-2 rounded-full '>\r\n                                                    <i class=\"fa fa-google\" aria-hidden=\"true\">\r\n                                                        Sign In with Facebook\r\n                                                    </i>\r\n                                                </div>\r\n                                            </button>\r\n                                        )}\r\n                                    /> */}\r\n                                    <p style={{width:'100%', textAlign:'center', margin:0, padding:0}}>&nbsp; OR &nbsp;</p> \r\n                                    {/* <GoogleLogin\r\n                                        clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                    /> */}\r\n                                    <GoogleLogin\r\n                                        clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                        render={renderProps => (\r\n                                            <button\r\n                                            onClick={renderProps.onClick}\r\n                                            disabled={renderProps.disabled}\r\n                                            className='py-2 rounded-lg'\r\n                                            style={{width:'100%'}}>\r\n                                            <div className='rounded-full '>\r\n                                                <i className='fa fa-google mr-1' />\r\n                                                Login with Google\r\n                                            </div>\r\n                                            </button>\r\n                                        )}\r\n                                    ></GoogleLogin>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                                style={{backgroundColor:'#dae5ed', height:'465px'}}>\r\n                                <img src=\"./logo2.png\" className=\"imageCenter\" \r\n                                    style={{width:'65%'}}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>        \r\n        );\r\n    }\r\n};\r\n\r\n// const Signup = () =>(\r\n//     <Layout title=\"Signup\" description=\"Node React E-Commerce App Signup\">\r\n//         {API}\r\n//     </Layout>\r\n// )\r\n  \r\nexport default Signin;\r\n\r\n// import React, { Component } from 'react';\r\n\r\n// const App = () => {\r\n//   const notify = () => toast(\"Wow so easy !\");\r\n  \r\n//   return <button onClick={notify}>Notify !</button>;\r\n// }\r\n// export default App","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\Signup.js",["934","935","936","937","938","939"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Layout from '../foodlancer/core/Layout';\r\nimport {signup} from '../foodlancer/auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Menu from './core/Menu';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Signup = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        name:'',\r\n        kitchen:'',\r\n        email:'',\r\n        password:'',\r\n        error:'',\r\n        success:false,\r\n        photo:'',\r\n        formData:new FormData()\r\n    });\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    \r\n    const {name, kitchen, email, password, error, success, photo, formData} = values;\r\n\r\n    const handleChange = name => event =>{\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        // formData.set(name, value);\r\n        setValues({...values, error:false, [name]: value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setloading({...loadings, loading1:true})\r\n        setValues({...values, error:false})\r\n        formData.set('name', name);\r\n        formData.set('kitchen', kitchen);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('photo', photo);\r\n        // signup(formData)\r\n        signup(formData)\r\n        .then(data =>{\r\n            if(data.error){\r\n                if(data.error === \"11000 duplicate key error collection: khansama.foodlancers index: email already exists\"){\r\n                    setloading({...loadings, loading1:false})\r\n                    setValues({...values, error:\"Email Already Exist\", success:false})\r\n                    toast.error(\"Email Already Exist\");\r\n                }\r\n                else{\r\n                    setloading({...loadings, loading1:false})\r\n                    setValues({...values, error:data.error, success:false})\r\n                    toast.error(data.error);\r\n                }\r\n\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setValues({...values, name:'', kitchen:'', email:'', password:'', error:'', success:true})\r\n                toast.success(\"Sign Up In Successfully. Kindly Login\");\r\n                history.push('/foodlancer/signin')\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const signupForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Kitchen Name</label>\r\n                <input onChange={handleChange('kitchen')} type=\"text\" className=\"form-control\" value={kitchen}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Image</label><br></br>\r\n                <label className=\"btn btn-secondary\">\r\n                    <input type=\"file\" className=\"\" onChange={handleChange('photo')} name=\"photo\" accept=\"image/*\"/>\r\n                </label>\r\n            </div>\r\n            {/* <button onClick={clickSubmit} className=\" btn btn-primary\">Submit</button> */}\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Sign Up\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () =>{\r\n        if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n            setValues({...values, error:\"Email Already Exist\"})\r\n        }\r\n        return(\r\n            <div className=\"alert alert-danger\" \r\n                style={{\r\n                    display:error?'':'none'\r\n                }}>\r\n                {error}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const showSuccess = () =>(\r\n        <div className=\"alert alert-info\" \r\n            style={{\r\n                display:success?'':'none'\r\n            }}>\r\n            Account is Created. <Link to=\"/signin\">Please Signin</Link>\r\n        </div>\r\n    );\r\n\r\n\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <div>\r\n                <Menu/>\r\n                {/* <Layout/> */}\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{\r\n                    }}> \r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                    <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Foodlancer SignUp</p>\r\n                        {/* {showError()} */}\r\n                        {/* {showSuccess()} */}\r\n                        <div className=\"row\" style={{marginTop:30}}>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\">\r\n                                <div>\r\n                                    {signupForm()}\r\n                                </div>\r\n                                <br/>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                                style={{backgroundColor:'#dae5ed', height:'440px'}}>\r\n                                <img src=\"../foodlancer.png\" className=\"imageCenter\" \r\n                                    style={{width:'65%'}}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n// const Signup = () =>(\r\n//     <Layout title=\"Signup\" description=\"Node React E-Commerce App Signup\">\r\n//         {API}\r\n//     </Layout>\r\n// )\r\n  \r\nexport default Signup;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AdminProfile.js",["940","941","942","943"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {readAdmins, updateAdmins} from './apiAdmin'; \r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Profile = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:false,\r\n        success:false\r\n    });\r\n    const {user:{_id}, token} = isAuthenticated()\r\n    const {name, email, password, error, success} = values\r\n    const init = (userId) =>{\r\n        // console.log(userId) \r\n        readAdmins(userId, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n            }   \r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        init(match.params.adminId)\r\n    },[])\r\n    const profileUpdate = (name, email, password) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Update</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        updateAdmins(_id, match.params.adminId, token, {name, email, password}).then(data =>{\r\n                if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{ \r\n                setValues({...values, name: data.name, email: data.email, success:true})\r\n                toast.success(\"Admin Updated Successfully.\")\r\n            }\r\n        })\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/admin/dashboard\"/>\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Profile\" description=\"Update Your Profile\" className=\"container-fluid\">\r\n            <div className=\"col-md-8 offset-md-2\">\r\n                <h2 className=\"mb-4\">Profile Update</h2>\r\n                {profileUpdate(name, email, password)}\r\n                {redirectUser(success)}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\NewOrder.js",["944","945","946","947","948","949","950"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {listOrders, getStatusValues, updateStatusValues} from './apiAdmin';\r\nimport moment from 'moment';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        listOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        getStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        // if(num > 0){\r\n        //     return(\r\n        //         <h4 className=\"text-danger display-2\">Total Orders: {num}</h4>\r\n        //     )\r\n        // }\r\n        // else{\r\n            return (\r\n                <h4 className=\"text-danger\">No Orders</h4>    \r\n            )\r\n        // }\r\n    }\r\n    // const showOrderNumber = () =>{\r\n    //     var num = count + 1;\r\n    //     setCount(num)\r\n    //     // return num;\r\n    // }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"New Orders\" description={`Hello ${user.name}, You Can Manage All New Orders Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {/* {showOrdersLength()} */}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(order.status === 'Not processed' ||  order.status === 'Not Processed'){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AcceptOrder.js",["951","952","953","954","955","956","957"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {listOrders, getStatusValues, updateStatusValues} from './apiAdmin';\r\n\r\nimport moment from 'moment';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n      \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        listOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        getStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        // if(num > 0){\r\n        //     return(\r\n        //         <h4 className=\"text-danger display-2\">Total Orders: {num}</h4>\r\n        //     )\r\n        // }\r\n        // else{\r\n            return (\r\n                <h4 className=\"text-danger\">No Orders</h4>    \r\n            )\r\n        // }\r\n    }\r\n    // const showOrderNumber = () =>{\r\n    //     var num = count + 1;\r\n    //     setCount(num)\r\n    //     // return num;\r\n    // }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Orders\" description={`Hello ${user.name}, You Can Manage All Accepted Orders Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {/* {showOrdersLength()} */}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(order.status === 'Accepted' ){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\CancelOrder.js",["958","959","960","961","962","963","964"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {listOrders, getStatusValues, updateStatusValues} from './apiAdmin';\r\nimport moment from 'moment';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        listOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        getStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        // if(num > 0){\r\n        //     return(\r\n        //         <h4 className=\"text-danger display-2\">Total Orders: {num}</h4>\r\n        //     )\r\n        // }\r\n        // else{\r\n            return (\r\n                <h4 className=\"text-danger\">No Orders</h4>    \r\n            )\r\n        // }\r\n    }\r\n    // const showOrderNumber = () =>{\r\n    //     var num = count + 1;\r\n    //     setCount(num)\r\n    //     // return num;\r\n    // }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    \r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Orders\" description={`Hello ${user.name}, You Can Manage All Cancelled Orders Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {/* {showOrdersLength()} */}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(order.status === 'Cancelled'){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\ManageProducts.js",["965","966"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport { isAuthenticated } from \"../auth/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getProducts, deleteProduct } from \"./apiAdmin\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadProducts = () => {\r\n        setloading({...loadings, loading1:true})\r\n        getProducts().then(data => {\r\n            if (data.error) {\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error);\r\n            } else {\r\n                setloading({...loadings, loading1:false})\r\n                setProducts(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const destroy = productId => {\r\n        setloading({...loadings, loading1:true})\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error);\r\n            } else {\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Product is Deleted Successfully.\")\r\n                loadProducts();\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n    \r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return (\r\n            <Layout\r\n                title=\"Manage Products\"\r\n                description=\"Your Can Manage All Products Hete\"\r\n                className=\"container-fluid\"\r\n            >\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"text-center\">\r\n                            Total {products.length} products\r\n                        </h2>\r\n                        <hr />\r\n                        <ul className=\"list-group\">\r\n                            {products.map((p, i) => (\r\n                                <li\r\n                                    key={i}\r\n                                    className=\"list-group-item d-flex justify-content-between align-items-center\"\r\n                                >\r\n                                    <div className=\"col-8\">\r\n                                        <strong>{p.name}</strong>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <Link to={`/admin/product/update/${p._id}`}>\r\n                                            <span className=\"badge badge-warning badge-pill\">\r\n                                                Update\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <span\r\n                                            onClick={() => destroy(p._id)}\r\n                                            className=\"badge badge-danger badge-pill\"\r\n                                        >\r\n                                            Delete\r\n                                        </span>\r\n                                    </div>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                        <br />\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ManageProducts;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AllAdmins.js",["967","968"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\AllOrders.js",["969","970","971","972","973"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancerlistOrders, FoodlancergetStatusValues, updateStatusValues} from './apiFoodlancer';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        FoodlancerlistOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        FoodlancergetStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        if(orders.length === 0){\r\n            return(\r\n                <h4 className=\"text-danger display-4\" style={{textAlign:'center'}}>No Order Yet</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-success display-4\" style={{textAlign:'center'}}>Total Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n    }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"All Orders\" description=\"You Can Manage All The Orders Here\" className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            // if(product.foodlancer === user._id){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            // }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\NewOrder.js",["974","975","976","977","978","979","980","981"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancerlistOrdersByOrderStatus, FoodlancergetStatusValues, updateStatusValues} from './apiFoodlancer';\r\nimport moment from 'moment';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        FoodlancerlistOrdersByOrderStatus(user._id, token, 'Not Processed').then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        FoodlancergetStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        if(orders.length === 0){\r\n            return(\r\n                <h4 className=\"text-danger display-4\" style={{textAlign:'center'}}>No New Orders</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-success display-4\" style={{textAlign:'center'}}>Total New Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n    }\r\n    // const showOrderNumber = () =>{\r\n    //     var num = count + 1;\r\n    //     setCount(num)\r\n    //     // return num;\r\n    // }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"New Orders\" description={`You Can Manage New Orders Here`} className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(product.foodlancer === user._id && order.status === 'Not processed' ||  order.status === 'Not Processed'){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\AcceptOrder.js",["982","983","984","985","986","987"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\DeliveredOrder.js",["988","989","990","991","992","993"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancerlistOrdersByOrderStatus, FoodlancergetStatusValues, updateStatusValues} from './apiFoodlancer';\r\nimport moment from 'moment';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        FoodlancerlistOrdersByOrderStatus(user._id, token, 'Delivered').then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        FoodlancergetStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        if(orders.length === 0){\r\n            return(\r\n                <h4 className=\"text-danger display-4\" style={{textAlign:'center'}}>No Delivered Orders</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-success display-4\" style={{textAlign:'center'}}>Total Delivered Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n    }\r\n    // const showOrderNumber = () =>{\r\n    //     var num = count + 1;\r\n    //     setCount(num)\r\n    //     // return num;\r\n    // }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"Delivered Orders\" description=\"You Can Manage Delivered Orders Here\" className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(product.foodlancer === user._id && order.status === 'Delivered'){\r\n                                                return(\r\n                                                <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        {/* Order # {showOrderNumber()}  */}\r\n                                                    </h2>\r\n                                                    <h2 className=\"mb-5\">\r\n                                                        <span className=\"bg-primary\">\r\n                                                            Order ID: {order._id} \r\n                                                        </span>\r\n                                                    </h2>\r\n                                                    <ul className=\"list-group mb-2\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Oder By: {order.user.name}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                        {showStatus(order)}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Transaction ID: {order.transaction_id}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Total Amount: ${order.amount}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            Delivery Address: {order.address}\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                    <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                        Total Products In The Order {order.products.length}\r\n                                                    </h3>\r\n                                                    <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                        {/* {user._id} */}\r\n                                                        {showInput('Product Name', product.name)}\r\n                                                        {showInput('Product Price', product.price)}\r\n                                                        {showInput('Product Quantity', product.count)}\r\n                                                        {showInput('Product Id', product._id)}\r\n                                                        {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\CancelOrder.js",["994","995","996","997","998","999"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\index.js",["1000"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <App/>,\n//   document.getElementById('root')\n// );  \n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerDashborard.js",["1001","1002","1003","1004"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {readFoodlancers, readFoodlancersOrdersInformation} from './apiFoodlancer';\r\n// import order from '../../../../fyp_project/models/order';\r\n\r\nconst AdminDashboard = () =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        error:''\r\n    });   \r\n    const [FoodlancerInfo, setFoodlancerInfo] = useState({\r\n        orderArray:[],\r\n        orders:0,\r\n        soldProducts:0,\r\n        income:0,\r\n        errorInfo:''\r\n    })\r\n    const {name, email, error} = values\r\n    const {orderArray, orders, soldProducts, income, errorInfo} = FoodlancerInfo\r\n    const  {user:{_id, role}}  = isAuthenticated();\r\n    const {token} = isAuthenticated()\r\n\r\n    const readFoodlancersFunction = (foodlancer, token) =>{\r\n        readFoodlancers(_id, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n            }   \r\n            console.log(\"NAME :: \" + values.name)\r\n        })\r\n    }\r\n\r\n    const readFoodlancersOrdersInformationFunction = () =>{\r\n        readFoodlancersOrdersInformation(_id, token).then(data =>{\r\n            if(data.error){\r\n                setFoodlancerInfo({...FoodlancerInfo, errorInfo: true})\r\n            }\r\n            else{\r\n                // setValues({...values, orderArray: data.ordersArray})\r\n                // console.log(orderArray)\r\n                // console.log(data.ordersArray);\r\n                let o = data.ordersArray.length;\r\n                let p = 0;\r\n                let inc = 0;\r\n                for(var i=0; i<data.ordersArray.length; i++){\r\n                    p = p + data.ordersArray[i].count;\r\n                    inc = inc + data.ordersArray[i].price;\r\n                }\r\n                setFoodlancerInfo({...FoodlancerInfo, orders: o, soldProducts: p, income: inc})\r\n            }   \r\n        })\r\n    }\r\n\r\n    useEffect (()=>{\r\n        readFoodlancersFunction(_id, token);     \r\n        readFoodlancersOrdersInformationFunction(_id, token);     \r\n         \r\n    },[])\r\n\r\n\r\n    const adminLinks = () =>{\r\n        return(\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header\">Foodlancer Links</h3>\r\n                <ul className=\"list-group\">\r\n                    {/* <li className=\"list-group-item \">\r\n                       <Link className=\"nav-link\" to=\"/create/category\">Create Category</Link>\r\n                    </li> */}\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to={`/foodlancer/profile/${_id}`}>Update Profile</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/create/product\">Create products</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/products\">Manage Products</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders\">All Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders/new\">New Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders/accept\">Accepted Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders/processing\">Processing Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders/shipped\">Shipped Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders/delivered\">Delivered Orders</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to=\"/foodlancer/orders/cancel\">Cancelled Orders</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n    const adminInfo = () =>{\r\n        return(\r\n                <div>\r\n                    <div className=\"card mb-5\">\r\n                        <h3 className=\"card-header\">Foodlancer Profile Information</h3>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item \">\r\n                                Name: {name}\r\n                            </li>\r\n                            <li className=\"list-group-item \">\r\n                                Email: {email}\r\n                            </li>\r\n                            <li className=\"list-group-item \">\r\n                                Role: {role === 1 ? 'Foodlancer':'Admin'}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card mb-5\">\r\n                        <h3 className=\"card-header\">Foodlancer Order Information</h3>\r\n                        <ul className=\"list-group\">\r\n                            <li className=\"list-group-item \">\r\n                                Total Orders: {orders}\r\n                            </li>\r\n                            <li className=\"list-group-item \">\r\n                                Total Products Sold: {soldProducts}\r\n                            </li>\r\n                            <li className=\"list-group-item \">\r\n                                Total Income: {income}Rs.\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n        );\r\n    };\r\n    // const userPurchaseHistory = () =>{\r\n    //     return(\r\n    //         <div className=\"card mb-5\">\r\n    //             <h3 className=\"card-header\">Purchase History</h3>\r\n    //             <ul className=\"list-group\">\r\n    //                 <li className=\"list-group-item \">\r\n    //                     History\r\n    //                 </li>\r\n    //             </ul>\r\n    //         </div>\r\n    //     );\r\n    // };\r\n    return(\r\n        // <Layout title=\"Admin Dashboard\" description={`Hello ${name}`} className=\"container-fluid\">\r\n        //     <div className=\"row\">\r\n        //         <div className=\"col-3\">\r\n        //             {adminLinks()}\r\n        //         </div>\r\n        //         <div className=\"col-9\">\r\n        //             {adminInfo()}\r\n        //             {/* {userPurchaseHistory()} */}\r\n        //         </div>\r\n        //     </div>\r\n        // </Layout>\r\n        <div>\r\n            <Layout/>\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-3 col-lg-4 col-md-5 col-sm-12 col-12\">\r\n                    {adminLinks()}\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-8 col-md-7 col-sm-12 col-12\">\r\n                    {adminInfo()}\r\n                    {/* {userPurchaseHistory()} */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AdminDashboard;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Profile.js",["1005","1006","1007","1008"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {readFoodlancers, updateFoodlancers, updateUser} from './apiFoodlancer'; \r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Profile = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        photo:'',\r\n        error:false,\r\n        success:false,\r\n        formData:''\r\n    }); \r\n    const {token} = isAuthenticated()\r\n    const {name, email, password, error, success, formData, photo} = values\r\n    const init = (userId) =>{\r\n        // console.log(userId) \r\n        readFoodlancers(userId, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email, formData:new FormData()})\r\n            }   \r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        init(match.params.foodlancerId)\r\n    },[])\r\n    const profileUpdate = (name, email, password) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Foodlancer Image</label><br></br>\r\n                <label className=\"btn btn-secondary\">\r\n                    <input type=\"file\" className=\"\" onChange={handleChange('photo')} name=\"photo\" accept=\"image/*\"/>\r\n                </label>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Update</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (event) =>{\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        // formData.set(name, value);\r\n        setValues({...values, error: false, [name]: value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('photo', photo);\r\n        // console.log(formData);\r\n        // console.log(name + email + password);\r\n        updateFoodlancers(match.params.foodlancerId, token, formData).then(data =>{\r\n            // updateFoodlancers(match.params.foodlancerId, token, {name, email, password}).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{ \r\n                updateUser(data, ()=>{\r\n                    toast.success(\"Foodlancer is Updated\")\r\n                    setValues({...values, name: data.name, email: data.email, success:true})\r\n                })\r\n                // localStorage.removeItem('jwt');\r\n                // localStorage.setItem('jwt', JSON.stringify(data))\r\n                // init(match.params.foodieId)\r\n                // redirectUser(data)\r\n            }\r\n        })\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/foodlancer\"/>\r\n            // localStorage.setItem('jwt', JSON.stringify(data))\r\n            // init(match.params.foodieId)\r\n            // authenticate(data, ()=>{\r\n            //     setValues({data})\r\n            // })\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Foodlancer Profile\" description=\"Update Your Profile\" className=\"container-fluid\">\r\n            <div className=\"container col-md-8\"> \r\n                <h2 className=\"mb-4\">Profile Update</h2>\r\n                {profileUpdate(name, email, password)}\r\n                {redirectUser(success)}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\FoodlancerProfile.js",["1009","1010","1011","1012"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {readFoodlancers, updateFoodlancers} from './apiAdmin'; \r\n\r\nconst Profile = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:false,\r\n        success:false\r\n    });\r\n    const {user:{_id}, token} = isAuthenticated()\r\n    const {name, email, password, error, success} = values\r\n    const init = (userId) =>{\r\n        // console.log(userId) \r\n        readFoodlancers(userId, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n            }   \r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        init(match.params.foodlancerId)\r\n    },[])\r\n    const profileUpdate = (name, email, password) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Submit</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        updateFoodlancers(_id, match.params.foodlancerId, token, {name, email, password}).then(data =>{\r\n                if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{ \r\n                    setValues({...values, name: data.name, email: data.email, success:true})\r\n            }\r\n        })\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/admin/foodlancers\"/>\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Profile\" description=\"Update Your Profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile Update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\auth\\PrivateRoute.js",["1013"],"import React, {Component} from 'react';\r\nimport {Route, Redirect} from 'react-router-dom';\r\nimport {isAuthenticated} from './index';\r\n\r\nconst PrivateRoute = ({component:Component, ...rest}) =>(\r\n    <Route {...rest} render={props =>isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n            <Component {...props}/>\r\n        ) : (\r\n            <Redirect \r\n                to = {{\r\n                    pathname: '/foodlancer/signin', \r\n                    state:{from:props.location}\r\n                }}\r\n            />\r\n        ) \r\n    }/>\r\n);\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\FoodieProfile.js",["1014","1015","1016","1017"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {readFoodie, updateFoodie} from './apiAdmin'; \r\n\r\nconst Profile = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:false,\r\n        success:false\r\n    });\r\n    const {user:{_id}, token} = isAuthenticated()\r\n    const {name, email, password, error, success} = values\r\n    const init = (userId) =>{\r\n        // console.log(userId) \r\n        readFoodie(userId, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n            }   \r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        init(match.params.foodieId)\r\n    },[])\r\n    const profileUpdate = (name, email, password) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Submit</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        updateFoodie(_id, match.params.foodieId, token, {name, email, password}).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{ \r\n                    setValues({...values, name: data.name, email: data.email, success:true})\r\n            }\r\n        })\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/admin/foodies\"/>\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Profile\" description=\"Update Your Profile\" className=\"container-fluid\">\r\n            <h2 className=\"mb-4\">Profile Update</h2>\r\n            {profileUpdate(name, email, password)}\r\n            {redirectUser(success)}\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;",["1018","1019"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Layout.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Card.js",["1020","1021","1022","1023","1024","1025","1026","1027"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport {addItem, updateProduct, removeProduct} from './cartHelpers';\r\nconst Card = ({product, showViewProductButton = true, showAddToCartButton = true, cartUpdate = false, showRemoveProductButton = false, setRun = f => f, run = undefined}) =>{\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\nconst showViewButton = (showViewProductButton) =>{\r\n    return(\r\n        showViewProductButton && (\r\n            <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                <button className=\"btn btn-outline-primary mt-2 mb-2 mr-2\"\r\n                style={{width:'100%'}}>\r\n                    View Product\r\n                </button>\r\n            </Link>\r\n        )\r\n    )\r\n}\r\n// const showAddToCart = showAddToCartButton =>{\r\n    // return showAddToCartButton && (\r\n    //     <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\r\n    //         Add to Cart \r\n    //     </button>\r\n    // );\r\n// };\r\n// const showRemoveCartButton = showRemoveProductButton =>{\r\n//     return (\r\n//         showRemoveProductButton && (\r\n//           <button\r\n//             onClick={() => {\r\n//               removeProduct(product._id);\r\n//               setRun(!run); // run useEffect in parent Cart\r\n//             }}\r\n//             className=\"btn btn-outline-danger mt-2 mb-2\"\r\n//           >\r\n//             Remove Product\r\n//           </button>\r\n//         )\r\n//       );\r\n// };\r\n// const addToCart = () =>{\r\n//     addItem(product, ()=>{\r\n//         setRedirect(true);\r\n//     })\r\n// }\r\n// const shouldRedirect = redirect =>{\r\n//     if(redirect){\r\n//         return <Redirect to=\"/cart\"/>\r\n//     }\r\n// }\r\n\r\n// const showStock = (quantity) =>{\r\n//     return quantity > 0 ? \r\n//     <span className=\"badge badge-primary badge-pill\">In Stock</span>\r\n//     :\r\n//     <span className=\"badge badge-primary badge-pill\">Out Of Stock</span>\r\n// }\r\n// const showCartUpdateOptions = cartUpdate =>{\r\n//     return cartUpdate && (\r\n//         <div>\r\n//             <div className=\"input-group mb-3\">\r\n//                 <div className=\"input-group-prepend\">\r\n//                     <span className=\"input-group-text\">Adjust Quantity</span>\r\n//                 </div>\r\n//                 <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)}/>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\nconst handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n        updateProduct(productId, event.target.value);\r\n    }\r\n} \r\n    return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header name\" >\r\n                    {product.name}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {/* {shouldRedirect(redirect)} */}\r\n                    <ShowImage item={product} url=\"product\"/>\r\n                    <p className=\"lead mt-2\">{product.description.substring(0,100)}</p>\r\n                    <p className=\"black-10\">Price: ${product.price}</p>\r\n                    <p className=\"black-9\">Category: ${product.category && product.category.name}</p>\r\n                    <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n                    {/* {showStock(product.quantity)} */}\r\n                    <br/>\r\n                    {showViewButton(showViewProductButton)}\r\n                    {/* {showAddToCart(showAddToCartButton)} */}\r\n                    {/* {showRemoveCartButton(showRemoveProductButton)} */}\r\n                    {/* {showCartUpdateOptions(cartUpdate)}  */}\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\apiFoodlancer.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\cartHelpers.js",["1028","1029"],"export const addItem = (item, next) =>{\r\n    let cart = [];\r\n    if(typeof window !== undefined){\r\n        if(localStorage.getItem('cart')){\r\n            cart = JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count:1\r\n        })\r\n\r\n        // remove duplicates.\r\n        // build an array from new set and turn it back into array using Array.from.\r\n        // so that later we can re-map it.\r\n        // new set will only allow unique values in it. \r\n        // so pass the ids of each object/product.\r\n        // if the loop tries to add the same value again, it'll get ignored.\r\n        /// ...with the array of ids we got on when first map() was used.\r\n        // run map() on it again and return the actual product from the cart. \r\n        cart = Array.from(new Set(cart.map((p)=>(p._id)))).map(id =>{\r\n            return cart.find(p => p._id === id)\r\n        });\r\n\r\n        localStorage.setItem('cart',JSON.stringify(cart));\r\n        next();\r\n    }\r\n}\r\n\r\nexport const itemTotal = () => {\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            return JSON.parse(localStorage.getItem('cart')).length;\r\n        }\r\n    }\r\n    return 0;\r\n};\r\nexport const getCart = () => {\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            return JSON.parse(localStorage.getItem('cart'));\r\n        }\r\n    }\r\n    return [];\r\n};\r\n\r\nexport const updateProduct = (productId, count) =>{\r\n    let cart = [];\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if(product._id === productId){\r\n                cart[i].count = count;\r\n            }\r\n        })\r\n        localStorage.setItem('cart',JSON.stringify(cart));\r\n    }\r\n} \r\nexport const removeProduct = (productId) =>{\r\n    let cart = [];\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem('cart')){\r\n            cart = JSON.parse(localStorage.getItem('cart'))\r\n\r\n        }\r\n\r\n        cart.map((product, i) => {\r\n            if(product._id === productId){\r\n                cart.splice(i, 1)\r\n            }\r\n        })\r\n        localStorage.setItem('cart',JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n}; \r\nexport const emptyCart = next => {\r\n    if(typeof window !== 'undefined'){\r\n        localStorage.removeItem('cart');\r\n        next();\r\n    }\r\n};\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Checkbox.js",["1030"],"import React, {useState, useEffect} from 'react';\r\n\r\n\r\nconst Checkbox = ({categories, handleFilters}) =>{\r\n\r\n    const [checked, setCheck] = useState([]);\r\n\r\n    const handleToggle = c => () =>{\r\n        const currentCategoryId = checked.indexOf(c);   // return first index or -1     \r\n        const newCheckedCategoryId = [...checked];\r\n        //if currently checked was not already in checked state then push \r\n        // else pull/ takeoff\r\n        if(currentCategoryId === -1){\r\n            newCheckedCategoryId.push(c);\r\n        }\r\n        else{\r\n            newCheckedCategoryId.splice(currentCategoryId, 1);\r\n        }\r\n        // console.log(newCheckedCategoryId);\r\n        setCheck(newCheckedCategoryId);\r\n        handleFilters(newCheckedCategoryId);\r\n\r\n    }\r\n\r\n    return categories.map((category, i)=>(\r\n        <li className=\"list-unstyled\" key={i}>\r\n            <input onChange={handleToggle(category._id)} value={checked.indexOf(category._id === -1)} type=\"checkbox\" className=\"form-check-input\"/>\r\n            <label className=\"form-check-label\">{category.name}</label>\r\n        </li>\r\n    ))\r\n}\r\n\r\n\r\nexport default Checkbox;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Footer.js",["1031","1032","1033","1034","1035","1036"],"const Footer = () =>{\r\n    return(\r\n        <div>\r\n                <footer id=\"footer\" className=\"footer\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 col-sm-6 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <img className=\"mb-2\" src=\"./logo.png\" \r\n                                         style={{width:150, height:70, display: 'block', \r\n                                                marginLeft: 'auto',marginRight: 'auto', \r\n                                                width: '50%'}}/>\r\n                                    <p style={{textAlign:'center'}}>\r\n                                        eusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                                        Ut enim ad minim veniam, quis nostrud exercitation ullamco \r\n                                        laboris nisi ut aliquip ex ea commodo consequat.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 col-sm-6 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\" data-wow-delay=\"600ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <h6>Explore</h6>\r\n                                    <ul style={{margin:0, padding:0}}>\r\n                                        <li><a href=\"#\">Inside Us</a></li>\r\n                                        <li><a href=\"#\">Flickr</a></li>\r\n                                        <li><a href=\"#\">Google</a></li>\r\n                                        <li><a href=\"#\">Forum</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-5 col-sm-6 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\" data-wow-delay=\"300ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <h6>Subscribe </h6>\r\n                                    <form action=\"#\" className=\"subscribe\">\r\n                                        <input type=\"text\" name=\"subscribe\" id=\"subscribe\" placeholder=\"Enter Your Email\"/>\r\n                                        <input type=\"submit\" value=\"&#8594;\" id=\"subs\"/>\r\n                                    </form>\r\n                                    <p>Subscribe Our News Letter To Get News About New Homemade Food</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <p className=\"copyright text-center\">\r\n                                    Copyright © 2020. All rights reserved. Designed & developed by Suleman & Usman With <span><i class=\"fa fa-heart\" style={{color:'#F40009'}}></i></span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n    )\r\n}\r\nexport default Footer;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ShopShowImage.js",["1037","1038"],"import React, {useState, useEffect} from 'react';\r\nimport {API} from '../../config';\r\n\r\n\r\nconst ShopShowImage = ({item, url}) =>(\r\n    <div className=\"product-img thumbnail\">\r\n        <img className=\"img-responsive mb-3\" src={`${API}/${url}/photo/${item._id}`} alt={item.name}\r\n         style={{height:'260px', width:'380px'}}/>\r\n    </div>\r\n)\r\n\r\n\r\nexport default ShopShowImage;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\CardFoodlancer.js",["1039","1040","1041"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nconst Card = ({foodlancer}) =>{\r\n\r\nconst showViewButton = () =>{\r\n    return(\r\n            <Link to={`/foodlancer/products/${foodlancer._id}`} className=\"mr-2\">\r\n                <button className=\"btn btn-primary mt-2 mb-2 mr-2\">\r\n                    View Products\r\n                </button>\r\n            </Link>\r\n        )\r\n}\r\nconst showViewProfile = () =>{\r\n    return(\r\n        <Link to={`/profile/foodlancer/${foodlancer._id}`} className=\"mr-2\">\r\n            <button className=\"btn btn-warning mt-2 mb-2\"\r\n            style={{backgroundColor:'#36454f', color:\"white\"}}>\r\n                View Profile\r\n            </button>\r\n        </Link>\r\n    )\r\n        \r\n};\r\n\r\n    return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header name\" style={{color:'black', textTransform: \"uppercase\", textAlign: 'center'}}>\r\n                    {foodlancer.kitchen}<span style={{textTransform: 'lowercase'}}>'s</span> Kitchen\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <ShowImage item={foodlancer} url=\"foodlancer/kitchen\"/>\r\n                    <p className=\"black-10 mt-2\">Owner Name: {foodlancer.name}</p>\r\n                    <br/>\r\n                    {showViewButton()}\r\n                    {showViewProfile()}\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Card.js",["1042","1043","1044"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport ShopShowImage from './ShopShowImage';\r\nimport moment from 'moment';\r\nimport {addItem, updateProduct, removeProduct} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Card = ({history, product, showViewProductButton = true, showAddToCartButton = true, cartUpdate = false, showRemoveProductButton = false, setRun = f => f, run = undefined}) =>{\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\nconst showViewButton = (showViewProductButton) =>{\r\n    return(\r\n        showViewProductButton && (\r\n            <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                <button className=\"btn btn-primary mt-2 mb-2 mr-2\" style={{width:'40%'}}>\r\n                    View Product\r\n                </button>\r\n            </Link>\r\n        )\r\n    )\r\n}\r\nconst showAddToCart = showAddToCartButton =>{\r\n    return showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-warning mt-2 mb-2\"\r\n        style={{backgroundColor:'#36454f', color:\"white\", width:'40%'}}>\r\n            Add to Cart \r\n        </button>\r\n    );\r\n};\r\nconst showRemoveCartButton = showRemoveProductButton =>{\r\n    return (\r\n        showRemoveProductButton && (\r\n          <button\r\n            onClick={() => {\r\n              removeProduct(product._id);\r\n              setRun(!run); // run useEffect in parent Cart\r\n            }}\r\n            className=\"btn btn-outline-danger mt-2 mb-2\"\r\n          >\r\n            Remove Product\r\n          </button>\r\n        )\r\n      );\r\n};\r\nconst addToCart = () =>{\r\n    addItem(product, ()=>{\r\n        setRedirect(true);\r\n        toast.info(\"Product Added Into Cart\");\r\n    })\r\n}\r\nconst shouldRedirect = redirect =>{\r\n    if(redirect){\r\n        return <Redirect to=\"/cart\"/>\r\n        // toast.info(\"Product Added Into Cart\");\r\n    }\r\n}\r\n\r\nconst showStock = (quantity) =>{\r\n    return quantity > 0 ? \r\n    <span className=\"badge badge-primary badge-pill\">In Stock</span>\r\n    :\r\n    <span className=\"badge badge-primary badge-pill\">Out Of Stock</span>\r\n}\r\nconst showCartUpdateOptions = cartUpdate =>{\r\n    return cartUpdate && (\r\n        <div>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Adjust Quantity</span>\r\n                </div>\r\n                <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n        updateProduct(productId, event.target.value);\r\n    }\r\n} \r\n// const showImageFunction = () =>{\r\n    // if(history.location.pathname === '/shop'){\r\n    //     <ShopShowImage item={product} url=\"product\"/>\r\n    // }\r\n    // else{\r\n    //     <ShowImage item={product} url=\"product\"/>\r\n    // }\r\n\r\n    // console.log(\"history.location.pathname :: \" + history)\r\n// }\r\n    return(\r\n            <div className=\"card\">\r\n            {/* <div className=\"card\" style={{backgroundColor:'#dae5ed'}}> */}\r\n                <div className=\"card-header name\" style={{color:'black', fontSize:'18px', textTransform:'uppercase'}}>\r\n                    {product.name}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {shouldRedirect(redirect)}\r\n                    <ShowImage item={product} url=\"product\"/>\r\n                    {/* {showImageFunction()} */}\r\n                    <p className=\"lead mt-2\">{product.description.substring(0,100)}</p>\r\n                    <p className=\"black-10\">Price: {product.price} Rs.</p>\r\n                    <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n                    <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n                    {/* {showStock(product.quantity)} */}\r\n                    <br/>\r\n                    {showViewButton(showViewProductButton)}\r\n                    {showAddToCart(showAddToCartButton)}\r\n                    {showRemoveCartButton(showRemoveProductButton)}\r\n                    {showCartUpdateOptions(cartUpdate)} \r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Cart.js",["1045","1046"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getCart, itemTotal, removeProduct } from './cartHelpers';\r\nimport Card from './CheckoutCard';\r\nimport { Link } from 'react-router-dom';\r\nimport Checkout from './Checkout';\r\n\r\nconst Cart = ({history}) => {\r\n    const [items, setItems] = useState([]);\r\n    const [run, setRun] = useState(false);\r\n\r\n\r\n    useEffect(() => {\r\n        setItems(getCart());\r\n    }, [run]);\r\n\r\n    const showItems = () =>{\r\n        return(\r\n            <div style={{marginLeft:10}}>\r\n                <h2>\r\n                    Your Cart Has {`${items.length}`} Items\r\n                </h2>\r\n                <h5><Link to=\"/shop\">Continue Shopping</Link></h5>\r\n                <h4 style={{width:'100%', textAlign:'center'}}>Your Cart Summary</h4>\r\n                <hr/>\r\n                {items.map((product, i)=>(\r\n                    <Card key={i} product={product} showAddToCartButton = {false} cartUpdate={true} showRemoveProductButton={true} setRun={setRun} run={run}/>\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n    const noItemsMessage = () =>(\r\n        <div>\r\n            <h2 style={{width:'100%', textAlign:'center'}}>\r\n                Your Cart is Empty\r\n            </h2>\r\n            <h4 style={{width:'100%', textAlign:'center'}}>\r\n                <Link to=\"/shop\">Continue Shopping</Link>\r\n            </h4>\r\n        </div>\r\n    )\r\n    return (\r\n        <Layout title=\"Shopping Cart\" description=\"Manage Your Cart Items. Add, Remove, Checkout or Continue Shopping\" className=\"container-fluid\">\r\n            <div className=\"row mt-2\">\r\n                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">  \r\n                    {items.length > 0 ? showItems():noItemsMessage()}\r\n                </div>\r\n                <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">  \r\n                    {/* <h2 className=\"mb-4\">Your Cart Summary</h2> */}\r\n                    <hr/>\r\n                    <Checkout products={items} history={history}/>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Cart;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Product.js",["1047","1048"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {listRelated, read, showViewProductButton} from './apiCore';\r\nimport Card from './Card';\r\n\r\n\r\nconst Product = (props) =>{\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadSingleProduct = productId =>{\r\n        read(productId).then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id)\r\n                .then(data=>{\r\n                    if(data.error){\r\n                        setError(data.error)\r\n                    }\r\n                    else{\r\n                        setRelatedProduct(data)\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    },[props])\r\n\r\n    return(\r\n        <Layout title={product && product.name} description={product && product.description && product.description.substring(0,100)} className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    { product && product.description && <Card product={product} showViewProductButton={false}/> }\r\n                </div>\r\n                <div className=\"col-4\">\r\n                    <h2>Related Products</h2>\r\n                    {relatedProduct.map((product, i)=>(\r\n                        <div key={i} className=\"mb-3\">\r\n                            <Card product={product}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Product;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\auth\\PrivateRoute.js",["1049"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Layout.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Menu.js",["1050","1051","1052","1053","1054"],"import React, {Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {signout, isAuthenticated} from '../auth/index';\r\n// import {itemTotal} from './cartHelpers';\r\n// import {itemTotal} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst isActive = (history, path) => {\r\n    console.log(\"HISTORY: \" + history.location.pathname);\r\n    if(history.location.pathname === \"/admin/\"+path){\r\n        return {color:'#F40009'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    } \r\n}\r\n\r\nconst Menu = ({history}) =>{\r\n    // console.log(\"HISTORY: \" + history.location.pathname);\r\n    return(\r\n        <div>\r\n        <nav class=\"navbar navbar-expand-md mr-auto\"\r\n        style={{backgroundColor:\"black\"}}>\r\n            {/* <a class=\"navbar-brand\" href=\"#\" style={{color:\"white\"}}>KHANSAMA</a> */}\r\n            <img src=\"../../logo.png\" style={{width:120, height:50}}/>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul class=\"navbar-nav mr-auto\" style={{marginLeft:10}}>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"\")} to=\"/admin/\" >Home</Link>\r\n            </li>\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 1 && ( */}\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"dashboard\")} to=\"/admin/dashboard\" >Dashboard</Link>\r\n                </li>\r\n            {/* )} */}\r\n            </ul>\r\n            <ul className=\"navbar-nav\">\r\n            {!isAuthenticated() && (\r\n                <Fragment> \r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signin\")} to=\"/admin/signin\">Sign In</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signup\")}to=\"/admin/signup\">Sign Up</Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n            {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                                onClick = {()=> signout(()=>{\r\n                                    history.push('/admin/signin');\r\n                                    toast.success(\"Logout Successfully\");\r\n                                })}>\r\n                                Sign Out\r\n                            </span>\r\n                        </li>\r\n                )}\r\n                 </ul>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n    )\r\n};\r\n  \r\nexport default withRouter(Menu);\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\config.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\Menu.js",["1055","1056","1057","1058","1059"],"import React, {Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {signout, isAuthenticated} from '../auth/index';\r\n// import {itemTotal} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst isActive = (history, path) => {\r\n    console.log(\"HISTORY: \" + history.location.pathname);\r\n    if(history.location.pathname === \"/foodlancer\"+path){\r\n        return {color:'#F40009'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    }\r\n}\r\n\r\nconst Menu = ({history}) =>{\r\n    // console.log(\"HISTORY: \" + history.location.pathname);\r\n    return( <div>\r\n        <nav class=\"navbar navbar-expand-md\"\r\n        style={{backgroundColor:\"black\"}}>\r\n            {/* <a class=\"navbar-brand\" href=\"#\" style={{color:\"white\"}}>KHANSAMA</a> */}\r\n            <img src=\"../../logo.png\" style={{width:120, height:50}}/>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul class=\"navbar-nav mr-auto\" style={{marginLeft:10}}>\r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"\")} to=\"/foodlancer\" >Home</Link>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"shop\")} to=\"/shop\" >Shop</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"/cart\")} to=\"/cart\" >Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup></Link>\r\n            </li> */}\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(history, \"user/dashboard\")} to=\"/user/dashboard\" >Dashboard</Link>\r\n                </li>\r\n            )} */}\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(history, \"admin/dashboard\")} to=\"/admin/dashboard\" >Dashboard</Link>\r\n                </li>\r\n            )} */}\r\n             {/* {isAuthenticated() && isAuthenticated().user.role === 1 && ( */}\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"\")} to=\"/foodlancer\">Dashboard</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"contact\")} to=\"/foodlancer/contact\">Contact Us</Link>\r\n                </li>\r\n            {/* )} */}\r\n            </ul>\r\n                <ul className=\"navbar-nav\">\r\n            {!isAuthenticated() && (\r\n                <Fragment> \r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"/signin\")} to=\"/foodlancer/signin\">Sign In</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"/signup\")}to=\"/foodlancer/signup\">Sign Up</Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n           {/* {isAuthenticated()  && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                        onClick = {()=> signout(()=>{\r\n                            history.push('/foodlancer/');\r\n                         })}>\r\n                        Sign Out\r\n                    </span>\r\n                </li>\r\n           )} */}\r\n           {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                                onClick = {()=> signout(()=>{\r\n                                    history.push('/foodlancer/signin');\r\n                                    toast.success(\"Logout Successfully\");\r\n                                })}>\r\n                                Sign Out\r\n                            </span>\r\n                        </li>\r\n            )}\r\n                </ul> \r\n            </div>\r\n        </nav>\r\n    </div>\r\n    )\r\n};\r\n  \r\nexport default withRouter(Menu);\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\fixedPrices.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\apiFoodie.js",["1060"],"import {API} from '../../config';\r\nimport queryString from 'query-string';\r\n// import { use } from '../../../../fyp_project/routes/foodie';\r\n\r\nexport const read = (userId, token) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/foodie/${userId}`,{\r\n        method:\"GET\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(error =>{\r\n        console.log(error);\r\n    })\r\n}\r\n\r\nexport const getPurchaseHistory = (foodieId, token) =>{\r\n    // console.log(foodieId + \"  \" + token);\r\n    return fetch(`${API}/orders/by/foodie/${foodieId}`,{\r\n        method:\"GET\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n    })\r\n    .then(response =>{\r\n        return response.json()\r\n    })\r\n    .catch(error =>{\r\n        console.log(error);\r\n    })\r\n}\r\n\r\nexport const update = (userId, token, user) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/foodie/update/${userId}`,{\r\n        method:\"PUT\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n    .then(response =>{\r\n        return response.json();\r\n    })\r\n    .catch(err =>(\r\n        console.log(err)\r\n    ));\r\n};\r\n\r\nexport const updateUser = (user, next) =>{\r\n    if(typeof window !== 'undefined'){\r\n        if(localStorage.getItem(\"jwt\")){\r\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\r\n            auth.user = user;\r\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\r\n            next();\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const checkETA = (orderId, token, userId) =>{\r\n    // console.log(name, email, password);\r\n    return fetch(`${API}/order/eta/${orderId}/${userId}`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"*\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        // body: JSON.stringify(userId)\r\n    })\r\n    .then(response =>{\r\n        return response.json();\r\n    })\r\n    .catch(err =>(\r\n        console.log(err)\r\n    ));\r\n};\r\n\r\nexport const contact = (contactForm, token) =>{\r\n    // console.log(contactForm);\r\n    return fetch(`${API}/foodie/contact/`,{\r\n        method:\"POST\",\r\n        headers:{\r\n            Accept:'application/json',\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization:`Bearer ${token}`\r\n        },\r\n        body: JSON.stringify(contactForm)\r\n    })\r\n    .then(response =>{\r\n        return response.json();\r\n    })\r\n    .catch(err =>(\r\n        console.log(err)\r\n    ));\r\n};\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\ShowImageCheckout.js",["1061","1062"],"import React, {useState, useEffect} from 'react';\r\nimport {API} from '../../config';\r\n\r\n\r\nconst ShowImage = ({item, url}) =>(\r\n    <div className=\"product-img thumbnail\">\r\n        <img className=\"img-responsive mb-3\" src={`${API}/${url}/photo/${item._id}`} alt={item.name}\r\n         style={{width:'200px', height:'150px'}}/>\r\n    </div>\r\n)\r\n\r\n\r\nexport default ShowImage;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\FoodieDashborard.js",["1063"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {getPurchaseHistory, read} from './apiFoodie';\r\n\r\nimport moment from 'moment';\r\nconst Dashboard = () =>{\r\n    const [history, setHistory] = useState([]);\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n    }); \r\n    const {name, email} = values\r\n    const  {user:{_id}}  = isAuthenticated();\r\n    const {token} = isAuthenticated()\r\n    \r\n    const init = (foodieId, token) =>{\r\n        // console.log(foodieId + \"  \" +token);\r\n        getPurchaseHistory(foodieId, token).then(data=>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setHistory(data);\r\n            }   \r\n        })\r\n        read(_id, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n            }   \r\n        })\r\n    }\r\n\r\n    useEffect (()=>{\r\n      init(_id, token);      \r\n    },[])\r\n\r\n    const userLinks = () =>{\r\n        return(\r\n            <div className=\"card\">\r\n                <h3 className=\"card-header\">User Links</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item \">\r\n                       <Link className=\"nav-link\" to=\"/cart\" style={{color:\"black\"}}>My Cart</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`} style={{color:\"black\"}}>Update Profile</Link>\r\n                    </li>\r\n                    <li className=\"list-group-item \">\r\n                        <Link className=\"nav-link\" to={`/order/eta/`} style={{color:\"black\"}}>View Order's ETA</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n    const userInfo = () =>{\r\n        return(\r\n                <div className=\"card mb-5\">\r\n                    <h3 className=\"card-header\">User Information</h3>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item \">\r\n                            Name: {name}\r\n                        </li>\r\n                        <li className=\"list-group-item \">\r\n                            Email: {email}\r\n                        </li>\r\n                        <li className=\"list-group-item \">\r\n                            Role: User\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        );\r\n    };\r\n    const userPurchaseHistory = history => {\r\n        if(history.length > 0){\r\n            return (\r\n                <div className=\"card mb-5\">\r\n                    <h3 className=\"card-header\">Purchase history</h3>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            {history.map((h, i) => {\r\n                                return (\r\n                                    <div>\r\n                                        <h6>Order Id: {h._id}</h6>\r\n                                        <hr />\r\n                                        {h.products.map((p, i) => {\r\n                                            return (\r\n                                                <div key={i}>\r\n                                                    <h6>Product name: {p.name}</h6>\r\n                                                    <h6>Product price: ${p.price}</h6>\r\n                                                    <h6>Purchased date: {moment(p.createdAt).fromNow()}</h6>\r\n                                                    <br/>\r\n                                                </div>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return (\r\n                <div className=\"card mb-5\">\r\n                    <h3 className=\"card-header\">Purchase history</h3>\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">\r\n                            <p>No Purchase History</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    \r\n    return(\r\n        // <Layout title=\"User Dashboard\" description={`Hello ${name}`} className=\"container-fluid\">\r\n        //     <div className=\"row\">\r\n        //         <div className=\"col-3\">\r\n        //             {userLinks()}\r\n        //         </div>\r\n        //         <div className=\"col-9\">\r\n        //             {userInfo()}\r\n        //             {userPurchaseHistory()}\r\n        //         </div>\r\n        //     </div>\r\n        // </Layout>\r\n        <div>\r\n            <Layout/>\r\n            <div className=\"container-fluid\" style={{margin:10}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-3 col-lg-4 col-md-5 col-sm-12 col-12\">\r\n                        {userLinks()}\r\n                    </div>\r\n                    <div className=\"col-xl-9 col-lg-8 col-md-7 col-sm-12 col-12\">\r\n                        {userInfo()}\r\n                        {/* {history} */}\r\n                        {userPurchaseHistory(history)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Dashboard;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AddProduct.js",["1064","1065","1066","1067","1068"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {createProduct} from './apiAdmin';\r\nimport {getCategories} from './apiAdmin';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst AddProduct = () =>{\r\n    //destructure user and token from localstorage\r\n\r\n    const {user, token} = isAuthenticated();\r\n    \r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        description:'',\r\n        price:'',\r\n        categories:[],\r\n        category:'',\r\n        shipping:'',\r\n        quantity:'',\r\n        photo:'',\r\n        loading:false,\r\n        error:'',\r\n        createdProduct:'',\r\n        redirectToProfile:false,\r\n        formData:''\r\n    });\r\n\r\n    const {name, description, price, categories, category, shipping, quantity,loading,\r\n           error, createdProduct, redirectToProfile, formData} = values;\r\n\r\n    // get categories\r\n    const init = () =>{\r\n        getCategories()\r\n        .then(data=>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error});\r\n            }\r\n            else{\r\n                setValues({...values, categories:data, error:'', formData:new FormData()});\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        init();\r\n    },[])\r\n\r\n\r\n    const newProductForm = () =>(\r\n        // <form  onClick={clickSubmit}>\r\n        <form className=\"mb-3\" onSubmit= {clickSubmit} >\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange('name')} value={name} autoFocus required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Description</label>\r\n                <textarea className=\"form-control\" onChange={handleChange('description')} value={description} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product price</label>\r\n                <input type=\"number\" className=\"form-control\" onChange={handleChange('price')} value={price} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Category</label>\r\n                <select className=\"form-control\" onChange={handleChange('category')} required>\r\n                    <option>Please Select Category</option>\r\n                    {categories && categories.map((data, i) =>(\r\n                        <option key={i} value={data._id}>{data.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Shipping</label>\r\n                <select className=\"form-control\" onChange={handleChange('shipping')} required>\r\n                    <option>Please Select Category</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Quantty</label>\r\n                <input type=\"number\" className=\"form-control\" onChange={handleChange('quantity')} value={quantity} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Image</label><br></br>\r\n                <label className=\"btn btn-secondary\">\r\n                    <input type=\"file\" className=\"\" onChange={handleChange('photo')} name=\"photo\" accept=\"image/*\"/>\r\n                </label>\r\n            </div>\r\n            <button className=\" btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    )\r\n\r\n    const handleChange = name => event =>{\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value)\r\n        setValues({...values, error:'', [name]:value});\r\n    }\r\n\r\n    const clickSubmit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:'', loading:false});\r\n        // // make request to api to create category   \r\n        formData.set(\"foodlancer\", user._id);\r\n        createProduct(user._id, token, formData)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, createdProduct:''});\r\n            }\r\n            else{\r\n                setValues({...values,  name:'', description:'', price:'', quantity:'', photo:'', error:'',\r\n                          loading:false, createdProduct:name});\r\n                toast.success(\"Product is Created Successfully.\")\r\n                          // console.log(\"createProduct: \" + createProduct);\r\n            }\r\n        })\r\n    }\r\n    \r\n    const showError = () =>(\r\n        <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\r\n            {error} \r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () =>{\r\n        return(\r\n        <div className=\"alert alert-info\" style={{display: createdProduct ? \"\" : \"none\"}}>\r\n                <h2>{`${createdProduct}`} is Created</h2>\r\n            </div>\r\n        )\r\n    };\r\n    \r\n    const showLoading = () =>{\r\n        loading && (<div className=\"alert alert-info\"><h2>Loading...</h2></div>) \r\n    };\r\n\r\n    const goBack = () =>{\r\n       return(\r\n           <div className=\"mt-5\">\r\n               <Link to=\"/admin/dashboard\" className=\"text-primary\">Back to Dashboard</Link>\r\n           </div>\r\n       )\r\n    };\r\n\r\n    return(\r\n        <Layout title=\"Create Product\" description=\"Add New Product Here\" className=\"container\">\r\n           <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {/* {showSuccess()} */}\r\n                    {showError()}\r\n                    {newProductForm()}\r\n                    {showLoading()}\r\n                    {goBack()}\r\n                </div>\r\n           </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default AddProduct;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\CheckoutCard.js",["1069","1070","1071"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\cartHelpers.js",["1072","1073"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\AddProduct.js",["1074","1075","1076","1077","1078","1079"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancercreateProduct} from './apiFoodlancer';\r\nimport {getCategories} from './apiFoodlancer';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst AddProduct = () =>{\r\n    //destructure user and token from localstorage\r\n\r\n    const {user, token} = isAuthenticated();\r\n    \r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        description:'',\r\n        price:'',\r\n        categories:[],\r\n        category:'',\r\n        foodlancer_id: user._id,\r\n        shipping:'',\r\n        quantity:'',\r\n        photo:'',\r\n        loading:false,\r\n        error:'',\r\n        createdProduct:'',\r\n        redirectToProfile:false,\r\n        formData:''\r\n    });\r\n\r\n    const {name, description, price, categories, category, shipping, quantity, loading, foodlancer_id,\r\n           error, createdProduct, redirectToProfile, formData} = values;\r\n\r\n    // get categories\r\n    const init = () =>{\r\n        getCategories()\r\n        .then(data=>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error});\r\n            }\r\n            else{\r\n                setValues({...values, categories:data, error:'', formData:new FormData()});\r\n            }\r\n        })\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        init();\r\n    },[])\r\n\r\n\r\n    const newProductForm = () =>(\r\n        // <form  onClick={clickSubmit}>\r\n        <form className=\"mb-3\" onSubmit= {clickSubmit} >\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Name</label>\r\n                <input type=\"text\" className=\"form-control\" onChange={handleChange('name')} value={name} autoFocus required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Description</label>\r\n                <textarea className=\"form-control\" onChange={handleChange('description')} value={description} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product price</label>\r\n                <input type=\"number\" className=\"form-control\" onChange={handleChange('price')} value={price} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Category</label>\r\n                <select className=\"form-control\" onChange={handleChange('category')} required>\r\n                    <option>Please Select Category</option>\r\n                    {categories && categories.map((data, i) =>(\r\n                        <option key={i} value={data._id}>{data.name}</option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Shipping</label>\r\n                <select className=\"form-control\" onChange={handleChange('shipping')} required>\r\n                    <option>Please Select Category</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Quantty</label>\r\n                <input type=\"number\" className=\"form-control\" onChange={handleChange('quantity')} value={quantity} required/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Product Image</label><br></br>\r\n                <label className=\"btn btn-secondary\">\r\n                    <input type=\"file\" className=\"\" onChange={handleChange('photo')} name=\"photo\" accept=\"image/*\"/>\r\n                </label>\r\n            </div>\r\n            <button className=\" btn btn-outline-primary\">Create Product</button>\r\n        </form>\r\n    )\r\n\r\n    const handleChange = name => event =>{\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, error:'', [name]:value});\r\n    }\r\n\r\n    const clickSubmit = event =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:'', loading:false});\r\n        // // make request to api to create category   \r\n        formData.set(\"foodlancer\", user._id);\r\n        FoodlancercreateProduct(user._id, token, formData)\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, createdProduct:''});\r\n            }\r\n            else{\r\n                setValues({...values,  name:'', description:'', price:'', quantity:'', photo:'', error:'',\r\n                          loading:false, createdProduct:name});\r\n                // console.log(\"createProduct: \" + createProduct);\r\n                toast.success(\"Product is Created Successfully.\")\r\n            }\r\n        })\r\n    }\r\n    \r\n    const showError = () =>(\r\n        <div className=\"alert alert-danger\" style={{display: error ? \"\" : \"none\"}}>\r\n            {error} \r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () =>{\r\n        return(\r\n        <div className=\"alert alert-info\" style={{display: createdProduct ? \"\" : \"none\"}}>\r\n                <h2>{`${createdProduct}`} is Created</h2>\r\n            </div>\r\n        )\r\n    };\r\n    \r\n    const showLoading = () =>{\r\n        loading && (<div className=\"alert alert-info\"><h2>Loading...</h2></div>) \r\n    };\r\n\r\n    const goBack = () =>{\r\n       return(\r\n           <div className=\"mt-5\">\r\n               <Link to=\"/admin/dashboard\" className=\"text-warning\">Back to Dashboard</Link>\r\n           </div>\r\n       )\r\n    };\r\n\r\n    return(\r\n        // <Layout title=\"Create New Product\" description={`Hello ${user.name}`} className=\"container\">\r\n        <Layout title=\"Create Product\" description=\"Add New Product\" className=\"container\">\r\n           <div className=\"row\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {showSuccess()}\r\n                    {showError()}\r\n                    {newProductForm()}\r\n                    {/* {showLoading()} */}\r\n                    {goBack()}\r\n                </div>\r\n           </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default AddProduct;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\AdminDashborard.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\apiCore.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Profile.js",["1080","1081","1082","1083","1084"],"import React, {useEffect, useState} from 'react';\r\nimport Layout from '../core/Layout';\r\nimport {authenticate, isAuthenticated} from '../auth/index';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport {read, update, updateUser} from './apiFoodie'; \r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n// import { css } from \"@emotion/core\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\nconst Profile = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const {token} = isAuthenticated()\r\n    const {name, email, password, error, success} = values\r\n    const init = (userId) =>{\r\n        // console.log(userId) \r\n        read(userId, token).then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, name: data.name, email: data.email})\r\n                toast.success(data);\r\n            }   \r\n        })\r\n    }\r\n    useEffect(() =>{\r\n        init(match.params.foodieId)\r\n    },[])\r\n    const profileUpdate = (name, email, password) =>(\r\n        <form>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Name</label>\r\n                <input type='text' onChange={handleChange('name')} className='form-control' value={name}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Email</label>\r\n                <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n            </div>\r\n            <div className='form-group'>\r\n                <label className=\"text-muted\">Password</label>\r\n                <input type='password' onChange={handleChange('password')} className='form-control' value={password}/>\r\n            </div>\r\n            <button className='btn btn-primary' onClick={clickSubmit}>Update</button>\r\n        </form>\r\n    )\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    const clickSubmit = (e) =>{\r\n        e.preventDefault()\r\n        update(match.params.foodieId, token, {name, email, password}).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n                toast.error(data.error)\r\n            }\r\n            else{ \r\n                updateUser(data, ()=>{\r\n                    setValues({...values, name: data.name, email: data.email, success:true})\r\n                    toast.success(\"Foodie is Updated\")\r\n                })\r\n                // localStorage.removeItem('jwt');\r\n                // localStorage.setItem('jwt', JSON.stringify(data))\r\n                // init(match.params.foodieId)\r\n                // redirectUser(data)\r\n            }\r\n        })\r\n    }\r\n    const redirectUser = (success) =>{\r\n        if(success){\r\n            return <Redirect to=\"/dashboard/\"/>\r\n            // localStorage.setItem('jwt', JSON.stringify(data))\r\n            // init(match.params.foodieId)\r\n            // authenticate(data, ()=>{\r\n            //     setValues({data})\r\n            // })\r\n        }\r\n    }\r\n    return(\r\n        <Layout title=\"Profile\" description=\"Update Your Profile\" className=\"container-fluid\">\r\n            <div className=\"container col-md-8\" style={{\r\n                  position: 'absolute', left: '50%', top: '50%',\r\n                  transform: 'translate(-50%, -50%)'\r\n                }}> \r\n                <h2 className=\"mb-4\">Profile Update</h2>\r\n                {profileUpdate(name, email, password)}\r\n                {redirectUser(success)}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\n\r\nexport default Profile;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\core\\Home.js",["1085"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getProducts} from './apiCore';\r\nimport Card from './Card';\r\n// import Search from './Search';\r\n\r\nconst Home = () =>{\r\n    const [productsBySell, setproductsBySell] = useState([])\r\n    const [productsByArrival, setproductsByArrival] = useState([])\r\n    const [error, setError] = useState(false)\r\n\r\n    const loadProductsBySell = () =>{\r\n        getProducts('sold')\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setproductsBySell(data);\r\n            }\r\n        })\r\n    }\r\n    const loadProductsByArrival = () =>{\r\n        getProducts('createdAt')\r\n        .then(data =>{\r\n            if(data.error){\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setproductsByArrival(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, [])\r\n\r\n    return(\r\n        <Layout title=\"Home\" description=\"Node React E-Commerce App\" className=\"container-fluid\">\r\n            {/* <Search/> */}\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i)=>(\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i)=>(\r\n                    <div key={i} className=\"col-4 mb-3\"> \r\n                        <Card key={i} product={product}/>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n  \r\nexport default Home;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodie\\core\\Layout.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\UpdateProduct.js",["1086","1087","1088","1089","1090","1091","1092","1093"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiFoodlancer';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst UpdateProduct = ({ history, match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        setloading({...loadings, loading1:true})\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setloading({...loadings, loading1:false})\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setloading({...loadings, loading1:false})\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n        setloading({...loadings, loading1:true})\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n                setloading({...loadings, loading1:false})\r\n            } else {\r\n                setloading({...loadings, loading1:false})\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n                history.push('/admin/products')\r\n                toast.success(\"Product is Updated Successfully.\")\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            {/* <h4>Post Photo</h4> */}\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                // return <Redirect to=\"/admin/dashboard\" />;\r\n                // history.push('/admin/dashboard')\r\n                // toast.success(\"Product is Updated Successfully.\")\r\n            }\r\n        }\r\n    };\r\n\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return (\r\n            <Layout title=\"Update Product\" description={`Update Product Here`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {/* {showLoading()} */}\r\n                        {showSuccess()}\r\n                        {showError()}\r\n                        {newPostForm()}\r\n                        {/* {redirectUser()} */}\r\n                        Loading Value :: {loading1}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\foodlancer\\core\\ManageProducts.js",["1094","1095","1096"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"./Layout\";\r\nimport { isAuthenticated } from \"../auth/index\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getFoodlancerProducts, deleteProduct } from \"./apiFoodlancer\";\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\nconst ManageProducts = () => {\r\n    const [products, setProducts] = useState([]);\r\n    // const [length, setLength] = useState(0)\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n        noProducts:false\r\n    })\r\n    const {loading1} = loadings\r\n    const loadProducts = () => {\r\n        setloading({...loadings, loading1:true})\r\n        getFoodlancerProducts(user._id).then(data => {\r\n            if (data.error) {\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error);\r\n            } else {\r\n                setloading({...loadings, loading1:false})\r\n                setProducts(data);\r\n                // setLength(products.length)\r\n            }\r\n        });\r\n    };\r\n\r\n    const destroy = productId => {\r\n        setloading({...loadings, loading1:true})\r\n        deleteProduct(productId, user._id, token).then(data => {\r\n            if (data.error) {\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error);\r\n            } else {\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Product is Deleted Successfully.\")\r\n                loadProducts();\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProducts();\r\n    }, []);\r\n    const noProductsFunction = () =>{\r\n        return(\r\n            <div style={{textAlign:'center'}}>\r\n                <h4>No Products</h4>\r\n            </div>\r\n        )\r\n    }\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return (\r\n            <Layout\r\n                title=\"Manage Your Products\"\r\n                description=\"You Can Manage All Your Products Hete\"\r\n                className=\"container-fluid\"\r\n            >\r\n                <div className=\"row\">\r\n                    { //Check if message failed\r\n                        (products.length!==0)? \r\n                        <div className=\"col-12\"> \r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                    <div className=\"col-8\">\r\n                                        <h5>Product Name</h5>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <h5>Product Update</h5>\r\n                                    </div>\r\n                                    <div className=\"col-2\">\r\n                                        <h5>Product Delete</h5>\r\n                                    </div>\r\n                                </li>                                       \r\n                            </ul>\r\n                            <ul className=\"list-group\">\r\n                                {products.map((p, i) => {\r\n                                        return(\r\n                                            <li key={i} className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                                                <div className=\"col-8\">\r\n                                                    <strong>{p.name}</strong>\r\n                                                </div>\r\n                                                <div className=\"col-2\">\r\n                                                    <Link to={`/foodlancer/product/update/${p._id}`}>\r\n                                                        <span className=\"badge badge-warning badge-pill\">\r\n                                                            Update\r\n                                                        </span>\r\n                                                    </Link>\r\n                                                </div>\r\n                                                <div className=\"col-2\">\r\n                                                    <span\r\n                                                        onClick={() => destroy(p._id)}\r\n                                                        className=\"badge badge-danger badge-pill\"\r\n                                                    >\r\n                                                        Delete\r\n                                                    </span>\r\n                                                </div>\r\n                                            </li>\r\n                                        )\r\n                                })}\r\n                            </ul>\r\n                            <br />\r\n                        </div> \r\n                        : \r\n                        <div className=\"col-12\" style={{textAlign:'center'}}> \r\n                            <h4>No Products</h4>\r\n                        </div> \r\n                    }\r\n                </div> \r\n            </Layout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default ManageProducts;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\final\\fyp_project_front\\src\\admin\\auth\\PrivateRoute.js",["1097"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\App.js",[],["1098","1099"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ResetPassword.js",["1100","1101","1102","1103"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Product.js",["1104","1105","1106","1107","1108"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport Footer from './Footer';\r\nimport {listRelated, read, showViewProductButton} from './apiCore';\r\nimport Card from './Card';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Product = (props) =>{\r\n    const [product, setProduct] = useState({});\r\n    const [relatedProduct, setRelatedProduct] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadSingleProduct = productId =>{\r\n        setloading({...loadings, loading1:true})\r\n        read(productId).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                setError(data.error);\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:true})\r\n                setProduct(data);\r\n                // fetch related products\r\n                listRelated(data._id)\r\n                .then(data=>{\r\n                    if(data.error){\r\n                        setloading({...loadings, loading1:false})\r\n                        setError(data.error)\r\n                    }\r\n                    else{\r\n                    setloading({...loadings, loading1:false})\r\n                    setRelatedProduct(data)\r\n                    }\r\n                })\r\n            }\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        const productId = props.match.params.productId;\r\n        loadSingleProduct(productId);\r\n    },[props])\r\n    \r\n    if(loading1 === true ){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Layout title={product && product.name} description={product && product.description && product.description.substring(0,100)} className=\"container-fluid\">\r\n                    <div className=\"row\" style={{marginLeft:10, marginRight:10}}>\r\n                        <div className=\"col-8\">\r\n                            <h2 className=\"\" style={{textAlign:'left', fontWeight:'600'}}>Product Details</h2>\r\n                            { product && product.description && <Card product={product} showViewProductButton={false}/> }\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <h2>Related Products</h2>\r\n                            {relatedProduct.map((product, i)=>(\r\n                                <div key={i} className=\"mb-3\">\r\n                                    <Card product={product}/>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </Layout>\r\n                {/* <Footer/> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Product;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\FoodieContaact.js",["1109","1110","1111","1112","1113","1114","1115","1116","1117"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ResetPassword.js",["1118","1119","1120","1121","1122"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\NewOrder.js",["1123","1124","1125","1126","1127","1128"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\Home.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\AllOrders.js",["1129","1130","1131","1132","1133","1134"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport {isAuthenticated} from '../auth/index';\r\nimport {Link} from 'react-router-dom';\r\nimport {FoodlancerlistOrders, FoodlancergetStatusValues, updateStatusValues} from './apiFoodlancer';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst Order = () =>{\r\n    const [orders, setOrders] = useState([])\r\n    const [count, setCount] = useState(0)\r\n    const [statusValues, setstatusValues] = useState([])\r\n    const {user, token} = isAuthenticated()\r\n    \r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const loadOrders = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        FoodlancerlistOrders(user._id, token).then(data =>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                setOrders(data)\r\n            }\r\n        })\r\n    }\r\n    const loadStatusValues = () =>{\r\n        FoodlancergetStatusValues(user._id, token).then(data =>{\r\n            if(data.error){\r\n                console.log(data.error)\r\n            }\r\n            else{\r\n                setstatusValues(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadOrders()\r\n        loadStatusValues()\r\n    },[])\r\n\r\n    const showOrdersLength = () =>{\r\n        // setCount(num)\r\n        if(orders.length === 0){\r\n            return(\r\n                <h4 className=\"text-danger display-4\" style={{textAlign:'center'}}>No Order Yet</h4>\r\n            )\r\n        }\r\n        else{\r\n            return (\r\n                <h4 className=\"text-success display-4\" style={{textAlign:'center'}}>Total Orders: {orders.length}</h4>\r\n            )\r\n        }\r\n    }\r\n    \r\n    const showInput = (key, value) =>(\r\n        <div className=\"input-group mb-2 mr-sm-2\">\r\n            <div className=\"input-group-prepand\">\r\n                <div className=\"input-group-text\">\r\n                    {key}\r\n                </div>\r\n            </div>\r\n            <input type=\"text\" value={value} className=\"form-control\" readOnly/>\r\n        </div>\r\n    )\r\n    const handleStatusChange = (e, orderId) =>{\r\n        // console.log(\"Update Order Status\")\r\n        setloading({...loadings, loading1:true})\r\n        updateStatusValues(user._id, token, orderId, e.target.value).then(data=>{\r\n            if(data.error){\r\n                setloading({...loadings, loading1:false})\r\n                console.log('Status Update Failed')\r\n            }\r\n            else{\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Order Status Updated Successfully.\")\r\n                loadOrders()\r\n            }\r\n        })\r\n    }\r\n    const showStatus = (o) =>(\r\n        <div className = \"form-group\">\r\n            <h3 className = \"mark mb-4\">Status: {o.status}</h3>\r\n            <select className = \"form-control\" onChange = {(e)=>(handleStatusChange(e, o._id))}>\r\n                <option>Update Status</option>\r\n                {statusValues.map((status, index)=>(\r\n                    <option key={index} value={status}>\r\n                        {status}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return(\r\n            <Layout title=\"All Orders\" description=\"You Can Manage All The Orders Here\" className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {showOrdersLength()}\r\n                        {orders.map((order, orderIndex)=>{\r\n                            // count = count + 1\r\n                                return(\r\n                                    <div key={orderIndex}>\r\n                                        {order.products.map((product, productIndex)=>{\r\n                                            // count = count + 1;\r\n                                            // setCount(count+1)\r\n                                            // {count}\r\n                                            if(product.foodlancer === user._id){\r\n                                                return(\r\n                                                    <div className=\"mt-5\" key={orderIndex} style={{borderBottom:\"5px solid indigo\"}}>\r\n                                                        <h2 className=\"mb-5\">\r\n                                                            {/* Order # {showOrderNumber()}  */}\r\n                                                        </h2>\r\n                                                        <h2 className=\"mb-5\">\r\n                                                            <span className=\"bg-primary\">\r\n                                                                Order ID: {order._id} \r\n                                                            </span>\r\n                                                        </h2>\r\n                                                        <ul className=\"list-group mb-2\">\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Oder By: {order.user.name}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                            {showStatus(order)}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Transaction ID: {order.transaction_id}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Total Amount: ${order.amount}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Order Created On: {moment(order.createdAt).fromNow()}\r\n                                                            </li>\r\n                                                            <li className=\"list-group-item\">\r\n                                                                Delivery Address: {order.address}\r\n                                                            </li>\r\n                                                        </ul>\r\n                                                        <h3 className=\"mt-4 mb-4 font-italic\">\r\n                                                            Total Products In The Order {order.products.length}\r\n                                                        </h3>\r\n                                                        <div className=\"mb-4\" key={productIndex} style={{padding:'20px', border:'1px solid indigo'}}>\r\n                                                            {/* {user._id} */}\r\n                                                            {showInput('Product Name', product.name)}\r\n                                                            {showInput('Product Price', product.price)}\r\n                                                            {showInput('Product Quantity', product.count)}\r\n                                                            {showInput('Product Id', product._id)}\r\n                                                            {showInput('Foodlancer Id', product.foodlancer)}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                )\r\n                                            }\r\n                                        })}\r\n                                    </div>\r\n                                )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ManageProducts.js",["1135","1136","1137"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\Signin.js",["1138","1139","1140","1141","1142","1143","1144","1145","1146"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\Signup.js",["1147","1148","1149","1150","1151","1152"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AdminActivation.js",["1153","1154","1155","1156","1157"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AllOrders.js",["1158","1159","1160"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\NewOrder.js",["1161","1162","1163","1164","1165","1166","1167"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\ForgetPassword.js",["1168","1169","1170","1171"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\FoodlancerProfile.js",["1172","1173","1174","1175"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AllFoodies.js",["1176","1177","1178","1179","1180","1181","1182","1183","1184"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ProcessingOrder.js",["1185","1186","1187","1188","1189","1190"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AddProduct.js",["1191","1192","1193","1194","1195"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Activation.js",["1196","1197","1198","1199","1200"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AddCategory.js",["1201"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Orders.js",["1202","1203","1204"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\apiFoodie.js",["1205"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\auth\\index.js",["1206","1207"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\apiAdmin.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ShowImage.js",["1208","1209"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\config.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\cartHelpers.js",["1210","1211"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Menu.js",["1212","1213","1214","1215","1216","1217","1218","1219","1220"],"import React, {Fragment, useEffect} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {signout, isAuthenticated} from '../auth/index';\r\nimport {itemTotal} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst isActive = (history, path) => {\r\n    console.log(\"HISTORY: \" + history.location.pathname);\r\n    // console.log(\"PATH: \" + path);\r\n    // console.log(\"COMPARE: \" + history.location.pathname === path);\r\n    // console.log(\"COMPARE: \" + history.location.pathname === path);\r\n    // console.log(history.location.pathname.localeCompare(path));\r\n\r\n    if(history.location.pathname ===  \"/\"+path){\r\n        return {color:'#F40009'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    }\r\n}\r\n\r\nconst Menu = ({history}) =>{\r\n    \r\n    // console.log(\"HISTORY: \" + history.location.pathname);\r\n    return(\r\n        <div>\r\n        <nav class=\"navbar navbar-expand-md\"\r\n        style={{backgroundColor:\"black\"}}>\r\n            {/* <a class=\"navbar-brand\" href=\"#\" style={{color:\"white\"}}>KHANSAMA</a> */}\r\n            <Link to=\"/\">\r\n                <img src=\"../../logo.png\" style={{width:120, height:50}}/>\r\n            </Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span class=\"navbar-toggler-icon\" style={{border: '1px solid white', borderRadius: 5}}></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul class=\"navbar-nav mr-auto\" style={{marginLeft:10}}>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"\")} to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"shop\")} to=\"/shop\">Shop</Link>\r\n                    </li>\r\n                    {/* {isAuthenticated() && isAuthenticated().user.role === 0 && ( */}\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"dashboard\")} to=\"/dashboard\">Dashboard</Link>\r\n                        </li>\r\n                    {/* )} */}\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"cart\")} to=\"/cart\">Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup></Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"contact\")} to=\"/contact\">Contact Us</Link>\r\n                    </li>\r\n                    {/* {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" style={isActive(history, \"admin/dashboard\")} to=\"/admin/dashboard\" >Dashboard</Link>\r\n                        </li>\r\n                    )} */}\r\n                </ul>\r\n                    <ul className=\"navbar-nav\">\r\n                    {!isAuthenticated() && (\r\n                        <Fragment> \r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signin\")} to=\"/signin\">Sign In</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signup\")}to=\"/signup\">Sign Up</Link>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                                onClick = {()=> signout(()=>{\r\n                                    history.push('/');\r\n                                    toast.success(\"Logout Successfully\");\r\n                                })}>\r\n                                Sign Out\r\n                            </span>\r\n                        </li>\r\n                )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n    )\r\n};\r\n  \r\nexport default withRouter(Menu);\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Footer.js",["1221"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\RadioBox.js",["1222","1223"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Checkout.js",["1224","1225","1226","1227","1228","1229","1230","1231","1232"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Card.js",["1233","1234","1235"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\Signin.js",["1236","1237","1238","1239","1240","1241","1242","1243","1244"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\Signup.js",["1245","1246","1247","1248","1249","1250"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\Signup.js",["1251","1252","1253","1254","1255"],"import React,{useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Layout from '../foodie/core/Layout';\r\nimport {signup, authenticate, facebooksignup, googlesignup} from '../foodie/auth/index';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n// or\r\n// import { GoogleLogin } from 'react-google-login';\r\nimport { toast } from 'react-toastify';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n// import { css } from \"@emotion/core\";\r\n// import ClipLoader from \"react-spinners/ClipLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\nconst Signup = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        name:'',\r\n        email:'',\r\n        password:'',\r\n        error:'',\r\n        success:false\r\n    });\r\n    const [loading, setloading] = useState({\r\n        loading1: false,\r\n    })\r\n    const {loading1} = loading\r\n    const {name, email, password, error, success} = values;\r\n\r\n    const handleChange = name => event =>{\r\n        setValues({...values, error:false, [name]: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false})\r\n        setloading({...loading, loading1:true})\r\n        signup({name, email, password})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, success:false})\r\n                if(data.error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                    setValues({...values, error:\"Email Already Exist\"})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(\"Email Already Exist\");\r\n                }\r\n                else{\r\n                    setValues({...values, error:data.error})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n            }\r\n            else{\r\n                setValues({...values, name:'', email:'', password:'', error:'', success:true})\r\n                // history.push('/login');\r\n                setloading({...loading, loading1:false})\r\n                toast.success(\"KHANSAMA Send You Email Kindly Activate Your Account\");\r\n                setValues({...values, name:'', email:'', password:''})\r\n                // toast.success(\"Sign Up In Successfully\");\r\n            }\r\n        })\r\n    }\r\n \r\n    \r\n\r\n    const signupForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            {/* <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:100}}>Sign Up</button> */}\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Sign Up\r\n            </button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () =>{\r\n        if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n            setValues({...values, error:\"Email Already Exist\"})\r\n        }\r\n        return(\r\n            <div className=\"alert alert-danger\" \r\n                style={{\r\n                    display:error?'':'none'\r\n                }}>\r\n                {error}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const showSuccess = () =>(\r\n        <div className=\"alert alert-info\" \r\n            style={{\r\n                display:success?'':'none'\r\n            }}>\r\n            Account is Created. <Link to=\"/signin\">Please Signin</Link>\r\n        </div>\r\n    );\r\n\r\n    const responseFacebook = (response) => {\r\n        const {name, email} = response;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by FB\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            facebooksignup({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                        setValues({...values, error:\"Email Already Exist\"})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(\"Email Already Exist\");\r\n                    }\r\n                    else{\r\n                        setValues({...values, error:data.error, loading:false})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(data.error);\r\n                    }\r\n                }\r\n                else{\r\n                    // authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        // toast.success(\"Sign Up In Successfully\");\r\n                        setloading({...loading, loading1:false})\r\n                        toast.success(\"KHANSAMA Send You Email Kindly Activate Your Account\");\r\n                    // })\r\n                }\r\n                setValues({...values, name:'', email:'', password:''})\r\n            })\r\n        }\r\n    }        \r\n    const responseGoogle = (response) => {\r\n        // console.log(response);\r\n        // console.log(response.profileObj.email);\r\n        // console.log(response.profileObj.name);\r\n        const {name, email} = response.profileObj;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by Google\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            googlesignup({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    if(error === \"11000 duplicate key error collection: khansama.foodies index: email already exists\"){\r\n                        setValues({...values, error:\"Email Already Exist\"})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(data.error);\r\n                    }\r\n                    else{\r\n                        setValues({...values, error:data.error, loading:false})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.error(data.error);\r\n                    }\r\n                }\r\n                else{\r\n                    // authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        // toast.success(\"Sign Up In Successfully\");\r\n                        setloading({...loading, loading1:false})\r\n                        toast.success(\"KHANSAMA Send You Email Kindly Activate Your Account\");\r\n                    // })\r\n                }\r\n                setValues({...values, name:'', email:'', password:''})\r\n            })\r\n        }\r\n    } \r\n    \r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n            return(\r\n            <div>\r\n            <Layout/>\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{\r\n                    }}> \r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                    <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Foodie SignUp</p>\r\n                        {/* {showError()} */}\r\n                        {showSuccess()}\r\n                        <div className=\"row\" style={{marginTop:30}}>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 mb-4\">\r\n                                <div>\r\n                                    {signupForm()}\r\n                                </div> \r\n                            <div className=\"row\">\r\n                                <div className=\"col-12\" style={{textAlign:'right'}}>\r\n                                    <Link to=\"/signin\" style={{color:'#007bff'}}>Have a Account? Login here</Link>\r\n                                </div>\r\n                            </div>\r\n                                <br/>\r\n                                <div className=\"text\" style={{marginBottom:5}}>\r\n                                    External SignUp\r\n                                </div>\r\n                                <div>\r\n                                    <FacebookLogin\r\n                                        appId=\"116202456910700\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email\"\r\n                                        callback={responseFacebook}\r\n                                        icon=\"fa-facebook mr-1\"\r\n                                        cssClass=\"fb_styling py-2 rounded-lg\"\r\n                                    />\r\n                                    <p style={{width:'100%', textAlign:'center', margin:0, padding:0}}>&nbsp; OR &nbsp;</p> \r\n                                \r\n                                    <GoogleLogin\r\n                                        clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                        render={renderProps => (\r\n                                            <button\r\n                                            onClick={renderProps.onClick}\r\n                                            disabled={renderProps.disabled}\r\n                                            className='py-2 rounded-lg'\r\n                                            style={{width:'100%'}}>\r\n                                            <div className='rounded-full '>\r\n                                                <i className='fa fa-google mr-1' />\r\n                                                SignUp with Google\r\n                                            </div>\r\n                                            </button>\r\n                                        )}\r\n                                    ></GoogleLogin>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                                style={{height:'465px'}}>\r\n                                {/* style={{backgroundColor:'#dae5ed', height:'465px'}}> */}\r\n                                <img src=\"./logo2.png\" className=\"imageCenter\" \r\n                                    style={{width:'65%'}}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n  \r\nexport default Signup;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerDashborard.js",["1256","1257","1258","1259"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Menu.js",["1260","1261","1262","1263","1264"],"import React, {Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {signout, isAuthenticated} from '../auth/index';\r\n// import {itemTotal} from './cartHelpers';\r\n// import {itemTotal} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst isActive = (history, path) => {\r\n    console.log(\"HISTORY: \" + history.location.pathname);\r\n    if(history.location.pathname === \"/admin/\"+path){\r\n        return {color:'#F40009'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    } \r\n}\r\n\r\nconst Menu = ({history}) =>{\r\n    // console.log(\"HISTORY: \" + history.location.pathname);\r\n    return(\r\n        <div>\r\n        <nav class=\"navbar navbar-expand-md mr-auto\"\r\n        style={{backgroundColor:\"black\"}}>\r\n            {/* <a class=\"navbar-brand\" href=\"#\" style={{color:\"white\"}}>KHANSAMA</a> */}\r\n            <Link to=\"/admin/dashboard\">\r\n                <img src=\"/logo.png\" style={{width:120, height:50}}/>\r\n            </Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span class=\"navbar-toggler-icon\" style={{border: '1px solid white', borderRadius: 5}}></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul class=\"navbar-nav mr-auto\" style={{marginLeft:10}}>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"\")} to=\"/admin/\" >Home</Link>\r\n            </li>\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 1 && ( */}\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"dashboard\")} to=\"/admin/dashboard\" >Dashboard</Link>\r\n                </li>\r\n            {/* )} */}\r\n            </ul>\r\n            <ul className=\"navbar-nav\">\r\n            {!isAuthenticated() && (\r\n                <Fragment> \r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signin\")} to=\"/admin/signin\">Sign In</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"signup\")}to=\"/admin/signup\">Sign Up</Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n            {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                                onClick = {()=> signout(()=>{\r\n                                    history.push('/admin/signin');\r\n                                    toast.success(\"Logout Successfully\");\r\n                                })}>\r\n                                Sign Out\r\n                            </span>\r\n                        </li>\r\n                )}\r\n                 </ul>\r\n            </div>\r\n        </nav>\r\n    </div>\r\n    )\r\n};\r\n  \r\nexport default withRouter(Menu);\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\Menu.js",["1265","1266","1267","1268","1269"],"import React, {Fragment} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {signout, isAuthenticated} from '../auth/index';\r\n// import {itemTotal} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst isActive = (history, path) => {\r\n    console.log(\"HISTORY: \" + history.location.pathname);\r\n    if(history.location.pathname === \"/foodlancer\"+path){\r\n        return {color:'#F40009'}\r\n    }\r\n    else{\r\n        return {color:'#ffffff'}\r\n    }\r\n}\r\n\r\nconst Menu = ({history}) =>{\r\n    // console.log(\"HISTORY: \" + history.location.pathname);\r\n    return( <div>\r\n        <nav class=\"navbar navbar-expand-md\"\r\n        style={{backgroundColor:\"black\"}}>\r\n            {/* <a class=\"navbar-brand\" href=\"#\" style={{color:\"white\"}}>KHANSAMA</a> */}\r\n            <Link to=\"/foodlancer\">\r\n                <img src=\"../../logo.png\" style={{width:120, height:50}}/>\r\n            </Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                <span class=\"navbar-toggler-icon\" style={{border: '1px solid white', borderRadius: 5}}></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\r\n                <ul class=\"navbar-nav mr-auto\" style={{marginLeft:10}}>\r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"\")} to=\"/foodlancer\" >Home</Link>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"shop\")} to=\"/shop\" >Shop</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" style={isActive(history, \"/cart\")} to=\"/cart\" >Cart <sup><small className=\"cart-badge\">{itemTotal()}</small></sup></Link>\r\n            </li> */}\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 0 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(history, \"user/dashboard\")} to=\"/user/dashboard\" >Dashboard</Link>\r\n                </li>\r\n            )} */}\r\n            {/* {isAuthenticated() && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={isActive(history, \"admin/dashboard\")} to=\"/admin/dashboard\" >Dashboard</Link>\r\n                </li>\r\n            )} */}\r\n             {/* {isAuthenticated() && isAuthenticated().user.role === 1 && ( */}\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"\")} to=\"/foodlancer\">Dashboard</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"contact\")} to=\"/foodlancer/contact\">Contact Us</Link>\r\n                </li>\r\n            {/* )} */}\r\n            </ul>\r\n                <ul className=\"navbar-nav\">\r\n            {!isAuthenticated() && (\r\n                <Fragment> \r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"/signin\")} to=\"/foodlancer/signin\">Sign In</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" style={{fontSize:17, color:\"white\"},isActive(history, \"/signup\")}to=\"/foodlancer/signup\">Sign Up</Link>\r\n                    </li>\r\n                </Fragment>\r\n            )}\r\n           {/* {isAuthenticated()  && isAuthenticated().user.role === 1 && (\r\n                <li className=\"nav-item\">\r\n                    <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                        onClick = {()=> signout(()=>{\r\n                            history.push('/foodlancer/');\r\n                         })}>\r\n                        Sign Out\r\n                    </span>\r\n                </li>\r\n           )} */}\r\n           {isAuthenticated() && (\r\n                        <li className=\"nav-item\">\r\n                            <span className=\"nav-link\" style={{cursor:'pointer', color:'#ffffff'}} \r\n                                onClick = {()=> signout(()=>{\r\n                                    history.push('/foodlancer/signin');\r\n                                    toast.success(\"Logout Successfully\");\r\n                                })}>\r\n                                Sign Out\r\n                            </span>\r\n                        </li>\r\n            )}\r\n                </ul> \r\n            </div>\r\n        </nav>\r\n    </div>\r\n    )\r\n};\r\n  \r\nexport default withRouter(Menu);\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Search.js",["1270","1271"],"import React, {useState, useEffect} from 'react';\r\nimport Layout from './Layout';\r\nimport {getCategories, list} from './apiCore';\r\nimport Card from './Card';\r\n\r\nconst Search = () =>{\r\n    const [data, setData] = useState({\r\n        categories:[],\r\n        category:'',\r\n        search:'',\r\n        results:[],\r\n        searched:false\r\n    })\r\n    const {categories, category, search, results, searched} =data;\r\n\r\n    const loadCategories = () =>{\r\n        getCategories()\r\n        .then(data =>{\r\n            if(data.error){\r\n                console.log(data.error);\r\n            }\r\n            else{\r\n                setData({...data, categories:data})\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        loadCategories();\r\n    },[])\r\n    \r\n    const handleChange = name => event =>{\r\n        setData({...data, [name]:event.target.value, searched:false});\r\n    }\r\n    const searchData = () =>{\r\n        // console.log(search, category);\r\n        if(search){\r\n            list({search: search || undefined, category: category})\r\n            .then(response =>{\r\n                if(response.error){\r\n                    console.log(response.error);\r\n                }\r\n                else{\r\n                    setData({...data, results:response, searched:true});\r\n                    console.log(results);\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const searchSubmit = (e) =>{\r\n        e.preventDefault();\r\n        searchData();\r\n\r\n    }\r\n    const searchedProducts = (results = []) =>{\r\n        return(\r\n            <div style={{margin:10}}>\r\n                <h2 className=\"mb-4\" style={{width:'100%', textAlign:'center'}}>{searchMessage(searched, results)}</h2>\r\n                {/* <div className=\"row ml-3\" style={{marginLeft:10, marginRight:10}}>\r\n                    {results.map((product, i)=>(\r\n                        <Card key={i} product={product}/>\r\n                    ))}\r\n                </div> */}\r\n                <div className=\"row\" style={{marginLeft:10, marginRight:10}}>\r\n                    {results.map((product, i)=>(\r\n                        <div key={i} className=\"col-xl-4 col-lg-4 col-md-6 col-sm-6 col-12 mb-3\">\r\n                            <Card key={i} product={product}/>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        )        \r\n    }\r\n    const searchMessage = (searched, results) =>{\r\n        if(searched && results.length > 0 && results.length > 1){\r\n            return `Found ${results.length} Prodcuts`\r\n        }\r\n        if(searched && results.length == 1){\r\n            return `Found ${results.length} Prodcut`\r\n        }\r\n        if(searched && results.length < 1){\r\n            return `No Found Prodcut`\r\n        }\r\n        \r\n    }\r\n    const searchForm = () =>(\r\n        <form onSubmit={searchSubmit} style={{margin:10}}>\r\n            <span className=\"input-group-text\">\r\n                <div className=\"input-group input-group-lg\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <select className=\"btn mr-2\" onChange={handleChange('category')}  style={{fontSize:18}}> \r\n                            <option value=\"All\">All</option>\r\n                            {categories.map((c, i)=>(\r\n                                <option key={i} value={c._id}>{c.name}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <input type=\"search\" className=\"form-control\" onChange={handleChange('search')}\r\n                     placeholder=\"Search by Name\"  style={{fontSize:18}}/>\r\n                </div>\r\n                <div className=\"btn input-group-append\" style={{border:'none'}}>\r\n                    <button className=\"input-group-text\"  style={{fontSize:18}}>Search</button>\r\n                </div>\r\n            </span>\r\n        </form>\r\n    );\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"container mb-3\">\r\n                {searchForm()}\r\n            </div>\r\n            <div className=\"container-fluid mb-3\">\r\n                {searchedProducts(results)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Search;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\ShowImage.js",["1272","1273"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\CheckoutCard.js",["1274","1275","1276"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ShowImage from './ShowImageCheckout';\r\nimport moment from 'moment';\r\nimport {addItem, updateProduct, removeProduct} from './cartHelpers';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst Card = ({product, showViewProductButton = true, showAddToCartButton = true, cartUpdate = false, showRemoveProductButton = false, setRun = f => f, run = undefined}) =>{\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\nconst showViewButton = (showViewProductButton) =>{\r\n    return(\r\n        showViewProductButton && (\r\n            <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                <button className=\"btn btn-primary mt-2 mb-2 mr-2\">\r\n                    View Product\r\n                </button>\r\n            </Link>\r\n        )\r\n    )\r\n}\r\nconst showAddToCart = showAddToCartButton =>{\r\n    return showAddToCartButton && (\r\n        <button onClick={addToCart} className=\"btn btn-warning mt-2 mb-2\"\r\n        style={{backgroundColor:'#36454f', color:\"white\"}}>\r\n            Add to Cart \r\n        </button>\r\n    );\r\n};\r\nconst showRemoveCartButton = showRemoveProductButton =>{\r\n    return (\r\n        showRemoveProductButton && (\r\n          <button\r\n            onClick={() => {\r\n              removeProduct(product._id);\r\n              setRun(!run); // run useEffect in parent Cart\r\n            }}\r\n            className=\"btn btn-outline-danger mt-2 mb-2\"\r\n          >\r\n            Remove Product\r\n          </button>\r\n        )\r\n      );\r\n};\r\nconst addToCart = () =>{\r\n    addItem(product, ()=>{\r\n        setRedirect(true);\r\n        toast.info(\"Product Added Into Cart\");\r\n    })\r\n}\r\nconst shouldRedirect = redirect =>{\r\n    if(redirect){\r\n        return <Redirect to=\"/cart\"/>\r\n        // toast.info(\"Product Added Into Cart\");\r\n    }\r\n}\r\n\r\nconst showStock = (quantity) =>{\r\n    return quantity > 0 ? \r\n    <span className=\"badge badge-primary badge-pill\">In Stock</span>\r\n    :\r\n    <span className=\"badge badge-primary badge-pill\">Out Of Stock</span>\r\n}\r\nconst showCartUpdateOptions = cartUpdate =>{\r\n    return cartUpdate && (\r\n        <div>\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Adjust Quantity</span>\r\n                </div>\r\n                <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)} min=\"1\" max=\"5\" maxLength=\"1\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst handleChange = productId => event => {\r\n    if(event.target.value > 5){\r\n        toast.error(\"Product quantity should be less then equal to 5\");\r\n    }\r\n    else{\r\n        setRun(!run); // run useEffect in parent Cart\r\n        setCount(event.target.value < 1 ? 1 : event.target.value);\r\n        if (event.target.value >= 1) {\r\n            updateProduct(productId, event.target.value);\r\n        }\r\n    }\r\n} \r\n    return(\r\n            <div className=\"row\" style={{color:'black', fontSize:'18px', margin:10, borderBottom: '2px solid #B2022F'}}>\r\n                    {shouldRedirect(redirect)}\r\n                <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-12 col-12\">\r\n                    <ShowImage item={product} url=\"product\"/>\r\n                </div>\r\n                <div className=\"col-xl-9 col-lg-9 col-md-9 col-sm-12 col-12\">\r\n                    <p className=\"lead mt-2\">Product Name: {product.name}</p>\r\n                    <p className=\"black-10\">Product Price: {product.price} Rs.</p>\r\n                    <p className=\"black-9\">Product Category: {product.category && product.category.name}</p>\r\n                    {/* <p className=\"black-8\">Product Added on {moment(product.createdAt).fromNow()}</p> */}\r\n                    <p className=\"lead mt-2\">Product Description: {product.description.substring(0,400)}</p>\r\n\r\n                    {/* {showStock(product.quantity)} */}\r\n                    <br/>\r\n                    {showViewButton(showViewProductButton)}\r\n                    {showAddToCart(showAddToCartButton)}\r\n                    {showRemoveCartButton(showRemoveProductButton)}\r\n                    {showCartUpdateOptions(cartUpdate)} \r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n// <div className=\"card\">\r\n// <div className=\"card-header name\" style={{color:'black', fontSize:'18px', textTransform:'uppercase'}}>\r\n//     {product.name}\r\n// </div>\r\n// <div className=\"card-body\">\r\n//     {shouldRedirect(redirect)}\r\n//     <ShowImage item={product} url=\"product\"/>\r\n//     <p className=\"lead mt-2\">{product.description.substring(0,100)}</p>\r\n//     <p className=\"black-10\">Price: {product.price} Rs.</p>\r\n//     <p className=\"black-9\">Category: ${product.category && product.category.name}</p>\r\n//     <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n//     {/* {showStock(product.quantity)} */}\r\n//     <br/>\r\n    // {showViewButton(showViewProductButton)}\r\n    // {showAddToCart(showAddToCartButton)}\r\n    // {showRemoveCartButton(showRemoveProductButton)}\r\n    // {showCartUpdateOptions(cartUpdate)} \r\n// </div>\r\n// </div>","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\FoodlancerProducts.js",["1277","1278","1279","1280","1281"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Shop.js",["1282","1283","1284","1285","1286","1287","1288","1289","1290","1291"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\Signin.js",["1292","1293","1294","1295","1296","1297","1298","1299"],"import React,{useState} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport Layout from '../foodie/core/Layout';\r\nimport {signin, authenticate, isAuthenticated, facebooklogin, googlesignin} from '../foodie/auth/index';\r\nimport FacebookLogin from 'react-facebook-login';\r\nimport GoogleLogin from 'react-google-login';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import { ToastProvider, useToasts } from 'react-toast-notifications'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst Signin = ({history}) =>{\r\n    const [values,setValues] = useState({\r\n        email:'sulemanhamzatahir@gmail.com',\r\n        password:'111111',\r\n        error:'',\r\n        loading:false,\r\n        redirectToReferrer:false\r\n    });\r\n    const [loadings, setloading] = useState({\r\n        loading1: false,\r\n    })\r\n    const {loading1} = loadings\r\n    const {email, password, error, loading, redirectToReferrer} = values;\r\n    // const  {user}  = isAuthenticated();\r\n    // const { addToast } = useToasts()\r\n    const handleChange = name => event =>{\r\n        setValues({...values, error:false, [name]: event.target.value})\r\n    }\r\n\r\n    const clickSubmit = (event) =>{\r\n        event.preventDefault();\r\n        setValues({...values, error:false, loading:true})\r\n        setloading({...loadings, loading1:true})\r\n        signin({email, password})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error:data.error, loading:false})\r\n                setloading({...loading, loading1:false})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                authenticate(data, ()=>{\r\n                    setValues({...values, redirectToReferrer:true})\r\n                    setloading({...loading, loading1:false})\r\n                    history.push('/');\r\n                })\r\n                toast.success(\"Logged In Successfully\");\r\n                setloading({...loadings, loading1:false})\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    const signinForm = () =>(\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Email</label>\r\n                <input onChange={handleChange('email')} type=\"email\" className=\"form-control\" value={email}/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"text\">Password</label>\r\n                <input onChange={handleChange('password')} type=\"password\" className=\"form-control\" value={password}/>\r\n            </div>\r\n            <button onClick={clickSubmit} className=\" btn btn-primary\" style={{width:'100%'}}\r\n                className='py-2 rounded-lg'>\r\n                <i className='fa fa-sign-in mr-1' />\r\n                Login\r\n            </button> \r\n            <div className=\"row\">\r\n                <div className=\"col-xl-8 col-lg-8 col-md-8 col-sm-7 col-7\">\r\n                    <Link to=\"/signup\" style={{color:'#007bff', paddingRight:0}}>Don't have a Account?</Link>\r\n                </div>\r\n                <div className=\"col-xl-4 col-lg-4 col-md-4 col-sm-5 col-5\" style={{textAlign:'right'}}>\r\n                    <Link to=\"/forget/password\" style={{color:'#F40009'}}>Forget Password</Link>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n\r\n    const showError = () =>{\r\n        if(error ===\"11000 duplicate key error collection: ecommerce.users index: email already exists\"){\r\n            setValues({...values, error:\"Email Already Exist\"})\r\n        }\r\n        return(\r\n            <div className=\"alert alert-danger\" \r\n                style={{\r\n                    display:error?'':'none'\r\n                }}>\r\n                {error}\r\n            </div>\r\n        )\r\n    };\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n                <div className=\"alert alert-info\">\r\n                  <h2>Loading...</h2>\r\n                </div>\r\n                // <div className=\"sweet-loading\">\r\n                //     <ClipLoader\r\n                //         css={override}\r\n                //         size={50}\r\n                //         type=\"PacmanLoader\"                        \r\n                //         color={\"#123abc\"}\r\n                //         loading={loading}\r\n                //     />\r\n                // </div>\r\n    );\r\n\r\n    // const redirectUser = () =>{\r\n    //     if(redirectToReferrer === true){\r\n    //        if(user && user.role === 1){\r\n    //             return <Redirect to=\"/admin/dashboard\"/>\r\n    //        }\r\n    //        else{\r\n    //             return <Redirect to=\"/user/dashboard\"/>\r\n    //        }\r\n    //     }\r\n    //     if(isAuthenticated()){\r\n    //         return <Redirect to=\"/\"/>\r\n    //      }\r\n    // }\r\n    const responseFacebook = (response) => {\r\n        const {name, email} = response;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by FB\");\r\n            toast.error(\"No FB account is attach\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            facebooklogin({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n                else{\r\n                    authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        toast.success(\"Logged In Successfully\");\r\n                        setloading({...loading, loading1:false})\r\n                        history.push('/');\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    const responseGoogle = (response) => {\r\n        // console.log(response);\r\n        // console.log(response.profileObj.email);\r\n        // console.log(response.profileObj.name);\r\n        const {name, email} = response.profileObj;\r\n        // console.log(name + \" \" + email);\r\n        if(response === undefined || response === ''){\r\n            console.log(\"No User is sent in Response by Google\");\r\n            toast.error(\"No Google account is attach\");\r\n        }\r\n        else{\r\n            setloading({...loading, loading1:true})\r\n            googlesignin({name, email})\r\n            .then(data =>{\r\n                if(data.error){\r\n                    setValues({...values, error:data.error, loading:false})\r\n                    setloading({...loading, loading1:false})\r\n                    toast.error(data.error);\r\n                }\r\n                else{\r\n                    authenticate(data, ()=>{\r\n                        setValues({...values, redirectToReferrer:true})\r\n                        setloading({...loading, loading1:false})\r\n                        toast.success(\"Logged In Successfully\");\r\n                        history.push('/');\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n            return(\r\n            // <Layout title=\"Signin\" description=\"Node React E-Commerce App Signin\" className=\"container col-md-8 offset-md-2\">\r\n            //     {showLoading()}\r\n            //     {showError()}\r\n            //     {signinForm()}\r\n            //     {/* {redirectUser()} */}\r\n            //     {/* {JSON.stringify(values)} */}\r\n            // </Layout>\r\n            <div>\r\n                <Layout/>\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{\r\n                    //   position: 'absolute', left: '50%', top: '50%',\r\n                    //   transform: 'translate(-50%, -50%)'\r\n                    }}> \r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\", margin:0, padding:0}}>Welcome!</p>\r\n                    <p style={{fontSize:23, fontWeight:500, textAlign:\"center\", margin:0, padding:0}}>Foodie Login</p>\r\n                    {/* {showError()} */}\r\n                    {/* {showLoading()} */}\r\n                    <div className=\"row\" style={{marginTop:30}}>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12 mb-4\">\r\n                                <div>\r\n                                    {signinForm()}\r\n                                </div>\r\n                                <br/>\r\n                                <div className=\"text\" style={{marginBottom:5}}>\r\n                                    External Login\r\n                                </div>\r\n                                <div>\r\n                                    <FacebookLogin\r\n                                        appId=\"116202456910700\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email\"\r\n                                        callback={responseFacebook}\r\n                                        icon=\"fa-facebook mr-1\"\r\n                                        cssClass=\"fb_styling py-2 rounded-lg\"\r\n                                    />\r\n                                    {/* <FacebookLogin\r\n                                        appId=\"116202456910700\"\r\n                                        autoLoad={false}\r\n                                        fields=\"name,email\"\r\n                                        callback={responseFacebook}\r\n                                        cssClass=\"fb_styling\"\r\n                                        render={renderProps => (\r\n                                            <button\r\n                                                onClick={renderProps.onClick}\r\n                                                className='w-full max-w-xs font-bold shadow-sm rounded-lg py-3 bg-indigo-100 text-gray-800 flex items-center justify-center transition-all duration-300 ease-in-out focus:outline-none hover:shadow focus:shadow-sm focus:shadow-outline mt-5'\r\n                                                style={{width:'100%'}}>\r\n                                                <div className=' p-2 rounded-full '>\r\n                                                    <i class=\"fa fa-google\" aria-hidden=\"true\">\r\n                                                        Sign In with Facebook\r\n                                                    </i>\r\n                                                </div>\r\n                                            </button>\r\n                                        )}\r\n                                    /> */}\r\n                                    <p style={{width:'100%', textAlign:'center', margin:0, padding:0}}>&nbsp; OR &nbsp;</p> \r\n                                    {/* <GoogleLogin\r\n                                        clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                        buttonText=\"Login with Google\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                    /> */}\r\n                                    <GoogleLogin\r\n                                        clientId=\"839424098921-u1gs7fj2bn15tva426lojvva0hbpbuv5.apps.googleusercontent.com\"\r\n                                        onSuccess={responseGoogle}\r\n                                        onFailure={responseGoogle}\r\n                                        cookiePolicy={'single_host_origin'}\r\n                                        render={renderProps => (\r\n                                            <button\r\n                                            onClick={renderProps.onClick}\r\n                                            disabled={renderProps.disabled}\r\n                                            className='py-2 rounded-lg'\r\n                                            style={{width:'100%'}}>\r\n                                            <div className='rounded-full '>\r\n                                                <i className='fa fa-google mr-1' />\r\n                                                Login with Google\r\n                                            </div>\r\n                                            </button>\r\n                                        )}\r\n                                    ></GoogleLogin>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-xl-6 col-lg-6 col-md-6 col-sm-12 col-12\"  \r\n                                style={{height:'465px'}}>\r\n                                {/* style={{backgroundColor:'#dae5ed', height:'465px'}}> */}\r\n                                <img src=\"./logo2.png\" className=\"imageCenter\" \r\n                                    style={{width:'65%'}}/>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </div>        \r\n        );\r\n    }\r\n};\r\n\r\n// const Signup = () =>(\r\n//     <Layout title=\"Signup\" description=\"Node React E-Commerce App Signup\">\r\n//         {API}\r\n//     </Layout>\r\n// )\r\n  \r\nexport default Signin;\r\n\r\n// import React, { Component } from 'react';\r\n\r\n// const App = () => {\r\n//   const notify = () => toast(\"Wow so easy !\");\r\n  \r\n//   return <button onClick={notify}>Notify !</button>;\r\n// }\r\n// export default App","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ForgetPassword.js",["1300","1301","1302","1303"],"import React,{useEffect, useState} from 'react';\r\nimport Layout from './Layout';\r\nimport {forgetPassword} from '../auth/index';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n// Call it once in your app. At the root of your app is the best place\r\ntoast.configure()\r\n\r\n\r\nconst ForgetPassword = ({match}) =>{\r\n    const [values, setValues] = useState({\r\n        email:'',\r\n        error:false,\r\n        success:false\r\n    }); \r\n    const [loadings, setloading] = useState({\r\n        loading1: false,\r\n    })\r\n    const {loading1} = loadings \r\n    const {email, error, success} = values\r\n    const forgetButton = () =>{\r\n        setloading({...loadings, loading1:true})\r\n        forgetPassword({email})\r\n        .then(data =>{\r\n            if(data.error){\r\n                setValues({...values, error: true})\r\n                setloading({...loadings, loading1:false})\r\n                toast.error(data.error);\r\n            }\r\n            else{\r\n                setValues({...values, success: true})\r\n                setloading({...loadings, loading1:false})\r\n                toast.success(\"Password Reset Email Has Been Sent Successfully\");\r\n            }   \r\n        })\r\n    }\r\n    const handleChange = name => (e) =>{\r\n        setValues({...values, error: false, [name]: e.target.value})\r\n    }\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div>\r\n                <Layout/>\r\n                <div className=\"container-fluid col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12\" style={{marginTop:30}}>\r\n                    <p style={{fontSize:27, fontWeight:600, textAlign:\"center\"}}>KHANSAMA Foodie Forget Password</p>\r\n                    <div className='form-group'>\r\n                        <label className=\"text-muted\">Enter Your Email</label>\r\n                        <input type='email' onChange={handleChange('email')} className='form-control' value={email}/>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <button className='btn btn-primary' onClick={forgetButton} style={{width:'100%'}}>\r\n                                Send Reset Email\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    {/* {JSON.stringify(values.success)} */}\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n};\r\n\r\nexport default ForgetPassword;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\ResetPassword.js",["1304","1305","1306","1307"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Layout.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Card.js",["1308","1309","1310","1311","1312","1313","1314","1315"],"import React, {useState, useEffect} from 'react';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport ShowImage from './ShowImage';\r\nimport moment from 'moment';\r\nimport {addItem, updateProduct, removeProduct} from './cartHelpers';\r\nconst Card = ({product, showViewProductButton = true, showAddToCartButton = true, cartUpdate = false, showRemoveProductButton = false, setRun = f => f, run = undefined}) =>{\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\nconst showViewButton = (showViewProductButton) =>{\r\n    return(\r\n        showViewProductButton && (\r\n            <Link to={`/product/${product._id}`} className=\"mr-2\">\r\n                <button className=\"btn btn-outline-primary mt-2 mb-2 mr-2\"\r\n                style={{width:'100%'}}>\r\n                    View Product\r\n                </button>\r\n            </Link>\r\n        )\r\n    )\r\n}\r\n// const showAddToCart = showAddToCartButton =>{\r\n    // return showAddToCartButton && (\r\n    //     <button onClick={addToCart} className=\"btn btn-outline-warning mt-2 mb-2\">\r\n    //         Add to Cart \r\n    //     </button>\r\n    // );\r\n// };\r\n// const showRemoveCartButton = showRemoveProductButton =>{\r\n//     return (\r\n//         showRemoveProductButton && (\r\n//           <button\r\n//             onClick={() => {\r\n//               removeProduct(product._id);\r\n//               setRun(!run); // run useEffect in parent Cart\r\n//             }}\r\n//             className=\"btn btn-outline-danger mt-2 mb-2\"\r\n//           >\r\n//             Remove Product\r\n//           </button>\r\n//         )\r\n//       );\r\n// };\r\n// const addToCart = () =>{\r\n//     addItem(product, ()=>{\r\n//         setRedirect(true);\r\n//     })\r\n// }\r\n// const shouldRedirect = redirect =>{\r\n//     if(redirect){\r\n//         return <Redirect to=\"/cart\"/>\r\n//     }\r\n// }\r\n\r\n// const showStock = (quantity) =>{\r\n//     return quantity > 0 ? \r\n//     <span className=\"badge badge-primary badge-pill\">In Stock</span>\r\n//     :\r\n//     <span className=\"badge badge-primary badge-pill\">Out Of Stock</span>\r\n// }\r\n// const showCartUpdateOptions = cartUpdate =>{\r\n//     return cartUpdate && (\r\n//         <div>\r\n//             <div className=\"input-group mb-3\">\r\n//                 <div className=\"input-group-prepend\">\r\n//                     <span className=\"input-group-text\">Adjust Quantity</span>\r\n//                 </div>\r\n//                 <input type=\"number\" className=\"form-control\" value={count} onChange={handleChange(product._id)}/>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\nconst handleChange = productId => event => {\r\n    setRun(!run); // run useEffect in parent Cart\r\n    setCount(event.target.value < 1 ? 1 : event.target.value);\r\n    if (event.target.value >= 1) {\r\n        updateProduct(productId, event.target.value);\r\n    }\r\n} \r\n    return(\r\n            <div className=\"card\">\r\n                <div className=\"card-header name\" >\r\n                    {product.name}\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {/* {shouldRedirect(redirect)} */}\r\n                    <ShowImage item={product} url=\"product\"/>\r\n                    <p className=\"lead mt-2\">{product.description.substring(0,100)}</p>\r\n                    <p className=\"black-10\">Price: ${product.price}</p>\r\n                    <p className=\"black-9\">Category: {product.category && product.category.name}</p>\r\n                    <p className=\"black-8\">Added on {moment(product.createdAt).fromNow()}</p>\r\n                    {/* {showStock(product.quantity)} */}\r\n                    <br/>\r\n                    {showViewButton(showViewProductButton)}\r\n                    {/* {showAddToCart(showAddToCartButton)} */}\r\n                    {/* {showRemoveCartButton(showRemoveProductButton)} */}\r\n                    {/* {showCartUpdateOptions(cartUpdate)}  */}\r\n                </div>\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Card;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\Home.js",["1316","1317","1318","1319","1320","1321","1322"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\UpdateProduct.js",["1323","1324","1325","1326","1327","1328","1329","1330"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from '../core/Layout';\r\nimport { isAuthenticated } from '../auth/index';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { getProduct, getCategories, updateProduct } from './apiAdmin';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { css } from \"@emotion/core\";\r\nimport PulseLoader from \"react-spinners/PulseLoader\";\r\n\r\nconst UpdateProduct = ({ history, match }) => {\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        description: '',\r\n        price: '',\r\n        categories: [],\r\n        category: '',\r\n        shipping: '',\r\n        quantity: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: false,\r\n        createdProduct: '',\r\n        redirectToProfile: false,\r\n        formData: ''\r\n    });\r\n    const [categories, setCategories] = useState([]);\r\n    const [loadings, setloading] = useState({\r\n        loading1: false, \r\n    })\r\n    const {loading1} = loadings\r\n    const { user, token } = isAuthenticated();\r\n    const {\r\n        name,\r\n        description,\r\n        price,\r\n        // categories,\r\n        category,\r\n        shipping,\r\n        quantity,\r\n        loading,\r\n        error,\r\n        createdProduct,\r\n        redirectToProfile,\r\n        formData\r\n    } = values;\r\n\r\n    const init = productId => {\r\n        setloading({...loadings, loading1:true})\r\n        getProduct(productId).then(data => {\r\n            if (data.error) {\r\n                setloading({...loadings, loading1:false})\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                // populate the state\r\n                setloading({...loadings, loading1:false})\r\n                setValues({\r\n                    ...values,\r\n                    name: data.name,\r\n                    description: data.description,\r\n                    price: data.price,\r\n                    category: data.category._id,\r\n                    shipping: data.shipping,\r\n                    quantity: data.quantity,\r\n                    formData: new FormData()\r\n                });\r\n                // load categories\r\n                initCategories();\r\n            }\r\n        });\r\n    };\r\n\r\n    // load categories and set form data\r\n    const initCategories = () => {\r\n        getCategories().then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n            } else {\r\n                setCategories(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(match.params.productId);\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({ ...values, [name]: value });\r\n    };\r\n\r\n    const clickSubmit = event => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true });\r\n        setloading({...loadings, loading1:true})\r\n        updateProduct(match.params.productId, user._id, token, formData).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error });\r\n                setloading({...loadings, loading1:false})\r\n            } else {\r\n                setloading({...loadings, loading1:false})\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    description: '',\r\n                    photo: '',\r\n                    price: '',\r\n                    quantity: '',\r\n                    loading: false,\r\n                    error: false,\r\n                    redirectToProfile: true,\r\n                    createdProduct: data.name\r\n                });\r\n                history.push('/admin/products')\r\n                toast.success(\"Product is Updated Successfully.\")\r\n            }\r\n        });\r\n    };\r\n\r\n    const newPostForm = () => (\r\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\r\n            {/* <h4>Post Photo</h4> */}\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Name</label>\r\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Description</label>\r\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Price</label>\r\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Category</label>\r\n                <select onChange={handleChange('category')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    {categories &&\r\n                        categories.map((c, i) => (\r\n                            <option key={i} value={c._id}>\r\n                                {c.name}\r\n                            </option>\r\n                        ))}\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Shipping</label>\r\n                <select onChange={handleChange('shipping')} className=\"form-control\">\r\n                    <option>Please select</option>\r\n                    <option value=\"0\">No</option>\r\n                    <option value=\"1\">Yes</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"text-muted\">Quantity</label>\r\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n                <label className=\"btn btn-secondary\">\r\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\r\n                </label>\r\n            </div>\r\n\r\n            <button className=\"btn btn-outline-primary\">Update Product</button>\r\n        </form>\r\n    );\r\n\r\n    const showError = () => (\r\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\r\n            {error}\r\n        </div>\r\n    );\r\n\r\n    const showSuccess = () => (\r\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\r\n            <h2>{`${createdProduct}`} is updated!</h2>\r\n        </div>\r\n    );\r\n\r\n    const showLoading = () =>\r\n        loading && (\r\n            <div className=\"alert alert-success\">\r\n                <h2>Loading...</h2>\r\n            </div>\r\n        );\r\n\r\n    const redirectUser = () => {\r\n        if (redirectToProfile) {\r\n            if (!error) {\r\n                // return <Redirect to=\"/admin/dashboard\" />;\r\n                // history.push('/admin/dashboard')\r\n                // toast.success(\"Product is Updated Successfully.\")\r\n            }\r\n        }\r\n    };\r\n\r\n    if(loading1 === true){\r\n        return(\r\n            <div style={{position: \"fixed\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                <PulseLoader\r\n                    // css={override}\r\n                    size={15}\r\n                    color={\"#F40009\"}\r\n                    loading={true}\r\n                />\r\n                {/* <img src=\"../../logo3.png\" style={{width:150, height:80}}/> */}\r\n            </div>\r\n        )\r\n    }\r\n    else{  \r\n        return (\r\n            <Layout title=\"Update Product\" description={`Update Product Here`}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        {/* {showLoading()} */}\r\n                        {showSuccess()}\r\n                        {showError()}\r\n                        {newPostForm()}\r\n                        {/* {redirectUser()} */}\r\n                        Loading Value :: {loading1}\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\AdminProfile.js",["1331","1332","1333","1334"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\CardFoodlancer.js",["1335","1336","1337"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Home.js",["1338","1339","1340","1341","1342"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\fixedPrices.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\FoodlancerContact.js",["1343","1344","1345","1346","1347","1348","1349","1350","1351","1352"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\Footer.js",["1353","1354","1355","1356","1357","1358","1359","1360","1361"],"const Footer = () =>{\r\n    return(\r\n        <div>\r\n                <footer id=\"footer\" className=\"footer\" style={{backgroundColor:'black'}}>\r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 col-sm-12 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <img className=\"mb-2\" src=\"../logo.png\" \r\n                                         style={{height:70, display: 'block', \r\n                                                marginLeft: 'auto',marginRight: 'auto', \r\n                                                width: '30%'}}/>\r\n                                    <p style={{textAlign:'center'}}>\r\n                                        eusmod tempor incididunt ut labore et dolore magna aliqua. \r\n                                        Ut enim ad minim veniam, quis nostrud exercitation ullamco \r\n                                        laboris nisi ut aliquip ex ea commodo consequat.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 col-sm-12 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\" data-wow-delay=\"600ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <h6>Explore</h6>\r\n                                    <ul style={{margin:0, padding:0}}>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Inside Us</a></li>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Flickr</a></li>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Google</a></li>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Forum</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 col-sm-12 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\" data-wow-delay=\"600ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <h6>Important Links</h6>\r\n                                    <ul style={{margin:0, padding:0}}>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Inside Us</a></li>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Flickr</a></li>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Google</a></li>\r\n                                        <li><a href=\"#\" style={{color:'white'}}>Forum</a></li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            {/* <div className=\"col-md-3 col-sm-6 col-xs-12 wow fadeInUp animated\" data-wow-duration=\"500ms\" data-wow-delay=\"300ms\">\r\n                                <div className=\"footer-single\">\r\n                                    <h6>Subscribe </h6>\r\n                                    <form action=\"#\" className=\"subscribe\">\r\n                                        <input type=\"text\" name=\"subscribe\" id=\"subscribe\" placeholder=\"Enter Your Email\"/>\r\n                                        <input type=\"submit\" value=\"&#8594;\" id=\"subs\"/>\r\n                                    </form>\r\n                                    <p>Subscribe Our News Letter To Get News About New Homemade Food</p>\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <p className=\"copyright text-center\">\r\n                                    Copyright © 2021. All rights reserved. Designed & Developed by Suleman & Usman With <span><i class=\"fa fa-heart\" style={{color:'#F40009'}}></i></span>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n    )\r\n}\r\nexport default Footer;","C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\FoodieDashborard.js",["1362"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\apiCore.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Profile.js",["1363","1364","1365","1366","1367"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\ShippedOrder.js",["1368","1369","1370","1371","1372","1373"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\UpdateProduct.js",["1374","1375","1376","1377","1378","1379","1380","1381"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\CancelOrder.js",["1382","1383","1384","1385","1386","1387","1388"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\admin\\core\\FoodieProfile.js",["1389","1390","1391","1392"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\auth\\PrivateRoute.js",["1393"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Layout.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodlancer\\core\\apiFoodlancer.js",[],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\Checkbox.js",["1394"],"C:\\Users\\sulem\\OneDrive\\Desktop\\FYP\\Final\\fyp_project_front\\src\\foodie\\core\\ShowImageCheckout.js",["1395","1396"],{"ruleId":"1397","severity":1,"message":"1398","line":95,"column":12,"nodeType":"1399","messageId":"1400","endLine":95,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1401","line":95,"column":22,"nodeType":"1399","messageId":"1400","endLine":95,"endColumn":27},{"ruleId":"1402","replacedBy":"1403"},{"ruleId":"1404","replacedBy":"1405"},{"ruleId":"1397","severity":1,"message":"1398","line":96,"column":12,"nodeType":"1399","messageId":"1400","endLine":96,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1401","line":96,"column":22,"nodeType":"1399","messageId":"1400","endLine":96,"endColumn":27},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":27,"column":29,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1410","line":27,"column":36,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1411","line":27,"column":45,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":63},{"ruleId":"1397","severity":1,"message":"1412","line":28,"column":13,"nodeType":"1399","messageId":"1400","endLine":28,"endColumn":23},{"ruleId":"1413","severity":1,"message":"1414","line":70,"column":17,"nodeType":"1415","endLine":70,"endColumn":44},{"ruleId":"1416","severity":1,"message":"1417","line":133,"column":33,"nodeType":"1418","endLine":134,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1419","line":4,"column":31,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":46},{"ruleId":"1397","severity":1,"message":"1408","line":14,"column":10,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1411","line":30,"column":45,"nodeType":"1399","messageId":"1400","endLine":30,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":73,"column":17,"nodeType":"1415","endLine":73,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":83,"column":11,"nodeType":"1399","messageId":"1400","endLine":83,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1421","line":97,"column":11,"nodeType":"1399","messageId":"1400","endLine":97,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":240,"column":29,"nodeType":"1418","endLine":241,"endColumn":56},{"ruleId":"1402","replacedBy":"1422"},{"ruleId":"1404","replacedBy":"1423"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1397","severity":1,"message":"1409","line":19,"column":29,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1426","line":19,"column":36,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1397","severity":1,"message":"1409","line":18,"column":19,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1426","line":18,"column":26,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1427","line":25,"column":8,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1428","line":74,"column":8,"nodeType":"1399","messageId":"1400","endLine":74,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1397","severity":1,"message":"1409","line":18,"column":19,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1426","line":18,"column":26,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":33},{"ruleId":"1402","replacedBy":"1429"},{"ruleId":"1404","replacedBy":"1430"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1397","severity":1,"message":"1409","line":19,"column":29,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1426","line":19,"column":36,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1397","severity":1,"message":"1409","line":19,"column":29,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1426","line":19,"column":36,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":43},{"ruleId":"1402","replacedBy":"1431"},{"ruleId":"1404","replacedBy":"1432"},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1414","line":85,"column":17,"nodeType":"1415","endLine":85,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":92,"column":11,"nodeType":"1399","messageId":"1400","endLine":92,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1433","line":106,"column":11,"nodeType":"1399","messageId":"1400","endLine":106,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":251,"column":33,"nodeType":"1418","endLine":252,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1416","severity":1,"message":"1417","line":60,"column":29,"nodeType":"1418","endLine":61,"endColumn":56},{"ruleId":"1397","severity":1,"message":"1398","line":197,"column":12,"nodeType":"1399","messageId":"1400","endLine":197,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1401","line":197,"column":22,"nodeType":"1399","messageId":"1400","endLine":197,"endColumn":27},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1416","severity":1,"message":"1417","line":30,"column":13,"nodeType":"1418","endLine":30,"endColumn":67},{"ruleId":"1434","severity":1,"message":"1435","line":37,"column":87,"nodeType":"1436","messageId":"1437","endLine":37,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":40,"column":87,"nodeType":"1436","messageId":"1437","endLine":40,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":44,"column":91,"nodeType":"1436","messageId":"1437","endLine":44,"endColumn":92},{"ruleId":"1434","severity":1,"message":"1435","line":48,"column":87,"nodeType":"1436","messageId":"1437","endLine":48,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":51,"column":87,"nodeType":"1436","messageId":"1437","endLine":51,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":63,"column":95,"nodeType":"1436","messageId":"1437","endLine":63,"endColumn":96},{"ruleId":"1434","severity":1,"message":"1435","line":66,"column":95,"nodeType":"1436","messageId":"1437","endLine":66,"endColumn":96},{"ruleId":"1402","replacedBy":"1438"},{"ruleId":"1404","replacedBy":"1439"},{"ruleId":"1397","severity":1,"message":"1440","line":5,"column":8,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1409","line":9,"column":12,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1442","line":26,"column":8,"nodeType":"1443","endLine":26,"endColumn":10,"suggestions":"1444"},{"ruleId":"1402","replacedBy":"1445"},{"ruleId":"1404","replacedBy":"1446"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1416","severity":1,"message":"1417","line":60,"column":29,"nodeType":"1418","endLine":61,"endColumn":56},{"ruleId":"1397","severity":1,"message":"1440","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1409","line":9,"column":12,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1442","line":26,"column":8,"nodeType":"1443","endLine":26,"endColumn":10,"suggestions":"1447"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1450","line":5,"column":9,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1451","line":5,"column":24,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1452","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1409","line":24,"column":38,"nodeType":"1399","messageId":"1400","endLine":24,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1426","line":24,"column":45,"nodeType":"1399","messageId":"1400","endLine":24,"endColumn":52},{"ruleId":"1397","severity":1,"message":"1453","line":80,"column":11,"nodeType":"1399","messageId":"1400","endLine":80,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1457"},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":15,"column":12,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":15,"column":19,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1462"},{"ruleId":"1458","severity":1,"message":"1459","line":127,"column":84,"nodeType":"1460","messageId":"1461","endLine":127,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1450","line":5,"column":9,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1451","line":5,"column":24,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1452","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1409","line":24,"column":38,"nodeType":"1399","messageId":"1400","endLine":24,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1426","line":24,"column":45,"nodeType":"1399","messageId":"1400","endLine":24,"endColumn":52},{"ruleId":"1397","severity":1,"message":"1453","line":80,"column":11,"nodeType":"1399","messageId":"1400","endLine":80,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1463"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":10,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1406","line":4,"column":16,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1464","line":38,"column":9,"nodeType":"1399","messageId":"1400","endLine":38,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1465","line":39,"column":9,"nodeType":"1399","messageId":"1400","endLine":39,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1466","line":86,"column":8,"nodeType":"1443","endLine":86,"endColumn":10,"suggestions":"1467"},{"ruleId":"1397","severity":1,"message":"1421","line":189,"column":11,"nodeType":"1399","messageId":"1400","endLine":189,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1453","line":196,"column":11,"nodeType":"1399","messageId":"1400","endLine":196,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1433","line":64,"column":11,"nodeType":"1399","messageId":"1400","endLine":64,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1468","line":37,"column":7,"nodeType":"1443","endLine":37,"endColumn":9,"suggestions":"1469"},{"ruleId":"1397","severity":1,"message":"1470","line":5,"column":22,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":37},{"ruleId":"1397","severity":1,"message":"1471","line":5,"column":39,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":57},{"ruleId":"1397","severity":1,"message":"1472","line":5,"column":74,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":87},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1473","line":15,"column":12,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1474","line":15,"column":26,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":41},{"ruleId":"1397","severity":1,"message":"1475","line":16,"column":12,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1476","line":16,"column":26,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":41},{"ruleId":"1441","severity":1,"message":"1477","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1478"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1456","line":46,"column":7,"nodeType":"1443","endLine":46,"endColumn":9,"suggestions":"1479"},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1480","severity":1,"message":"1481","line":70,"column":39,"nodeType":"1482","messageId":"1483","endLine":70,"endColumn":41},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1485","line":6,"column":12,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":17},{"ruleId":"1402","replacedBy":"1486"},{"ruleId":"1404","replacedBy":"1487"},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1488","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1489","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":12},{"ruleId":"1397","severity":1,"message":"1406","line":6,"column":15,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1490","line":12,"column":8,"nodeType":"1399","messageId":"1400","endLine":12,"endColumn":19},{"ruleId":"1441","severity":1,"message":"1491","line":48,"column":7,"nodeType":"1443","endLine":48,"endColumn":9,"suggestions":"1492"},{"ruleId":"1397","severity":1,"message":"1493","line":78,"column":13,"nodeType":"1399","messageId":"1400","endLine":78,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1421","line":138,"column":11,"nodeType":"1399","messageId":"1400","endLine":138,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1448","line":4,"column":17,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":29},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1414","line":83,"column":17,"nodeType":"1415","endLine":83,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":90,"column":11,"nodeType":"1399","messageId":"1400","endLine":90,"endColumn":20},{"ruleId":"1416","severity":1,"message":"1417","line":255,"column":33,"nodeType":"1418","endLine":256,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1452","line":5,"column":10,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1426","line":22,"column":28,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":35},{"ruleId":"1480","severity":1,"message":"1494","line":55,"column":16,"nodeType":"1482","messageId":"1483","endLine":55,"endColumn":18},{"ruleId":"1416","severity":1,"message":"1417","line":61,"column":25,"nodeType":"1418","endLine":61,"endColumn":95},{"ruleId":"1397","severity":1,"message":"1420","line":157,"column":11,"nodeType":"1399","messageId":"1400","endLine":157,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1495","line":25,"column":22,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1496","line":25,"column":32,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":40},{"ruleId":"1397","severity":1,"message":"1409","line":27,"column":12,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1497","line":28,"column":19,"nodeType":"1399","messageId":"1400","endLine":28,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1498","line":36,"column":7,"nodeType":"1443","endLine":36,"endColumn":9,"suggestions":"1499"},{"ruleId":"1480","severity":1,"message":"1481","line":67,"column":21,"nodeType":"1482","messageId":"1483","endLine":67,"endColumn":23},{"ruleId":"1416","severity":1,"message":"1417","line":158,"column":29,"nodeType":"1418","endLine":158,"endColumn":83},{"ruleId":"1397","severity":1,"message":"1500","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":17,"column":12,"nodeType":"1399","messageId":"1400","endLine":17,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1501","line":68,"column":8,"nodeType":"1443","endLine":68,"endColumn":10,"suggestions":"1502"},{"ruleId":"1416","severity":1,"message":"1417","line":104,"column":25,"nodeType":"1418","endLine":104,"endColumn":79},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1419","line":4,"column":31,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":46},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1411","line":29,"column":45,"nodeType":"1399","messageId":"1400","endLine":29,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":72,"column":17,"nodeType":"1415","endLine":72,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":88,"column":11,"nodeType":"1399","messageId":"1400","endLine":88,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1421","line":102,"column":11,"nodeType":"1399","messageId":"1400","endLine":102,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":287,"column":33,"nodeType":"1418","endLine":288,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1414","line":97,"column":17,"nodeType":"1415","endLine":97,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":104,"column":11,"nodeType":"1399","messageId":"1400","endLine":104,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1433","line":118,"column":11,"nodeType":"1399","messageId":"1400","endLine":118,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":161,"column":33,"nodeType":"1418","endLine":162,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":18,"column":35,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1503","line":32,"column":7,"nodeType":"1443","endLine":32,"endColumn":9,"suggestions":"1504"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1505"},{"ruleId":"1397","severity":1,"message":"1506","line":51,"column":11,"nodeType":"1399","messageId":"1400","endLine":51,"endColumn":27},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":17,"column":12,"nodeType":"1399","messageId":"1400","endLine":17,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":17,"column":19,"nodeType":"1399","messageId":"1400","endLine":17,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":52,"column":7,"nodeType":"1443","endLine":52,"endColumn":9,"suggestions":"1507"},{"ruleId":"1397","severity":1,"message":"1506","line":54,"column":11,"nodeType":"1399","messageId":"1400","endLine":54,"endColumn":27},{"ruleId":"1458","severity":1,"message":"1459","line":134,"column":84,"nodeType":"1460","messageId":"1461","endLine":134,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":48,"column":7,"nodeType":"1443","endLine":48,"endColumn":9,"suggestions":"1508"},{"ruleId":"1397","severity":1,"message":"1506","line":50,"column":11,"nodeType":"1399","messageId":"1400","endLine":50,"endColumn":27},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1509","line":49,"column":8,"nodeType":"1443","endLine":49,"endColumn":10,"suggestions":"1510"},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1511","line":37,"column":7,"nodeType":"1443","endLine":37,"endColumn":9,"suggestions":"1512"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1513"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1514"},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1515","severity":1,"message":"1516","line":135,"column":80,"nodeType":"1517","messageId":"1518","endLine":135,"endColumn":82},{"ruleId":"1515","severity":1,"message":"1516","line":135,"column":116,"nodeType":"1517","messageId":"1518","endLine":135,"endColumn":118},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":16,"column":12,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":16,"column":19,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":51,"column":7,"nodeType":"1443","endLine":51,"endColumn":9,"suggestions":"1519"},{"ruleId":"1458","severity":1,"message":"1459","line":133,"column":84,"nodeType":"1460","messageId":"1461","endLine":133,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":15,"column":12,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":15,"column":19,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1520"},{"ruleId":"1458","severity":1,"message":"1459","line":132,"column":84,"nodeType":"1460","messageId":"1461","endLine":132,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":15,"column":12,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":15,"column":19,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1521"},{"ruleId":"1458","severity":1,"message":"1459","line":132,"column":84,"nodeType":"1460","messageId":"1461","endLine":132,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1522","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":11},{"ruleId":"1397","severity":1,"message":"1409","line":21,"column":25,"nodeType":"1399","messageId":"1400","endLine":21,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1523","line":22,"column":12,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1524","line":22,"column":54,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":63},{"ruleId":"1441","severity":1,"message":"1525","line":63,"column":7,"nodeType":"1443","endLine":63,"endColumn":9,"suggestions":"1526"},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":20,"column":35,"nodeType":"1399","messageId":"1400","endLine":20,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1527","line":34,"column":7,"nodeType":"1443","endLine":34,"endColumn":9,"suggestions":"1528"},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":16,"column":35,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1527","line":30,"column":7,"nodeType":"1443","endLine":30,"endColumn":9,"suggestions":"1529"},{"ruleId":"1397","severity":1,"message":"1530","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":16,"column":35,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1531","line":30,"column":7,"nodeType":"1443","endLine":30,"endColumn":9,"suggestions":"1532"},{"ruleId":"1402","replacedBy":"1533"},{"ruleId":"1404","replacedBy":"1534"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1535","line":5,"column":9,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":16},{"ruleId":"1397","severity":1,"message":"1536","line":5,"column":33,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":46},{"ruleId":"1397","severity":1,"message":"1537","line":8,"column":12,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1538","line":8,"column":22,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1454","line":9,"column":12,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1539","line":73,"column":7,"nodeType":"1399","messageId":"1400","endLine":73,"endColumn":19},{"ruleId":"1458","severity":1,"message":"1540","line":54,"column":31,"nodeType":"1460","messageId":"1541","endLine":54,"endColumn":33},{"ruleId":"1458","severity":1,"message":"1540","line":70,"column":31,"nodeType":"1460","messageId":"1541","endLine":70,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1416","severity":1,"message":"1417","line":9,"column":37,"nodeType":"1418","endLine":12,"endColumn":65},{"ruleId":"1542","severity":1,"message":"1543","line":12,"column":49,"nodeType":"1544","messageId":"1483","endLine":12,"endColumn":54},{"ruleId":"1545","severity":1,"message":"1546","line":24,"column":45,"nodeType":"1418","endLine":24,"endColumn":57},{"ruleId":"1545","severity":1,"message":"1546","line":25,"column":45,"nodeType":"1418","endLine":25,"endColumn":57},{"ruleId":"1545","severity":1,"message":"1546","line":26,"column":45,"nodeType":"1418","endLine":26,"endColumn":57},{"ruleId":"1545","severity":1,"message":"1546","line":27,"column":45,"nodeType":"1418","endLine":27,"endColumn":57},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1547","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1548","line":60,"column":7,"nodeType":"1399","messageId":"1400","endLine":60,"endColumn":16},{"ruleId":"1397","severity":1,"message":"1549","line":3,"column":19,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":28},{"ruleId":"1397","severity":1,"message":"1536","line":3,"column":30,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1550","line":3,"column":28,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":49},{"ruleId":"1397","severity":1,"message":"1409","line":10,"column":12,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1530","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1416","severity":1,"message":"1417","line":26,"column":13,"nodeType":"1418","endLine":26,"endColumn":71},{"ruleId":"1434","severity":1,"message":"1435","line":33,"column":79,"nodeType":"1436","messageId":"1437","endLine":33,"endColumn":80},{"ruleId":"1434","severity":1,"message":"1435","line":37,"column":83,"nodeType":"1436","messageId":"1437","endLine":37,"endColumn":84},{"ruleId":"1434","severity":1,"message":"1435","line":45,"column":87,"nodeType":"1436","messageId":"1437","endLine":45,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":48,"column":87,"nodeType":"1436","messageId":"1437","endLine":48,"endColumn":88},{"ruleId":"1416","severity":1,"message":"1417","line":23,"column":13,"nodeType":"1418","endLine":23,"endColumn":71},{"ruleId":"1434","severity":1,"message":"1435","line":50,"column":83,"nodeType":"1436","messageId":"1437","endLine":50,"endColumn":84},{"ruleId":"1434","severity":1,"message":"1435","line":53,"column":83,"nodeType":"1436","messageId":"1437","endLine":53,"endColumn":84},{"ruleId":"1434","severity":1,"message":"1435","line":61,"column":87,"nodeType":"1436","messageId":"1437","endLine":61,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":64,"column":87,"nodeType":"1436","messageId":"1437","endLine":64,"endColumn":88},{"ruleId":"1397","severity":1,"message":"1551","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":19},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1441","severity":1,"message":"1552","line":40,"column":7,"nodeType":"1443","endLine":40,"endColumn":9,"suggestions":"1553"},{"ruleId":"1397","severity":1,"message":"1464","line":31,"column":50,"nodeType":"1399","messageId":"1400","endLine":31,"endColumn":58},{"ruleId":"1397","severity":1,"message":"1465","line":31,"column":60,"nodeType":"1399","messageId":"1400","endLine":31,"endColumn":68},{"ruleId":"1397","severity":1,"message":"1554","line":32,"column":35,"nodeType":"1399","messageId":"1400","endLine":32,"endColumn":52},{"ruleId":"1441","severity":1,"message":"1555","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1556"},{"ruleId":"1397","severity":1,"message":"1433","line":129,"column":11,"nodeType":"1399","messageId":"1400","endLine":129,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1557","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1548","line":59,"column":7,"nodeType":"1399","messageId":"1400","endLine":59,"endColumn":16},{"ruleId":"1458","severity":1,"message":"1540","line":54,"column":31,"nodeType":"1460","messageId":"1541","endLine":54,"endColumn":33},{"ruleId":"1458","severity":1,"message":"1540","line":70,"column":31,"nodeType":"1460","messageId":"1541","endLine":70,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1464","line":32,"column":50,"nodeType":"1399","messageId":"1400","endLine":32,"endColumn":58},{"ruleId":"1397","severity":1,"message":"1465","line":32,"column":60,"nodeType":"1399","messageId":"1400","endLine":32,"endColumn":68},{"ruleId":"1397","severity":1,"message":"1558","line":32,"column":89,"nodeType":"1399","messageId":"1400","endLine":32,"endColumn":102},{"ruleId":"1397","severity":1,"message":"1554","line":33,"column":35,"nodeType":"1399","messageId":"1400","endLine":33,"endColumn":52},{"ruleId":"1441","severity":1,"message":"1555","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1559"},{"ruleId":"1397","severity":1,"message":"1421","line":138,"column":11,"nodeType":"1399","messageId":"1400","endLine":138,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1452","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1409","line":23,"column":35,"nodeType":"1399","messageId":"1400","endLine":23,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1531","line":39,"column":7,"nodeType":"1443","endLine":39,"endColumn":9,"suggestions":"1560"},{"ruleId":"1397","severity":1,"message":"1409","line":10,"column":12,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":10,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1406","line":4,"column":16,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1464","line":38,"column":9,"nodeType":"1399","messageId":"1400","endLine":38,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1465","line":39,"column":9,"nodeType":"1399","messageId":"1400","endLine":39,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1466","line":86,"column":8,"nodeType":"1443","endLine":86,"endColumn":10,"suggestions":"1561"},{"ruleId":"1397","severity":1,"message":"1421","line":189,"column":11,"nodeType":"1399","messageId":"1400","endLine":189,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1453","line":196,"column":11,"nodeType":"1399","messageId":"1400","endLine":196,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1509","line":51,"column":8,"nodeType":"1443","endLine":51,"endColumn":10,"suggestions":"1562"},{"ruleId":"1397","severity":1,"message":"1563","line":52,"column":11,"nodeType":"1399","messageId":"1400","endLine":52,"endColumn":29},{"ruleId":"1397","severity":1,"message":"1530","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1402","replacedBy":"1564"},{"ruleId":"1404","replacedBy":"1565"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":23,"column":29,"nodeType":"1399","messageId":"1400","endLine":23,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1426","line":23,"column":36,"nodeType":"1399","messageId":"1400","endLine":23,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1566","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1550","line":4,"column":28,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":49},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":12,"column":12,"nodeType":"1399","messageId":"1400","endLine":12,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1567","line":45,"column":7,"nodeType":"1443","endLine":45,"endColumn":14,"suggestions":"1568"},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1450","line":5,"column":9,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1451","line":5,"column":24,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1452","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1409","line":25,"column":38,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1426","line":25,"column":45,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":52},{"ruleId":"1397","severity":1,"message":"1453","line":81,"column":11,"nodeType":"1399","messageId":"1400","endLine":81,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1397","severity":1,"message":"1409","line":19,"column":29,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1426","line":19,"column":36,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1569"},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1570"},{"ruleId":"1458","severity":1,"message":"1459","line":126,"column":84,"nodeType":"1460","messageId":"1461","endLine":126,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1408","line":9,"column":10,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1509","line":51,"column":8,"nodeType":"1443","endLine":51,"endColumn":10,"suggestions":"1571"},{"ruleId":"1397","severity":1,"message":"1563","line":52,"column":11,"nodeType":"1399","messageId":"1400","endLine":52,"endColumn":29},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1419","line":4,"column":31,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":46},{"ruleId":"1397","severity":1,"message":"1408","line":14,"column":10,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1411","line":30,"column":45,"nodeType":"1399","messageId":"1400","endLine":30,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":73,"column":17,"nodeType":"1415","endLine":73,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":91,"column":11,"nodeType":"1399","messageId":"1400","endLine":91,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1421","line":105,"column":11,"nodeType":"1399","messageId":"1400","endLine":105,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":249,"column":29,"nodeType":"1418","endLine":250,"endColumn":56},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1414","line":85,"column":17,"nodeType":"1415","endLine":85,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":92,"column":11,"nodeType":"1399","messageId":"1400","endLine":92,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1433","line":106,"column":11,"nodeType":"1399","messageId":"1400","endLine":106,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":257,"column":33,"nodeType":"1418","endLine":258,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1416","severity":1,"message":"1417","line":60,"column":29,"nodeType":"1418","endLine":61,"endColumn":56},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1572"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1573"},{"ruleId":"1397","severity":1,"message":"1506","line":51,"column":11,"nodeType":"1399","messageId":"1400","endLine":51,"endColumn":27},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":22,"column":19,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1426","line":22,"column":26,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":16,"column":35,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1527","line":30,"column":7,"nodeType":"1443","endLine":30,"endColumn":9,"suggestions":"1574"},{"ruleId":"1397","severity":1,"message":"1470","line":5,"column":22,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":37},{"ruleId":"1397","severity":1,"message":"1471","line":5,"column":39,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":57},{"ruleId":"1397","severity":1,"message":"1472","line":5,"column":74,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":87},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1473","line":15,"column":12,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1474","line":15,"column":26,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":41},{"ruleId":"1397","severity":1,"message":"1475","line":16,"column":12,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1476","line":16,"column":26,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":41},{"ruleId":"1441","severity":1,"message":"1477","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1575"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":15,"column":12,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":15,"column":19,"nodeType":"1399","messageId":"1400","endLine":15,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":50,"column":7,"nodeType":"1443","endLine":50,"endColumn":9,"suggestions":"1576"},{"ruleId":"1458","severity":1,"message":"1459","line":127,"column":84,"nodeType":"1460","messageId":"1461","endLine":127,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1464","line":31,"column":50,"nodeType":"1399","messageId":"1400","endLine":31,"endColumn":58},{"ruleId":"1397","severity":1,"message":"1465","line":31,"column":60,"nodeType":"1399","messageId":"1400","endLine":31,"endColumn":68},{"ruleId":"1397","severity":1,"message":"1554","line":32,"column":35,"nodeType":"1399","messageId":"1400","endLine":32,"endColumn":52},{"ruleId":"1441","severity":1,"message":"1555","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1577"},{"ruleId":"1397","severity":1,"message":"1433","line":129,"column":11,"nodeType":"1399","messageId":"1400","endLine":129,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1425","line":7,"column":8,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":18},{"ruleId":"1416","severity":1,"message":"1417","line":60,"column":29,"nodeType":"1418","endLine":61,"endColumn":56},{"ruleId":"1397","severity":1,"message":"1433","line":64,"column":11,"nodeType":"1399","messageId":"1400","endLine":64,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1441","severity":1,"message":"1456","line":46,"column":7,"nodeType":"1443","endLine":46,"endColumn":9,"suggestions":"1578"},{"ruleId":"1397","severity":1,"message":"1551","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":19},{"ruleId":"1397","severity":1,"message":"1398","line":95,"column":12,"nodeType":"1399","messageId":"1400","endLine":95,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1401","line":95,"column":22,"nodeType":"1399","messageId":"1400","endLine":95,"endColumn":27},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1458","severity":1,"message":"1540","line":58,"column":31,"nodeType":"1460","messageId":"1541","endLine":58,"endColumn":33},{"ruleId":"1458","severity":1,"message":"1540","line":74,"column":31,"nodeType":"1460","messageId":"1541","endLine":74,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1416","severity":1,"message":"1417","line":31,"column":17,"nodeType":"1418","endLine":31,"endColumn":75},{"ruleId":"1434","severity":1,"message":"1435","line":39,"column":87,"nodeType":"1436","messageId":"1437","endLine":39,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":42,"column":87,"nodeType":"1436","messageId":"1437","endLine":42,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":46,"column":91,"nodeType":"1436","messageId":"1437","endLine":46,"endColumn":92},{"ruleId":"1434","severity":1,"message":"1435","line":50,"column":87,"nodeType":"1436","messageId":"1437","endLine":50,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":53,"column":87,"nodeType":"1436","messageId":"1437","endLine":53,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":65,"column":95,"nodeType":"1436","messageId":"1437","endLine":65,"endColumn":96},{"ruleId":"1434","severity":1,"message":"1435","line":68,"column":95,"nodeType":"1436","messageId":"1437","endLine":68,"endColumn":96},{"ruleId":"1416","severity":1,"message":"1417","line":13,"column":37,"nodeType":"1418","endLine":16,"endColumn":65},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1485","line":6,"column":12,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1488","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1489","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":12},{"ruleId":"1397","severity":1,"message":"1406","line":6,"column":15,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1490","line":12,"column":8,"nodeType":"1399","messageId":"1400","endLine":12,"endColumn":19},{"ruleId":"1441","severity":1,"message":"1491","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1579"},{"ruleId":"1397","severity":1,"message":"1493","line":85,"column":17,"nodeType":"1399","messageId":"1400","endLine":85,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1421","line":145,"column":11,"nodeType":"1399","messageId":"1400","endLine":145,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1547","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1548","line":66,"column":7,"nodeType":"1399","messageId":"1400","endLine":66,"endColumn":16},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":27,"column":29,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1410","line":27,"column":36,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1411","line":27,"column":45,"nodeType":"1399","messageId":"1400","endLine":27,"endColumn":63},{"ruleId":"1397","severity":1,"message":"1412","line":28,"column":13,"nodeType":"1399","messageId":"1400","endLine":28,"endColumn":23},{"ruleId":"1413","severity":1,"message":"1414","line":70,"column":17,"nodeType":"1415","endLine":70,"endColumn":44},{"ruleId":"1416","severity":1,"message":"1417","line":142,"column":33,"nodeType":"1418","endLine":143,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1407","line":3,"column":8,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1414","line":97,"column":17,"nodeType":"1415","endLine":97,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":104,"column":11,"nodeType":"1399","messageId":"1400","endLine":104,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1433","line":118,"column":11,"nodeType":"1399","messageId":"1400","endLine":118,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":166,"column":33,"nodeType":"1418","endLine":167,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1448","line":4,"column":17,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":29},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1413","severity":1,"message":"1414","line":83,"column":17,"nodeType":"1415","endLine":83,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":90,"column":11,"nodeType":"1399","messageId":"1400","endLine":90,"endColumn":20},{"ruleId":"1416","severity":1,"message":"1417","line":256,"column":33,"nodeType":"1418","endLine":257,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1409","line":21,"column":25,"nodeType":"1399","messageId":"1400","endLine":21,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1523","line":22,"column":12,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1524","line":22,"column":54,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":63},{"ruleId":"1441","severity":1,"message":"1525","line":63,"column":7,"nodeType":"1443","endLine":63,"endColumn":9,"suggestions":"1580"},{"ruleId":"1416","severity":1,"message":"1417","line":27,"column":17,"nodeType":"1418","endLine":27,"endColumn":70},{"ruleId":"1434","severity":1,"message":"1435","line":35,"column":79,"nodeType":"1436","messageId":"1437","endLine":35,"endColumn":80},{"ruleId":"1434","severity":1,"message":"1435","line":39,"column":83,"nodeType":"1436","messageId":"1437","endLine":39,"endColumn":84},{"ruleId":"1434","severity":1,"message":"1435","line":47,"column":87,"nodeType":"1436","messageId":"1437","endLine":47,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":50,"column":87,"nodeType":"1436","messageId":"1437","endLine":50,"endColumn":88},{"ruleId":"1416","severity":1,"message":"1417","line":24,"column":17,"nodeType":"1418","endLine":24,"endColumn":75},{"ruleId":"1434","severity":1,"message":"1435","line":52,"column":83,"nodeType":"1436","messageId":"1437","endLine":52,"endColumn":84},{"ruleId":"1434","severity":1,"message":"1435","line":55,"column":83,"nodeType":"1436","messageId":"1437","endLine":55,"endColumn":84},{"ruleId":"1434","severity":1,"message":"1435","line":63,"column":87,"nodeType":"1436","messageId":"1437","endLine":63,"endColumn":88},{"ruleId":"1434","severity":1,"message":"1435","line":66,"column":87,"nodeType":"1436","messageId":"1437","endLine":66,"endColumn":88},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1480","severity":1,"message":"1481","line":77,"column":39,"nodeType":"1482","messageId":"1483","endLine":77,"endColumn":41},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1557","line":4,"column":8,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1548","line":59,"column":7,"nodeType":"1399","messageId":"1400","endLine":59,"endColumn":16},{"ruleId":"1397","severity":1,"message":"1440","line":5,"column":8,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":11,"column":12,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1581","line":16,"column":12,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":26},{"ruleId":"1441","severity":1,"message":"1442","line":46,"column":8,"nodeType":"1443","endLine":46,"endColumn":10,"suggestions":"1582"},{"ruleId":"1397","severity":1,"message":"1583","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1566","line":10,"column":8,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1495","line":26,"column":22,"nodeType":"1399","messageId":"1400","endLine":26,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1496","line":26,"column":32,"nodeType":"1399","messageId":"1400","endLine":26,"endColumn":40},{"ruleId":"1397","severity":1,"message":"1409","line":28,"column":12,"nodeType":"1399","messageId":"1400","endLine":28,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1497","line":29,"column":19,"nodeType":"1399","messageId":"1400","endLine":29,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1498","line":37,"column":7,"nodeType":"1443","endLine":37,"endColumn":9,"suggestions":"1584"},{"ruleId":"1480","severity":1,"message":"1481","line":68,"column":21,"nodeType":"1482","messageId":"1483","endLine":68,"endColumn":23},{"ruleId":"1416","severity":1,"message":"1417","line":149,"column":29,"nodeType":"1418","endLine":149,"endColumn":83},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1419","line":4,"column":31,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":46},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1411","line":29,"column":45,"nodeType":"1399","messageId":"1400","endLine":29,"endColumn":63},{"ruleId":"1413","severity":1,"message":"1414","line":72,"column":17,"nodeType":"1415","endLine":72,"endColumn":44},{"ruleId":"1397","severity":1,"message":"1420","line":88,"column":11,"nodeType":"1399","messageId":"1400","endLine":88,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1421","line":102,"column":11,"nodeType":"1399","messageId":"1400","endLine":102,"endColumn":22},{"ruleId":"1416","severity":1,"message":"1417","line":288,"column":33,"nodeType":"1418","endLine":289,"endColumn":60},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":22,"column":19,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1426","line":22,"column":26,"nodeType":"1399","messageId":"1400","endLine":22,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":15,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":19,"column":29,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":34},{"ruleId":"1397","severity":1,"message":"1426","line":19,"column":36,"nodeType":"1399","messageId":"1400","endLine":19,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1535","line":5,"column":9,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":16},{"ruleId":"1397","severity":1,"message":"1536","line":5,"column":33,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":46},{"ruleId":"1397","severity":1,"message":"1537","line":8,"column":12,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":20},{"ruleId":"1397","severity":1,"message":"1538","line":8,"column":22,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1454","line":9,"column":12,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1539","line":73,"column":7,"nodeType":"1399","messageId":"1400","endLine":73,"endColumn":19},{"ruleId":"1397","severity":1,"message":"1407","line":2,"column":8,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1585","line":4,"column":22,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":33},{"ruleId":"1397","severity":1,"message":"1408","line":11,"column":10,"nodeType":"1399","messageId":"1400","endLine":11,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1586","line":17,"column":12,"nodeType":"1399","messageId":"1400","endLine":17,"endColumn":26},{"ruleId":"1397","severity":1,"message":"1587","line":17,"column":28,"nodeType":"1399","messageId":"1400","endLine":17,"endColumn":45},{"ruleId":"1397","severity":1,"message":"1409","line":18,"column":12,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1588","line":69,"column":8,"nodeType":"1443","endLine":69,"endColumn":10,"suggestions":"1589"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":10,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1406","line":4,"column":16,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1464","line":38,"column":9,"nodeType":"1399","messageId":"1400","endLine":38,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1465","line":39,"column":9,"nodeType":"1399","messageId":"1400","endLine":39,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1466","line":86,"column":8,"nodeType":"1443","endLine":86,"endColumn":10,"suggestions":"1590"},{"ruleId":"1397","severity":1,"message":"1421","line":189,"column":11,"nodeType":"1399","messageId":"1400","endLine":189,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1453","line":196,"column":11,"nodeType":"1399","messageId":"1400","endLine":196,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":18,"column":35,"nodeType":"1399","messageId":"1400","endLine":18,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1503","line":32,"column":7,"nodeType":"1443","endLine":32,"endColumn":9,"suggestions":"1591"},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1406","line":2,"column":15,"nodeType":"1399","messageId":"1400","endLine":2,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1500","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1408","line":10,"column":10,"nodeType":"1399","messageId":"1400","endLine":10,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":17,"column":12,"nodeType":"1399","messageId":"1400","endLine":17,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1501","line":68,"column":8,"nodeType":"1443","endLine":68,"endColumn":10,"suggestions":"1592"},{"ruleId":"1416","severity":1,"message":"1417","line":104,"column":25,"nodeType":"1418","endLine":104,"endColumn":79},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1450","line":5,"column":9,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1451","line":5,"column":24,"nodeType":"1399","messageId":"1400","endLine":5,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1452","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1566","line":9,"column":8,"nodeType":"1399","messageId":"1400","endLine":9,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1409","line":25,"column":38,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":43},{"ruleId":"1397","severity":1,"message":"1426","line":25,"column":45,"nodeType":"1399","messageId":"1400","endLine":25,"endColumn":52},{"ruleId":"1397","severity":1,"message":"1453","line":81,"column":11,"nodeType":"1399","messageId":"1400","endLine":81,"endColumn":23},{"ruleId":"1416","severity":1,"message":"1417","line":9,"column":37,"nodeType":"1418","endLine":12,"endColumn":65},{"ruleId":"1545","severity":1,"message":"1546","line":24,"column":45,"nodeType":"1418","endLine":24,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":25,"column":45,"nodeType":"1418","endLine":25,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":26,"column":45,"nodeType":"1418","endLine":26,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":27,"column":45,"nodeType":"1418","endLine":27,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":35,"column":45,"nodeType":"1418","endLine":35,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":36,"column":45,"nodeType":"1418","endLine":36,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":37,"column":45,"nodeType":"1418","endLine":37,"endColumn":81},{"ruleId":"1545","severity":1,"message":"1546","line":38,"column":45,"nodeType":"1418","endLine":38,"endColumn":81},{"ruleId":"1441","severity":1,"message":"1552","line":40,"column":7,"nodeType":"1443","endLine":40,"endColumn":9,"suggestions":"1593"},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1452","line":6,"column":10,"nodeType":"1399","messageId":"1400","endLine":6,"endColumn":30},{"ruleId":"1397","severity":1,"message":"1409","line":23,"column":35,"nodeType":"1399","messageId":"1400","endLine":23,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1531","line":39,"column":7,"nodeType":"1443","endLine":39,"endColumn":9,"suggestions":"1594"},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":49,"column":7,"nodeType":"1443","endLine":49,"endColumn":9,"suggestions":"1595"},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":10,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":14},{"ruleId":"1397","severity":1,"message":"1406","line":4,"column":16,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1408","line":8,"column":10,"nodeType":"1399","messageId":"1400","endLine":8,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1464","line":38,"column":9,"nodeType":"1399","messageId":"1400","endLine":38,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1465","line":39,"column":9,"nodeType":"1399","messageId":"1400","endLine":39,"endColumn":17},{"ruleId":"1441","severity":1,"message":"1466","line":86,"column":8,"nodeType":"1443","endLine":86,"endColumn":10,"suggestions":"1596"},{"ruleId":"1397","severity":1,"message":"1421","line":189,"column":11,"nodeType":"1399","messageId":"1400","endLine":189,"endColumn":22},{"ruleId":"1397","severity":1,"message":"1453","line":196,"column":11,"nodeType":"1399","messageId":"1400","endLine":196,"endColumn":23},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1408","line":7,"column":10,"nodeType":"1399","messageId":"1400","endLine":7,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1454","line":14,"column":12,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":17},{"ruleId":"1397","severity":1,"message":"1455","line":14,"column":19,"nodeType":"1399","messageId":"1400","endLine":14,"endColumn":27},{"ruleId":"1441","severity":1,"message":"1456","line":48,"column":7,"nodeType":"1443","endLine":48,"endColumn":9,"suggestions":"1597"},{"ruleId":"1397","severity":1,"message":"1506","line":50,"column":11,"nodeType":"1399","messageId":"1400","endLine":50,"endColumn":27},{"ruleId":"1458","severity":1,"message":"1459","line":131,"column":84,"nodeType":"1460","messageId":"1461","endLine":131,"endColumn":86},{"ruleId":"1397","severity":1,"message":"1448","line":3,"column":9,"nodeType":"1399","messageId":"1400","endLine":3,"endColumn":21},{"ruleId":"1397","severity":1,"message":"1449","line":4,"column":9,"nodeType":"1399","messageId":"1400","endLine":4,"endColumn":13},{"ruleId":"1397","severity":1,"message":"1409","line":16,"column":35,"nodeType":"1399","messageId":"1400","endLine":16,"endColumn":40},{"ruleId":"1441","severity":1,"message":"1531","line":30,"column":7,"nodeType":"1443","endLine":30,"endColumn":9,"suggestions":"1598"},{"ruleId":"1397","severity":1,"message":"1530","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":25},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},{"ruleId":"1397","severity":1,"message":"1484","line":1,"column":16,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":24},{"ruleId":"1397","severity":1,"message":"1424","line":1,"column":26,"nodeType":"1399","messageId":"1400","endLine":1,"endColumn":35},"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","no-native-reassign",["1599"],"no-negated-in-lhs",["1600"],"'Redirect' is defined but never used.","'Layout' is defined but never used.","'css' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","'redirectToReferrer' is assigned a value but never used.","'foodlancer' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isAuthenticated' is defined but never used.","'showError' is assigned a value but never used.","'showLoading' is assigned a value but never used.",["1599"],["1600"],"'useEffect' is defined but never used.","'ClipLoader' is defined but never used.","'success' is assigned a value but never used.","'FoodlancerHome' is defined but never used.","'Orders' is defined but never used.",["1599"],["1600"],["1599"],["1600"],"'showSuccess' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["1599"],["1600"],"'Search' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFoodlancerProducts'. Either include it or remove the dependency array.","ArrayExpression",["1601"],["1599"],["1600"],["1602"],"'authenticate' is defined but never used.","'Link' is defined but never used.","'read' is defined but never used.","'contactUser' is defined but never used.","'CountdownCircleTimer' is defined but never used.","'redirectUser' is assigned a value but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["1603"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["1604"],["1605"],"'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["1606"],"React Hook useEffect has a missing dependency: 'loadFoodlancers'. Either include it or remove the dependency array.",["1607"],"'getStatusValues' is defined but never used.","'updateStatusValues' is defined but never used.","'updateFoodies' is defined but never used.","'statusValues' is assigned a value but never used.","'setstatusValues' is assigned a value but never used.","'deleteFoodie' is assigned a value but never used.","'setDeleteFoodie' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadFoodies'. Either include it or remove the dependency array.",["1608"],["1609"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'value' is assigned a value but never used.",["1599"],["1600"],"'getProducts' is defined but never used.","'Card' is defined but never used.","'PulseLoader' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["1610"],"'getNonce' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'loading2' is assigned a value but never used.","'loading3' is assigned a value but never used.","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init', 'limit', 'loadFilterResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["1611"],"'Fade' is defined but never used.","React Hook useEffect has missing dependencies: 'loadKitchensBySell', 'loadProductsByArrival', and 'loadProductsBySell'. Either include them or remove the dependency array.",["1612"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.adminId'. Either include them or remove the dependency array.",["1613"],["1614"],"'showOrdersLength' is assigned a value but never used.",["1615"],["1616"],"React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.",["1617"],"React Hook useEffect has a missing dependency: 'loadAdmins'. Either include it or remove the dependency array.",["1618"],["1619"],["1620"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["1621"],["1622"],["1623"],"'App' is defined but never used.","'orderArray' is assigned a value but never used.","'errorInfo' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_id', 'readFoodlancersFunction', 'readFoodlancersOrdersInformationFunction', and 'token'. Either include them or remove the dependency array.",["1624"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.foodlancerId'. Either include them or remove the dependency array.",["1625"],["1626"],"'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.foodieId'. Either include them or remove the dependency array.",["1627"],["1599"],["1600"],"'addItem' is defined but never used.","'removeProduct' is defined but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","'handleChange' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ShopShowImage' is defined but never used.","'showStock' is assigned a value but never used.","'itemTotal' is defined but never used.","'showViewProductButton' is defined but never used.","'queryString' is defined but never used.","React Hook useEffect has missing dependencies: '_id', 'init', and 'token'. Either include them or remove the dependency array.",["1628"],"'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["1629"],"'moment' is defined but never used.","'foodlancer_id' is assigned a value but never used.",["1630"],["1631"],["1632"],["1633"],"'noProductsFunction' is assigned a value but never used.",["1599"],["1600"],"'Footer' is defined but never used.","React Hook useEffect has a missing dependency: 'loadSingleProduct'. Either include it or remove the dependency array.",["1634"],["1635"],["1636"],["1637"],["1638"],["1639"],["1640"],["1641"],["1642"],["1643"],["1644"],["1645"],["1646"],"'relatedProduct' is assigned a value but never used.",["1647"],"'withRouter' is defined but never used.",["1648"],"'getKitchens' is defined but never used.","'kitchensBySell' is assigned a value but never used.","'setkitchensBySell' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadProductsByArrival' and 'loadProductsBySell'. Either include them or remove the dependency array.",["1649"],["1650"],["1651"],["1652"],["1653"],["1654"],["1655"],["1656"],["1657"],["1658"],"no-global-assign","no-unsafe-negation",{"desc":"1659","fix":"1660"},{"desc":"1659","fix":"1661"},{"desc":"1662","fix":"1663"},{"desc":"1662","fix":"1664"},{"desc":"1662","fix":"1665"},{"desc":"1666","fix":"1667"},{"desc":"1668","fix":"1669"},{"desc":"1670","fix":"1671"},{"desc":"1662","fix":"1672"},{"desc":"1673","fix":"1674"},{"desc":"1675","fix":"1676"},{"desc":"1677","fix":"1678"},{"desc":"1679","fix":"1680"},{"desc":"1662","fix":"1681"},{"desc":"1662","fix":"1682"},{"desc":"1662","fix":"1683"},{"desc":"1684","fix":"1685"},{"desc":"1686","fix":"1687"},{"desc":"1662","fix":"1688"},{"desc":"1662","fix":"1689"},{"desc":"1662","fix":"1690"},{"desc":"1662","fix":"1691"},{"desc":"1662","fix":"1692"},{"desc":"1693","fix":"1694"},{"desc":"1695","fix":"1696"},{"desc":"1695","fix":"1697"},{"desc":"1698","fix":"1699"},{"desc":"1700","fix":"1701"},{"desc":"1702","fix":"1703"},{"desc":"1702","fix":"1704"},{"desc":"1698","fix":"1705"},{"desc":"1666","fix":"1706"},{"desc":"1684","fix":"1707"},{"desc":"1708","fix":"1709"},{"desc":"1662","fix":"1710"},{"desc":"1662","fix":"1711"},{"desc":"1684","fix":"1712"},{"desc":"1662","fix":"1713"},{"desc":"1662","fix":"1714"},{"desc":"1695","fix":"1715"},{"desc":"1670","fix":"1716"},{"desc":"1662","fix":"1717"},{"desc":"1702","fix":"1718"},{"desc":"1662","fix":"1719"},{"desc":"1673","fix":"1720"},{"desc":"1693","fix":"1721"},{"desc":"1659","fix":"1722"},{"desc":"1675","fix":"1723"},{"desc":"1724","fix":"1725"},{"desc":"1666","fix":"1726"},{"desc":"1679","fix":"1727"},{"desc":"1677","fix":"1728"},{"desc":"1700","fix":"1729"},{"desc":"1698","fix":"1730"},{"desc":"1662","fix":"1731"},{"desc":"1666","fix":"1732"},{"desc":"1662","fix":"1733"},{"desc":"1698","fix":"1734"},"Update the dependencies array to be: [loadFoodlancerProducts]",{"range":"1735","text":"1736"},{"range":"1737","text":"1736"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"1738","text":"1739"},{"range":"1740","text":"1739"},{"range":"1741","text":"1739"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"1742","text":"1743"},"Update the dependencies array to be: [loadFoodlancers]",{"range":"1744","text":"1745"},"Update the dependencies array to be: [loadFoodies]",{"range":"1746","text":"1747"},{"range":"1748","text":"1739"},"Update the dependencies array to be: [token, userId]",{"range":"1749","text":"1750"},"Update the dependencies array to be: [init, limit, loadFilterResults, myFilters.filters, skip]",{"range":"1751","text":"1752"},"Update the dependencies array to be: [loadKitchensBySell, loadProductsByArrival, loadProductsBySell]",{"range":"1753","text":"1754"},"Update the dependencies array to be: [init, match.params.adminId]",{"range":"1755","text":"1756"},{"range":"1757","text":"1739"},{"range":"1758","text":"1739"},{"range":"1759","text":"1739"},"Update the dependencies array to be: [loadProducts]",{"range":"1760","text":"1761"},"Update the dependencies array to be: [loadAdmins]",{"range":"1762","text":"1763"},{"range":"1764","text":"1739"},{"range":"1765","text":"1739"},{"range":"1766","text":"1739"},{"range":"1767","text":"1739"},{"range":"1768","text":"1739"},"Update the dependencies array to be: [_id, readFoodlancersFunction, readFoodlancersOrdersInformationFunction, token]",{"range":"1769","text":"1770"},"Update the dependencies array to be: [init, match.params.foodlancerId]",{"range":"1771","text":"1772"},{"range":"1773","text":"1772"},"Update the dependencies array to be: [init, match.params.foodieId]",{"range":"1774","text":"1775"},"Update the dependencies array to be: [_id, init, token]",{"range":"1776","text":"1777"},"Update the dependencies array to be: [init]",{"range":"1778","text":"1779"},{"range":"1780","text":"1779"},{"range":"1781","text":"1775"},{"range":"1782","text":"1743"},{"range":"1783","text":"1761"},"Update the dependencies array to be: [loadSingleProduct, props]",{"range":"1784","text":"1785"},{"range":"1786","text":"1739"},{"range":"1787","text":"1739"},{"range":"1788","text":"1761"},{"range":"1789","text":"1739"},{"range":"1790","text":"1739"},{"range":"1791","text":"1772"},{"range":"1792","text":"1747"},{"range":"1793","text":"1739"},{"range":"1794","text":"1779"},{"range":"1795","text":"1739"},{"range":"1796","text":"1750"},{"range":"1797","text":"1770"},{"range":"1798","text":"1736"},{"range":"1799","text":"1752"},"Update the dependencies array to be: [loadProductsByArrival, loadProductsBySell]",{"range":"1800","text":"1801"},{"range":"1802","text":"1743"},{"range":"1803","text":"1756"},{"range":"1804","text":"1754"},{"range":"1805","text":"1777"},{"range":"1806","text":"1775"},{"range":"1807","text":"1739"},{"range":"1808","text":"1743"},{"range":"1809","text":"1739"},{"range":"1810","text":"1775"},[831,833],"[loadFoodlancerProducts]",[831,833],[1652,1654],"[loadOrders, loadStatusValues]",[1657,1659],[1535,1537],[2642,2644],"[init, match.params.productId]",[1265,1267],"[loadFoodlancers]",[1667,1669],"[loadFoodies]",[1440,1442],[1629,1631],"[token, userId]",[1183,1185],"[init, limit, loadFilterResults, myFilters.filters, skip]",[2235,2237],"[loadKitchensBySell, loadProductsByArrival, loadProductsBySell]",[1047,1049],"[init, match.params.adminId]",[1570,1572],[1578,1580],[1564,1566],[1637,1639],"[loadProducts]",[1220,1222],"[loadAdmins]",[1615,1617],[1658,1660],[1657,1659],[1656,1658],[1656,1658],[2284,2286],"[_id, readFoodlancersFunction, readFoodlancersOrdersInformationFunction, token]",[1162,1164],"[init, match.params.foodlancerId]",[977,979],[958,960],"[init, match.params.foodieId]",[1204,1206],"[_id, init, token]",[1401,1403],"[init]",[1465,1467],[1375,1377],[2647,2649],[1789,1791],[1621,1628],"[loadSingleProduct, props]",[1658,1660],[1615,1617],[1789,1791],[1535,1537],[1570,1572],[977,979],[1667,1669],[1657,1659],[1401,1403],[1440,1442],[1684,1686],[2309,2311],[1726,1728],[1235,1237],[2311,2313],"[loadProductsByArrival, loadProductsBySell]",[2642,2644],[1047,1049],[2235,2237],[1204,1206],[1375,1377],[1652,1654],[2647,2649],[1564,1566],[958,960]]